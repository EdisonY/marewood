{"version":3,"sources":["config/url.js","views/layout/topBar.js","config/index.js","utils/dataStorage.js","components/snackbar/snackbarContentWrapper.js","components/snackbar/index.js","components/snackbar/snackbar.js","components/snackbar/snackbarInstance.js","utils/request.js","views/dashboard/index.js","api/system.js","api/category.js","views/category/edit.js","views/category/index.js","views/repository/repositoryStatus.js","views/repository/repositoryJobStatus.js","api/repository.js","views/repository/edit.js","components/helperTooltips.js","views/repository/index.js","api/job.js","views/job/jobStatus.js","views/job/switchBranchDialog.js","views/job/categoriesTable.js","views/job/edit.js","views/job/index.js","router/route.js","views/error/404.js","views/layout/index.js","App.js","serviceWorker.js","index.js"],"names":["useApiUrl","TopBar","props","className","AppBar","position","color","Toolbar","IconButton","edge","aria-label","onClick","toggle","Typography","variant","style","flexGrow","marginLeft","title","aria-controls","aria-haspopup","process","REACT_APP_MODE","apiUrl","apiPrefix","timeout","requestRetry","requestRetryDelay","siteName","systemInfoKey","userInfoKey","tokenKey","getSystemInfo","key","systemInfo","Storage","get","Config","hasOwnProperty","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","SnackbarContentWrapper","snackbarInstance","classes","onClose","other","Icon","clsx","aria-describedby","id","whiteSpace","action","CustomizeSnackbar","state","open","content","duration","type","this","setState","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","handleClose","bind","React","Component","snackbarDom","document","getElementById","ReactDOM","render","notice","snackbar","openSnackbar","service","Axios","create","baseURL","headers","defaults","retry","retryDelay","interceptors","request","use","config","Promise","reject","response","res","status","data","msg","Dashboard","tableData","params","url","method","then","r","kvConfig","set","detailsConfig","catch","Paper","root","Table","table","TableHead","TableRow","TableCell","TableBody","map","row","Title","component","scope","Array","isArray","Val","join","Desc","withStyles","width","marginTop","overflowX","minWidth","sept","padding","categories","EditCategory","name","desc","field","event","target","value","createSuccess","Dialog","show","aria-labelledby","DialogTitle","DialogContent","TextField","required","autoFocus","margin","onChange","textFieldChange","label","fullWidth","multiline","rows","DialogActions","Button","submitCategory","CategoryTable","destroyDialogShow","editCategoryShow","destroyId","getTableData","align","ID","Name","JobQuantity","CreatedAt","Tooltip","destroyDialogOpen","destroyDialogClose","DialogContentText","destroyConfirm","Fab","fab","editDialogShow","editDialogClose","createCategorySuccess","bottom","right","STATUS","RepositoryStatus","CircularProgress","size","renderCircularProgress","RepositoryJobStatus","repositories","Edit","userName","password","dependTools","InputLabel","Select","dependentSupport","MenuItem","submitForm","HelperTooltips","help","RepositoryTable","editShow","clearTimeout","i","length","Status","JobStatus","setTimeout","UserName","Password","interactive","TerminalInfo","Url","DependTools","toUpperCase","deleteRepositoryDepend","jobsFind","SwitchBranchDialog","branchList","repositoryId","branch","jobId","switchSuccess","onEntering","onEnteredDialog","textAlign","List","ListItem","button","selectBranch","ListItemText","CategoriesTable","switchBranchDialog","PassWord","refresh","RepositoryId","window","Branch","RunQuantity","openJobUrl","WebHookUrl","SuccessScript","BuildDir","BuildCommand","openSwitchBranchDialog","runJob","closeSwitchBranchDialog","buildDir","buildCommand","successScript","isNormal","categoryId","categoryName","Jobs","category","jobs","editDialog","timeoutId","setTabAndJobsByCategoryId","index","Tabs","indicatorColor","textColor","centered","tabsChange","Tab","createClose","path","isMenu","HomeIcon","DashboardIcon","Repository","CategoryIcon","Category","ViewListIcon","Job","FolderOpenIcon","Style","notFound","height","justifyContent","App","Layout","useState","menuState","setMenuState","setTitle","useEffect","initTitle","RouteList","location","pathname","openMenu","menu","history","push","clickRoute","Drawer","anchor","flexDirection","route","exact","from","to","NotFound","CssBaseline","Admin","Boolean","hostname","match","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.935e61e4.chunk.js","sourcesContent":["const devApiUrl = 'http://localhost:8081';//本地开发环境\nconst buildDevApiUrl = 'http://192.168.48.192:9088';//打包开发环境\nconst buildDevTestApiUrl = 'http://192.168.48.192:9288';//打包开发测试环境\nconst buildTestApiUrl = 'http://192.168.48.192:9188';//打包测试环境\nconst buildReleaseApiUrl = 'http://localhost:8081';//打包预发布环境\nconst buildProApiUrl = 'http://localhost:8081';//打包正式环境\n\n\nlet useApiUrl,\n    nodeEnv = process.env.NODE_ENV,\n    appMode = process.env.REACT_APP_MODE;\n\nif('development' === nodeEnv){\n    useApiUrl = devApiUrl;\n}\n\nif('production' === nodeEnv){\n    switch (appMode) {\n        case 'buildDev':\n            useApiUrl = buildDevApiUrl;\n            break;\n        case 'buildDevTest':\n            useApiUrl = buildDevTestApiUrl;\n            break;\n        case 'buildTest':\n            useApiUrl = buildTestApiUrl;\n            break;\n        case 'release':\n            useApiUrl = buildReleaseApiUrl;\n            break;\n        default:\n            useApiUrl = buildProApiUrl;\n            break;\n    }\n}\n\nexport default useApiUrl;\n","import React from 'react';\nimport { AppBar,Toolbar,IconButton} from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\n\nconst TopBar = props => {\n    return (\n        <div className=\"topBar\">\n            <AppBar position=\"static\" color=\"default\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={ props.toggle }>\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" style={{flexGrow: 1,marginLeft:20}}>\n                        { props.title }\n                    </Typography>\n                    <div>\n                        <IconButton\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n};\n\nexport default TopBar\n","import ApiUrl from './url.js'\n\nexport default {\n    apiUrl: ApiUrl,\n    apiPrefix: 'v1',\n    timeout: 10000,\n    requestRetry:4,\n    requestRetryDelay:800,\n    siteName: \"FEAutoDeploy\",\n    systemInfoKey: \"FEAutoDeploy_SYSTEM_INFO\",\n    userInfoKey:\"FEAutoDeploy_USER_INFO\",//添加前缀（FEAutoDeploy）可以在一个域名下存在多个应用\n    tokenKey: \"FEAutoDeploy_ACCESS_TOKEN\",\n}\n","import Storage from 'good-storage'\nimport Config from '../config/index.js'\n\n\nexport function getUserInfo(key = null){\n    let userInfo = Storage.get(Config.userInfoKey);\n    if(key)return userInfo.hasOwnProperty(key) ? userInfo[key] : null;\n    return userInfo\n}\n\nexport function setUserInfo(user){\n    Storage.set(Config.userInfoKey,user);\n    return user\n}\n\n\nexport function getToken() {\n    return Storage.get(Config.tokenKey)\n}\n\nexport function setToken(token) {\n    return Storage.set(Config.tokenKey, token)\n}\n\n\nexport function getSystemInfo(key = null) {\n    let systemInfo = Storage.get(Config.systemInfoKey);\n    if(key)return systemInfo.hasOwnProperty(key) ? systemInfo[key] : null;\n    return systemInfo\n}\n\nexport function setSystemInfo(info) {\n    Storage.set(Config.systemInfoKey,info);\n    return info\n}\n\nexport function removeToken() {\n    return Storage.remove(Config.tokenKey)\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {amber, green} from '@material-ui/core/colors/index';\nimport IconButton from '@material-ui/core/IconButton/index';\nimport SnackbarContent from '@material-ui/core/SnackbarContent/index';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport {makeStyles} from '@material-ui/core/styles/index';\n\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\nconst useStyles = makeStyles(theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\nfunction SnackbarContentWrapper(props) {\n    const classes = useStyles();\n    const {message, onClose, variant, ...other} = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant])}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message} style={{whiteSpace: \"pre-wrap\"}}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\n                    {message}\n        </span>\n            }\n            action={[\n                <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n                    <CloseIcon className={classes.icon}/>\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nSnackbarContentWrapper.propTypes = {\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\n};\n\nexport default SnackbarContentWrapper\n","import snackbar from './snackbarInstance'\n\n\nlet snackbarInstance;\nconst notice = (type, content, duration ) => {\n    if (!snackbarInstance) snackbarInstance = snackbar;\n    return snackbarInstance.openSnackbar(type, content, duration)\n};\n\nexport default {\n    info(content, duration= 5000) {\n        return notice('info', content, duration)\n    },\n    success(content, duration= 5000) {\n        return notice('success', content, duration)\n    },\n    warning(content, duration= 5000) {\n        return notice('warning', content, duration)\n    },\n    error(content, duration= 5000) {\n        return notice('error', content, duration)\n    },\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContentWrapper from './snackbarContentWrapper'\n\n\nclass CustomizeSnackbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            content:\"\",\n            duration:4000,\n            type:\"info\"\n        };\n    }\n    openSnackbar(type, content, duration){\n        this.setState({\n            open: true,\n            type:type,\n            content:content,\n            duration:duration\n        })\n    }\n    handleClose() {\n        this.setState({open: false})\n    }\n\n    render() {\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                open={this.state.open}\n                autoHideDuration={this.state.duration}\n                onClose={this.handleClose.bind(this)}\n            >\n                <SnackbarContentWrapper\n                    onClose={this.handleClose.bind(this)}\n                    variant={this.state.type}\n                    message={this.state.content}\n                />\n            </Snackbar>\n        );\n    }\n}\n\nexport default CustomizeSnackbar\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Snackbar from './snackbar'\n\nconst snackbarDom = document.getElementById('snackbar');\n\nexport default ReactDOM.render(<Snackbar/>, snackbarDom);\n","import Axios from 'axios'\nimport Config from '../config/index'\nimport {getToken} from '../utils/dataStorage'\nimport Snackbar from '../components/snackbar/index'\n\n\nconst service = Axios.create({\n    baseURL: Config.apiUrl + '/' + Config.apiPrefix,\n    headers: {\n        'Accept': '*/*'\n    },\n    timeout: Config.timeout\n});\n\nservice.defaults.retry = Config.requestRetry;\nservice.defaults.retryDelay = Config.requestRetryDelay;\n\n\nservice.interceptors.request.use(\n    config => {\n        config.headers['Authorization'] = getToken() || '';\n        return config\n    },\n    error => {\n        Promise.reject(error)\n    }\n);\n\n\nservice.interceptors.response.use(\n    res => {\n        if (res.status !== 200) {\n            Snackbar.error(\"Status Code Is Not 200\");\n            return Promise.reject(res)\n        } else {\n            if (res.data.status !== true) {\n                Snackbar.warning(res.data.msg);\n                return Promise.reject(res);\n            }\n            return res.data.data\n        }\n    },\n    error => {\n        Snackbar.error(error.message);\n        return Promise.reject(error)\n    }\n);\n\nexport default service\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { systemInfo } from \"../../api/system\";\nimport { setSystemInfo } from \"../../utils/dataStorage\"\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n    },\n    sept: {\n        marginTop:20,\n        padding: theme.spacing(3, 2),\n    },\n});\n\n\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tableData: [],\n        };\n    }\n    componentDidMount() {\n        systemInfo().then(r=>{\n            setSystemInfo(r.kvConfig);\n            this.setState({tableData:r.detailsConfig})\n        }).catch(()=>{})\n    }\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n                <Paper className={classes.root}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>标题</TableCell>\n                                <TableCell>值</TableCell>\n                                <TableCell>备注</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.tableData.map(row => (\n                                <TableRow key={row.Title}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {row.Title}\n                                    </TableCell>\n                                    <TableCell>{Array.isArray(row.Val) ? row.Val.join(\" | \") : row.Val}</TableCell>\n                                    <TableCell>{row.Desc}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dashboard)\n\n","import request from '../utils/request.js'\n\n/**\n * 系统信息\n * @param params\n * @returns {AxiosPromise}\n */\nexport function systemInfo(params) {\n    return request({\n        url:  '/system/info',\n        method: 'get',\n        params: params\n    })\n}\n\n","import request from '../utils/request.js'\n\n/**\n * 获取全部分类\n * @param params\n * @returns {AxiosPromise}\n */\nexport function categories(params) {\n    return request({\n        url:  '/categories',\n        method: 'get',\n        params: params\n    })\n}\n\n\n/**\n * 删除分类\n * @param params\n * @returns {AxiosPromise}\n */\nexport function destroy(params) {\n    return request({\n        url:  '/category/delete',\n        method: 'get',\n        params: params\n    })\n}\n\n/**\n * 编辑\n * @param params\n * @returns {AxiosPromise}\n */\nexport function create(params) {\n    return request({\n        url:  '/category/create',\n        method: 'post',\n        data: params\n    })\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport {create} from '../../api/category.js'\n\n\n\nclass EditCategory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name:'',\n            desc:''\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    textFieldChange(field, event){\n        this.setState({[field]:event.target.value})\n    }\n    submitCategory(){\n        create(this.state).then(r=>{\n            this.props.createSuccess()\n        }).catch(()=>{})\n    }\n\n    render() {\n        return (\n            <div>\n                <Dialog open={this.props.show} onClose={this.props.handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">编辑分类</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            required\n                            autoFocus\n                            value={this.state.name}\n                            margin=\"dense\"\n                            id=\"name\"\n                            onChange={this.textFieldChange.bind(this,'name')}\n                            label=\"分类名称\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            value={this.state.desc}\n                            id=\"desc\"\n                            multiline\n                            rows={2}\n                            onChange={this.textFieldChange.bind(this,'desc')}\n                            label=\"分类描述\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.props.handleClose}>\n                            关闭\n                        </Button>\n                        <Button onClick={this.submitCategory.bind(this)} color=\"primary\">\n                            确认\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n\n}\n\n\nexport default EditCategory","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n    Table, TableRow, TableBody, TableHead, TableCell, Paper, Fab, IconButton, Button,\n    Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Tooltip\n} from '@material-ui/core';\nimport EditCategory from './edit.js'\nimport {categories,destroy} from '../../api/category.js'\nimport Snackbar from \"../../components/snackbar\";\n\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n    },\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n});\n\n\nclass CategoryTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tableData:[],\n            destroyDialogShow:false,\n            editCategoryShow:false\n        };\n        this.destroyId = 0;\n    }\n\n    componentDidMount() {\n        this.getTableData()\n    }\n\n    getTableData(){\n        categories().then(r=>{\n            this.setState({tableData:r})\n        }).catch(()=>{})\n    }\n\n    destroyDialogOpen(id){\n        this.destroyId = id;\n        this.setState({destroyDialogShow:true})\n    }\n\n    destroyDialogClose () {\n        this.setState({destroyDialogShow:false})\n    }\n    destroyConfirm () {\n        destroy({id:this.destroyId}).then(r=>{\n            Snackbar.success(\"删除成功！\");\n            this.setState({destroyDialogShow:false});\n            this.getTableData()\n        }).catch(()=>{})\n    }\n    editDialogShow () {\n        this.setState({editCategoryShow:true})\n    }\n    editDialogClose () {\n        this.setState({editCategoryShow:false})\n    }\n\n    createCategorySuccess(){\n        this.setState({editCategoryShow:false});\n        this.getTableData()\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <Paper className={classes.root}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>ID</TableCell>\n                                <TableCell align=\"left\">分类名字</TableCell>\n                                <TableCell align=\"left\">任务数量</TableCell>\n                                <TableCell align=\"left\">备注</TableCell>\n                                <TableCell align=\"left\">创建时间</TableCell>\n                                <TableCell align=\"left\">操作</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.tableData.map(row => (\n                                <TableRow key={row.ID}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {row.ID}\n                                    </TableCell>\n                                    <TableCell align=\"left\">{row.Name}</TableCell>\n                                    <TableCell align=\"left\">{ row.JobQuantity }</TableCell>\n                                    <TableCell align=\"left\">{row.Desc}</TableCell>\n                                    <TableCell align=\"left\">{row.CreatedAt}</TableCell>\n                                    <TableCell align=\"left\">\n                                        <Tooltip title=\"删除分类\">\n                                            <IconButton edge=\"start\" color=\"primary\" onClick={this.destroyDialogOpen.bind(this,row.ID)}>\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <Dialog\n                    open={this.state.destroyDialogShow}\n                    onClose={this.destroyDialogClose.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"确认删除分类?\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            如果你确认要删除这个分类，请确保在这个分类下面已经没有任何任务了。\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.destroyDialogClose.bind(this)} color=\"primary\">\n                            关闭\n                        </Button>\n                        <Button onClick={this.destroyConfirm.bind(this)} color=\"secondary\" autoFocus>\n                            确认\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Fab color=\"primary\" className={classes.fab} aria-label=\"add\" onClick={this.editDialogShow.bind(this)}>\n                    <AddIcon />\n                </Fab>\n                <EditCategory\n                    show={this.state.editCategoryShow}\n                    handleClose={this.editDialogClose.bind(this)}\n                    createSuccess={this.createCategorySuccess.bind(this)}\n                />\n            </div>\n        );\n    }\n\n}\n\n\nexport default withStyles(styles)(CategoryTable)\n","import React from 'react';\nimport {CircularProgress, IconButton, Tooltip} from \"@material-ui/core\";\n\nconst STATUS = [\"代码克隆中\",\"代码克隆完成\",\"代码克隆失败\"];\n\nclass RepositoryStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={}\n    }\n    renderCircularProgress(status){\n        if (0 === status) return (<CircularProgress size={20} />);\n        if (1 === status ) return (<CircularProgress variant=\"static\" value={100} size={20}/>);\n        return (<CircularProgress variant=\"static\" value={100} size={20} color=\"secondary\"/>);\n    }\n    render() {\n        return (\n            <div>\n                <Tooltip title={STATUS[this.props.status]}>\n                    <IconButton  color=\"primary\">\n                        {this.renderCircularProgress(this.props.status)}\n                    </IconButton>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\n\nexport default RepositoryStatus\n","import React from 'react';\nimport {CircularProgress, IconButton, Tooltip} from \"@material-ui/core\";\n\nconst STATUS = [\"给我安排任务吧，现在空闲🤗\",\"资源被占用，非常忙😤\"];\n\nclass RepositoryJobStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={}\n    }\n    renderCircularProgress(status){\n        if (1 === status) return (<CircularProgress size={20} color=\"secondary\" />);\n        return (<CircularProgress variant=\"static\" value={100} size={20}/>);\n    }\n    render() {\n        return (\n            <div>\n                <Tooltip title={STATUS[this.props.status]}>\n                    <IconButton  color=\"primary\">\n                        {this.renderCircularProgress(this.props.status)}\n                    </IconButton>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\n\nexport default RepositoryJobStatus\n","import request from '../utils/request.js'\n\n\n\n/**\n * 更新仓库代码\n * @param params\n * @returns {AxiosPromise}\n */\nexport function gitPull(params) {\n    return request({\n        url:  '/repository/git_pull',\n        method: 'get',\n        params: params\n    })\n}\n\n/**\n * 通过仓库 ID 获取分支\n * @param params\n * @returns {AxiosPromise}\n */\nexport function gitBranch(params) {\n    return request({\n        url:  '/repository/git_branch',\n        method: 'get',\n        params: params\n    })\n}\n\n\n\n/**\n * 删除仓库依赖\n * @param params\n * @returns {AxiosPromise}\n */\nexport function deleteDepend(params) {\n    return request({\n        url:  '/repository/delete_depend',\n        method: 'get',\n        params: params\n    })\n}\n\n\n\n\n/**\n * 获取全部仓库\n * @param params\n * @returns {AxiosPromise}\n */\nexport function repositories(params) {\n    return request({\n        url:  '/repositories',\n        method: 'get',\n        params: params\n    })\n}\n\n\n/**\n * 删除仓库\n * @param params\n * @returns {AxiosPromise}\n */\nexport function destroy(params) {\n    return request({\n        url:  '/repository/delete',\n        method: 'get',\n        params: params\n    })\n}\n\n\n\n/**\n * 编辑\n * @param params\n * @returns {AxiosPromise}\n */\nexport function create(params) {\n    return request({\n        url:  '/repository/create',\n        method: 'post',\n        data: params\n    })\n}\n","import React from 'react';\n\nimport {\n    Button,TextField,Dialog,DialogActions,InputLabel,\n    DialogContent,DialogTitle,Select,MenuItem\n} from '@material-ui/core';\nimport {create} from '../../api/repository'\n\n\n\nclass Edit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name:'',\n            url:'',\n            desc:'',\n            userName:'',\n            password:'',\n            dependTools:'',\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    textFieldChange(field, event){\n        this.setState({[field]:event.target.value})\n    }\n    submitForm(){\n        create(this.state).then(r=>{\n            this.props.createSuccess()\n        }).catch(()=>{})\n    }\n\n    render() {\n        return (\n            <div>\n                <Dialog open={this.props.show} onClose={this.props.handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">编辑仓库</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            required autoFocus value={this.state.name} margin=\"dense\" id=\"name\"\n                            onChange={this.textFieldChange.bind(this,'name')} label=\"仓库名称\" type=\"text\" fullWidth\n                        />\n                        <TextField\n                            required autoFocus value={this.state.url} margin=\"dense\" id=\"url\"\n                            onChange={this.textFieldChange.bind(this,'url')} label=\"仓库Url\" type=\"text\" fullWidth\n                        />\n                        <TextField\n                            autoFocus value={this.state.userName} margin=\"dense\" id=\"userName\"\n                            onChange={this.textFieldChange.bind(this,'userName')} label=\"用户名\" type=\"text\" fullWidth\n                        />\n                        <TextField\n                            autoFocus value={this.state.password} margin=\"dense\" id=\"password\"\n                            onChange={this.textFieldChange.bind(this,'password')} label=\"密码\" type=\"password\" fullWidth\n                        />\n                        <InputLabel style={{marginTop:10,fontSize:\"12px\"}}>依赖安装工具</InputLabel>\n                        <Select\n                            style={{width:\"100%\"}}\n                            value={this.state.dependTools}\n                            onChange={this.textFieldChange.bind(this,'dependTools')}\n                        >\n                            {\n                                this.props.dependentSupport.map(r=>{\n                                    return <MenuItem key={r} value={r}>{r}</MenuItem>\n                                })\n                            }\n                        </Select>\n                        <TextField\n                            margin=\"dense\" value={this.state.desc} id=\"desc\" multiline rows={6}\n                            onChange={this.textFieldChange.bind(this,'desc')} label=\"仓库描述\" type=\"text\" fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.props.handleClose}>\n                            关闭\n                        </Button>\n                        <Button onClick={this.submitForm.bind(this)} color=\"primary\">\n                            确认\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Edit\n","import React from 'react';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport {Tooltip} from '@material-ui/core';\n\n\nclass HelperTooltips extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n\n    }\n    render() {\n        return (\n            <Tooltip title={this.props.help}>\n                <HelpOutlineIcon fontSize=\"small\"/>\n            </Tooltip>\n        );\n    }\n}\n\nexport default HelperTooltips\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RestoreFromTrash from '@material-ui/icons/RestoreFromTrash';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen'\nimport Computer from '@material-ui/icons/Computer';\nimport Announcement from '@material-ui/icons/Announcement';\nimport LinkIcon from '@material-ui/icons/Link'\nimport {\n    Dialog, DialogContent, DialogTitle, DialogContentText, Tooltip,\n    DialogActions, Button, IconButton, Fab, Paper, TableRow, TableHead, TableCell, TableBody, Table\n} from '@material-ui/core';\nimport RepositoryStatus from './repositoryStatus'\nimport RepositoryJobStatus from './repositoryJobStatus'\nimport Edit from './edit'\nimport HelperTooltips from \"../../components/helperTooltips\"\nimport {repositories, destroy,deleteDepend} from '../../api/repository'\nimport Snackbar from '../../components/snackbar/index'\nimport { getSystemInfo } from \"../../utils/dataStorage\"\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n    },\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n});\n\n\nclass RepositoryTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tableData: [],\n            destroyDialogShow: false,\n            editShow: false,\n            dependentSupport: getSystemInfo(\"DependTools\")\n        };\n        this.destroyId = 0; //记录当前要删除的id\n        this.timeout = null;\n    }\n\n    componentDidMount() {\n        this.getTableData()\n    }\n    componentWillUnmount() {\n        if(this.timeout)clearTimeout(this.timeout);\n    }\n    getTableData() {\n        if(this.timeout)clearTimeout(this.timeout);\n\n        repositories().then(r => {\n            this.setState({tableData: r});\n\n            for (let i = 0; i < r.length; i++) {\n                if (r[i].Status === 0 || (r[i].JobStatus === 1 && r[i].Status === 1 )) {\n                    //仓库正在克隆当中  或者 （一个正常的仓库很繁忙）的情况就会刷新\n                    this.timeout = setTimeout(()=>{\n                        this.getTableData()\n                    },5000);\n                    return\n                }\n            }\n\n        }).catch(() => {})\n    }\n\n    destroyDialogOpen(id) {\n        this.destroyId = id;\n        this.setState({destroyDialogShow: true})\n    }\n\n    destroyDialogClose() {\n        this.setState({destroyDialogShow: false})\n    }\n    deleteRepositoryDepend(row){\n        if(row.Status !== 1){\n            Snackbar.warning(\"仓库状态不正常，无法删除依赖\");\n            return\n        }\n        deleteDepend({id:row.ID}).then(r=>{\n            Snackbar.success(r);\n            // this.getTableData()\n        }).catch(()=>{})\n    }\n    destroyConfirm() {\n        destroy({id: this.destroyId}).then(r => {\n            this.setState({destroyDialogShow: false});\n            this.getTableData()\n        }).catch(() => {\n        })\n    }\n\n    editDialogShow() {\n        this.setState({editShow: true})\n    }\n\n    editDialogClose() {\n        this.setState({editShow: false})\n    }\n\n    createSuccess() {\n        this.setState({editShow: false});\n        this.getTableData()\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n                <Paper className={classes.root}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>ID</TableCell>\n                                <TableCell align=\"center\">仓库名字</TableCell>\n                                <TableCell align=\"center\">克隆状态</TableCell>\n                                <TableCell align=\"center\">\n                                    工作状态\n                                    <HelperTooltips help=\"当前工作目录正在执行其他部署任务，资源被占用\" />\n                                </TableCell>\n                                <TableCell align=\"center\">仓库权限</TableCell>\n                                <TableCell align=\"center\">终端信息</TableCell>\n                                <TableCell align=\"center\">备注</TableCell>\n                                <TableCell align=\"center\">仓库地址</TableCell>\n                                <TableCell align=\"center\">依赖工具</TableCell>\n                                <TableCell align=\"center\">操作</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.tableData.map(row => (\n                                <TableRow key={row.ID}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {row.ID}\n                                    </TableCell>\n                                    <TableCell align=\"center\">{row.Name}</TableCell>\n                                    <TableCell align=\"center\">\n                                        <RepositoryStatus status={row.Status}/>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <RepositoryJobStatus status={row.JobStatus} />\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {\n                                            row.UserName && row.Password ? (\n                                                <Tooltip title={\n                                                    <div>\n                                                        用户名：{row.UserName}\n                                                        <br/>\n                                                        密码：{row.Password}\n                                                    </div>\n                                                } interactive>\n                                                    <IconButton color=\"primary\">\n                                                        <LockIcon/>\n                                                    </IconButton>\n                                                </Tooltip>\n                                            ) : (\n                                                <Tooltip title=\"仓库非私密\" interactive>\n                                                    <IconButton color=\"primary\">\n                                                        <LockOpenIcon/>\n                                                    </IconButton>\n                                                </Tooltip>\n                                            )\n                                        }\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <Tooltip title={\n                                            <div style={{whiteSpace: \"pre-wrap\"}}>\n                                                {row.TerminalInfo}\n                                            </div>\n                                        } interactive>\n                                            <IconButton color=\"primary\">\n                                                <Computer/>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                        <Tooltip title={row.Desc} interactive>\n                                            <IconButton color=\"primary\">\n                                                <Announcement/>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <Tooltip title={row.Url} interactive>\n                                            <IconButton color=\"primary\">\n                                                <LinkIcon/>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <span className=\"tag\">{(row.DependTools).toUpperCase()}</span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <Tooltip title=\"删除仓库\" interactive>\n                                            <IconButton color=\"primary\"\n                                                        onClick={this.destroyDialogOpen.bind(this, row.ID)}>\n                                                <DeleteIcon/>\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title=\"删除依赖\" interactive>\n                                            <IconButton color=\"primary\" onClick={this.deleteRepositoryDepend.bind(this,row)}>\n                                                <RestoreFromTrash/>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <Dialog\n                    open={this.state.destroyDialogShow}\n                    onClose={this.destroyDialogClose.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"确认删除仓库?\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            你确认要删除这个仓库？没有任务使用此仓库才能删除。\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.destroyDialogClose.bind(this)} color=\"primary\">\n                            关闭\n                        </Button>\n                        <Button onClick={this.destroyConfirm.bind(this)} color=\"secondary\" autoFocus>\n                            确认\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Fab color=\"primary\" className={classes.fab} aria-label=\"add\" onClick={this.editDialogShow.bind(this)}>\n                    <AddIcon/>\n                </Fab>\n                <Edit\n                    dependentSupport={this.state.dependentSupport}\n                    show={this.state.editShow}\n                    handleClose={this.editDialogClose.bind(this)}\n                    createSuccess={this.createSuccess.bind(this)}\n                />\n            </div>\n        );\n    }\n\n}\n\n\nexport default withStyles(styles)(RepositoryTable)\n","import request from '../utils/request.js'\n\n/**\n * 获取全部任务\n * @param params\n * @returns {AxiosPromise}\n */\nexport function jobs(params) {\n    return request({\n        url:  '/jobs',\n        method: 'get',\n        params: params\n    })\n}\n\n/**\n * 通过分类ID获取任务\n * @param params\n * @returns {AxiosPromise}\n */\nexport function jobsFind(params) {\n    return request({\n        url:  '/jobs_find',\n        method: 'get',\n        params: params\n    })\n}\n\n/**\n * 任务创建\n * @param params\n * @returns {AxiosPromise}\n */\nexport function create(params) {\n    return request({\n        url:  '/job/create',\n        method: 'post',\n        data: params\n    })\n}\n\n\n/**\n * 修改任务分支\n * @param params\n * @returns {AxiosPromise}\n */\nexport function updateBranch(params) {\n    return request({\n        url:  '/job/update_branch',\n        method: 'get',\n        params: params\n    })\n}\n\n/**\n * 删除\n * @param params\n * @returns {AxiosPromise}\n */\nexport function destroy(params) {\n    return request({\n        url:  '/job/delete',\n        method: 'get',\n        params: params\n    })\n}\n\n/**\n * 运行任务\n * @param params\n * @returns {AxiosPromise}\n */\nexport function RunJob(params) {\n    return request({\n        url:  '/job/run',\n        method: 'get',\n        params: params\n    })\n}\n","import React from 'react';\nimport {CircularProgress, IconButton, Tooltip} from \"@material-ui/core\";\n\n\nconst STATUS = [\"任务空闲\",\"打包成功\",\"打包失败\",\"正在打包\"];\n\nclass RepositoryStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state ={}\n    }\n    renderCircularProgress(status){\n        if (0 === status) return (<CircularProgress variant=\"static\" style={{color:\"#9E9E9E\"}} value={100} size={20}/>);\n        if (1 === status ) return (<CircularProgress variant=\"static\" value={100} size={20}/>);\n        if (2 === status ) return (<CircularProgress variant=\"static\" value={100} size={20} color=\"secondary\"/>);\n        return (<CircularProgress size={20} />);\n    }\n    render() {\n        return (\n            <div>\n                <Tooltip title={STATUS[this.props.status]}>\n                    <IconButton  color=\"primary\">\n                        {this.renderCircularProgress(this.props.status)}\n                    </IconButton>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\n\nexport default RepositoryStatus\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {gitBranch} from \"../../api/repository\";\nimport { updateBranch } from \"../../api/job\"\n\nclass SwitchBranchDialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            branchList:[]\n        };\n    }\n\n    componentDidMount() {\n\n    }\n    onEnteredDialog(){\n        this.setState({branchList:[]});\n        gitBranch({id:this.props.repositoryId}).then(r=>{\n            this.setState({branchList:r})\n        }).catch(()=>{})\n    }\n    selectBranch(branch){\n        updateBranch({branch:branch,id:this.props.jobId}).then(()=>{\n            this.props.switchSuccess()\n        }).catch(()=>{})\n    }\n\n    render() {\n        return (\n            <Dialog open={this.props.open} onEntering={this.onEnteredDialog.bind(this)} onClose={this.props.onClose} aria-labelledby=\"dialog-title\">\n                <DialogTitle id=\"dialog-title\">切换当前任务的分支</DialogTitle>\n                <div style={{textAlign:\"center\"}} >{ this.state.branchList.length === 0 ? \"分支无法使用\": \"\"}</div>\n                <List>\n                    {this.state.branchList.map(branch => (\n                        <ListItem button onClick={this.selectBranch.bind(this,branch)} key={branch}>\n                            <ListItemText primary={branch} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Dialog>\n        );\n    }\n\n}\n\nSwitchBranchDialog.propTypes = {\n    onClose: PropTypes.func,\n    open: PropTypes.bool,\n    jobId: PropTypes.number,\n    repositoryId:PropTypes.number,\n    switchSuccess: PropTypes.func,\n};\n\nexport default SwitchBranchDialog","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport LinkIcon from '@material-ui/icons/Link'\nimport LinkOffIcon from '@material-ui/icons/LinkOff'\nimport UsbIcon from '@material-ui/icons/Usb'\nimport Computer from '@material-ui/icons/Computer';\nimport Announcement from '@material-ui/icons/Announcement';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport DeviceHub from '@material-ui/icons/DeviceHub';\nimport {\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n    Table,\n    Tooltip,\n    IconButton,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions, Button, Dialog\n} from '@material-ui/core';\nimport JobStatus from \"./jobStatus\"\nimport HelperTooltips from \"../../components/helperTooltips\";\nimport SwitchBranchDialog from \"./switchBranchDialog\"\nimport Snackbar from '../../components/snackbar/index'\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpenIcon from '@material-ui/icons/LockOpen'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {destroy,RunJob} from \"../../api/job\";\n\n\nconst styles = theme => ({\n    table: {\n        marginTop: theme.spacing(3),\n        minWidth: 650,\n    },\n});\n\n\nclass CategoriesTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            destroyDialogShow:false,\n            switchBranchDialog:{\n                id:0,\n                show:false,\n                repositoryId:0,\n            }\n        };\n        this.destroyId = 0;\n    }\n\n    componentDidMount() {\n\n    }\n    componentWillUnmount() {\n\n    }\n    runJob(row){\n        if(row.Status === 3){\n            Snackbar.warning(\"任务正在打包，请稍等\");\n            return\n        }\n        if(row.PassWord !== \"\"){\n            Snackbar.warning(\"任务有密码，未做\");\n            return\n        }\n        RunJob({id:row.ID}).then(r=>{\n            Snackbar.success(\"运行成功，正在打包\");\n            this.props.refresh()\n        }).catch(()=>{})\n    }\n    openSwitchBranchDialog(row){\n        if(row.Status === 3){\n            Snackbar.warning(\"任务正在打包，请稍等\");\n            return\n        }\n        this.setState({\n            switchBranchDialog:{\n                id:row.ID,\n                show:true,\n                repositoryId:row.RepositoryId\n            }\n        })\n    }\n    switchSuccess(){\n        this.setState({\n            switchBranchDialog:{\n                id:0,\n                show:false,\n                repositoryId:0\n            }\n        });\n        this.props.refresh();\n    }\n    closeSwitchBranchDialog(){\n        this.setState({\n            switchBranchDialog:{\n                id:0,\n                show:false,\n                repositoryId:0\n            }\n        })\n    }\n    destroyDialogOpen(id){\n        this.destroyId = id;\n        this.setState({destroyDialogShow:true})\n    }\n\n    destroyDialogClose () {\n        this.setState({destroyDialogShow:false})\n    }\n    destroyConfirm () {\n        destroy({id:this.destroyId}).then(r=>{\n            Snackbar.success(\"删除成功！\");\n            this.setState({destroyDialogShow:false});\n            this.props.refresh()\n        }).catch(()=>{})\n    }\n    openJobUrl(row){\n        if(row.Status !== 1){\n            Snackbar.error(\"任务没有打包成功！\");\n            return\n        }\n        window.open(row.Url)\n    }\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n                <Table className={classes.table}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">ID</TableCell>\n                            <TableCell align=\"center\">加密</TableCell>\n                            <TableCell align=\"center\">任务名称</TableCell>\n                            <TableCell align=\"center\">任务状态</TableCell>\n                            <TableCell align=\"center\">\n                                当前分支\n                                <HelperTooltips help=\"当前任务分支，如有需要请先切换分支\"/>\n                            </TableCell>\n                            <TableCell align=\"center\">运行次数</TableCell>\n                            <TableCell align=\"center\">\n                                访问地址\n                                <HelperTooltips help=\"打包成功时可访问的页面🤓\"/>\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                WebHook\n                                <HelperTooltips help=\"触发任务的钩子，目前没有使用队列，如果任务资源被占用则无法打包\"/>\n                            </TableCell>\n                            <TableCell align=\"center\">终端信息</TableCell>\n                            <TableCell align=\"center\">\n                                附加脚本\n                                <HelperTooltips help=\"打包成功运行的脚本，多个用 ; 隔开\"/>\n                            </TableCell>\n                            <TableCell align=\"center\">任务描述</TableCell>\n                            <TableCell align=\"center\">打包目录</TableCell>\n                            <TableCell align=\"center\">打包命令</TableCell>\n                            <TableCell align=\"center\">操作</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            this.props.tableData.map(row => (\n                                <TableRow key={row.ID}>\n                                    <TableCell align=\"center\">{row.ID}</TableCell>\n                                    <TableCell align=\"center\">\n                                        {\n                                            row.PassWord ? (\n                                                <Tooltip title=\"任务被加密\" interactive>\n                                                    <IconButton color=\"primary\">\n                                                        <LockIcon/>\n                                                    </IconButton>\n                                                </Tooltip>\n                                            ) : (\n                                                <Tooltip title=\"任务公开\" interactive>\n                                                    <IconButton color=\"primary\">\n                                                        <LockOpenIcon/>\n                                                    </IconButton>\n                                                </Tooltip>\n                                            )\n                                        }\n                                    </TableCell>\n                                    <TableCell align=\"center\" style={{fontSize:\"12px\"}}>{row.Name}</TableCell>\n                                    <TableCell align=\"center\">\n                                        <JobStatus status={row.Status} />\n                                    </TableCell>\n                                    <TableCell align=\"center\">{row.Branch}</TableCell>\n                                    <TableCell align=\"center\">{row.RunQuantity}</TableCell>\n                                    <TableCell align=\"center\">\n                                        <Tooltip title={row.Status !== 1 ? \"没有打包成功之前是不能访问的\" : row.Url} interactive>\n                                            <IconButton color=\"primary\" onClick={this.openJobUrl.bind(this,row)}>\n                                                { row.Status !== 1 ? <LinkOffIcon/>: <LinkIcon/>}\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <Tooltip title={ row.WebHookUrl } interactive>\n                                            <IconButton color=\"primary\">\n                                                <UsbIcon/>\n                                            </IconButton>\n                                        </Tooltip>\n\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <Tooltip title={\n                                            <div style={{whiteSpace: \"pre-wrap\"}}>\n                                                {row.TerminalInfo}\n                                            </div>\n                                        } interactive>\n                                            <IconButton color=\"primary\">\n                                                <Computer/>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <Tooltip title={\n                                            <div style={{whiteSpace: \"pre-wrap\"}}>\n                                                {row.SuccessScript}\n                                            </div>\n                                        } interactive>\n                                            <IconButton color=\"primary\">\n                                                <Computer/>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <Tooltip title={row.Desc} interactive>\n                                            <IconButton color=\"primary\">\n                                                <Announcement/>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <span className=\"tag\">{(row.BuildDir)}</span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <span className=\"tag\">{(row.BuildCommand)}</span>\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <Tooltip title=\"切换分支\" interactive>\n                                            <IconButton color=\"primary\" onClick={this.openSwitchBranchDialog.bind(this,row)}>\n                                                <DeviceHub/>\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title=\"运行任务\" interactive>\n                                            <IconButton color=\"primary\"\n                                                        onClick={this.runJob.bind(this, row)}>\n                                                <PlayCircleFilled/>\n                                            </IconButton>\n                                        </Tooltip>\n                                        <Tooltip title=\"删除任务\" interactive>\n                                            <IconButton color=\"primary\"\n                                                        onClick={this.destroyDialogOpen.bind(this,row.ID)}>\n                                                <DeleteIcon/>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </TableCell>\n                                </TableRow>\n                            ))\n                        }\n                    </TableBody>\n                </Table>\n                <SwitchBranchDialog\n                    jobId={this.state.switchBranchDialog.id}\n                    repositoryId={this.state.switchBranchDialog.repositoryId}\n                    open={this.state.switchBranchDialog.show}\n                    onClose={this.closeSwitchBranchDialog.bind(this)}\n                    switchSuccess={this.switchSuccess.bind(this)}/>\n                <Dialog\n                    open={this.state.destroyDialogShow}\n                    onClose={this.destroyDialogClose.bind(this)}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"确认删除任务?\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            你确认要删除这个任务？\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.destroyDialogClose.bind(this)} color=\"primary\">\n                            关闭\n                        </Button>\n                        <Button onClick={this.destroyConfirm.bind(this)} color=\"secondary\" autoFocus>\n                            确认\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n\n}\n\n\nexport default withStyles(styles)(CategoriesTable)\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport {\n    Button,TextField,Dialog,DialogActions,InputLabel,\n    DialogContent,DialogTitle,Select,MenuItem\n} from '@material-ui/core';\nimport {create} from '../../api/job'\nimport { repositories } from '../../api/repository'\n\n\n\n\nclass Edit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name:'',\n            desc:'',\n            repositoryId:'',\n            buildDir:'dist',\n            buildCommand:'build',\n            password:'',\n            successScript:'',\n            repositories:[]\n        };\n    }\n\n    componentDidMount() {\n        repositories({isNormal:1}).then(r=>{\n            this.setState({repositories:r})\n        }).catch(()=>{})\n    }\n    textFieldChange(field, event){\n        this.setState({[field]:event.target.value})\n    }\n    submitForm(){\n        create({...this.state,categoryId:this.props.categoryId}).then(r=>{\n            this.props.createSuccess()\n        }).catch(()=>{})\n    }\n\n    render() {\n        return (\n            <div>\n                <Dialog open={this.props.show} onClose={this.props.handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">在《{this.props.categoryName}》分类下添加任务</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            required autoFocus value={this.state.name} margin=\"dense\" id=\"name\"\n                            onChange={this.textFieldChange.bind(this,'name')} label=\"任务名称\" type=\"text\" fullWidth\n                        />\n                        <InputLabel style={{marginTop:10,fontSize:\"12px\"}}>选择仓库</InputLabel>\n                        <Select\n                            style={{width:\"100%\"}}\n                            value={this.state.repositoryId}\n                            onChange={this.textFieldChange.bind(this,'repositoryId')}\n                        >\n                            {\n                                this.state.repositories.map(r=>{\n                                    return <MenuItem key={r.ID} value={r.ID}>{r.Name}</MenuItem>\n                                })\n                            }\n                        </Select>\n\n                        <TextField\n                            required\n                            autoFocus value={this.state.buildDir} margin=\"dense\" id=\"buildDir\"\n                            onChange={this.textFieldChange.bind(this,'buildDir')} label=\"打包目录\" type=\"text\" fullWidth\n                        />\n                        <TextField\n                            required\n                            autoFocus value={this.state.buildCommand} margin=\"dense\" id=\"buildCommand\"\n                            onChange={this.textFieldChange.bind(this,'buildCommand')} label=\"打包命令\" type=\"text\" fullWidth\n                        />\n\n                        <TextField\n                            autoFocus value={this.state.password} margin=\"dense\" id=\"password\"\n                            onChange={this.textFieldChange.bind(this,'password')} label=\"任务加密\" type=\"password\" fullWidth\n                        />\n                        <TextField\n                            margin=\"dense\" value={this.state.successScript} id=\"desc\" multiline rows={6}\n                            onChange={this.textFieldChange.bind(this,'successScript')} label=\"打包成功执行的命令（用户权限模块没有完成，现在不会运行）\" type=\"text\" fullWidth\n                        />\n                        <TextField\n                            margin=\"dense\" value={this.state.desc} id=\"desc\" multiline rows={6}\n                            onChange={this.textFieldChange.bind(this,'desc')} label=\"任务描述\" type=\"text\" fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.props.handleClose}>\n                            关闭\n                        </Button>\n                        <Button onClick={this.submitForm.bind(this)} color=\"primary\">\n                            确认\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n\n}\n\nEdit.propTypes = {\n    show:PropTypes.bool.isRequired,\n    categoryId: PropTypes.number.isRequired,\n    categoryName: PropTypes.string.isRequired,\n};\n\nexport default Edit\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport {\n    Tab, Tabs, Paper, Fab\n} from '@material-ui/core';\nimport {jobsFind} from '../../api/job'\nimport {categories} from '../../api/category'\nimport CategoriesTable from \"./categoriesTable\"\nimport Edit from \"./edit\"\nimport AddIcon from '@material-ui/icons/Add';\n\n\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n    },\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n});\n\n\nclass Jobs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            category:0,\n            categories:[],\n            jobs:[],\n            editDialog:{\n                show:false,\n                categoryId:0,\n                categoryName:\"\"\n            }\n        };\n        this.timeoutId = null;\n    }\n\n    componentDidMount() {\n\n        categories().then(r=>{\n            this.setState({categories:r},()=>{\n                this.setTabAndJobsByCategoryId(0)\n            });\n        }).catch(()=>{})\n    }\n    tabsChange(event, index){\n        this.setTabAndJobsByCategoryId(index)\n    }\n    setTabAndJobsByCategoryId(index = 0){\n        let categoryId = this.state.categories[index].ID;\n        if(this.timeoutId){\n            clearTimeout(this.timeoutId)\n        }\n        jobsFind({id:categoryId}).then(r=>{\n            this.setState({category:index,jobs:r});\n            for (let i = 0; i < r.length; i++) {\n                if (r[i].Status === 3) {\n                    this.timeoutId = setTimeout(()=>{\n                        this.setTabAndJobsByCategoryId(index)\n                    },5000);\n                    return\n                }\n            }\n        }).catch(()=>{})\n    }\n    editDialogShow() {\n        let category = this.state.categories[this.state.category];\n        this.setState({\n            editDialog: {\n                show: true,\n                categoryId: category.ID,\n                categoryName:category.Name\n            }\n        })\n    }\n    createSuccess() {\n        this.setTabAndJobsByCategoryId(this.state.category);\n        this.setState({\n            editDialog: {\n                show: false,\n                categoryId: 0,\n                categoryName:\"\"\n            }\n        });\n    }\n    createClose() {\n        this.setState({\n            editDialog: {\n                show: false,\n                categoryId: 0,\n                categoryName:\"\"\n            }\n        });\n    }\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n                <Paper className={classes.root}>\n                    <Tabs\n                        value={this.state.category}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        centered\n                        onChange={this.tabsChange.bind(this)}\n                    >\n                        {\n                            this.state.categories.map(category=>(\n                                <Tab key={category.ID} label={category.Name} />\n                            ))\n                        }\n                    </Tabs>\n                    <CategoriesTable tableData={this.state.jobs} refresh={this.setTabAndJobsByCategoryId.bind(this,this.state.category)}/>\n                </Paper>\n                <Fab color=\"primary\" className={classes.fab} aria-label=\"add\" onClick={this.editDialogShow.bind(this)}>\n                    <AddIcon/>\n                </Fab>\n                <Edit show={this.state.editDialog.show}\n                      categoryId={this.state.editDialog.categoryId}\n                      categoryName={this.state.editDialog.categoryName}\n                      handleClose={this.createClose.bind(this)}\n                      createSuccess={this.createSuccess.bind(this)}\n                />\n            </div>\n        );\n    }\n\n}\n\n\nexport default withStyles(styles)(Jobs)\n","import Dashboard from '../views/dashboard';\nimport Category from '../views/category';\nimport Repository from '../views/repository';\nimport Job from '../views/job';\n\nimport CategoryIcon from '@material-ui/icons/Category';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\n\n\n\n//https://material.io/resources/icons/?style=baseline\n\n\nexport default [\n    {\n        title:'仪表盘',\n        path:'/dashboard',\n        isMenu:true,\n        icon:HomeIcon,\n        component:Dashboard\n\n    },\n    {\n        title:'仓库列表',\n        path:'/repository',\n        isMenu:true,\n        icon:DashboardIcon,\n        component:Repository\n    },\n    {\n        title:'任务分类',\n        path:'/category',\n        isMenu:true,\n        icon:CategoryIcon,\n        component:Category\n    },\n    {\n        title:'部署任务',\n        path:'/job',\n        isMenu:true,\n        icon:ViewListIcon,\n        component:Job\n    },\n    {\n        title:'工具箱',\n        path:'/folder',\n        isMenu:true,\n        icon:FolderOpenIcon,\n        component:Dashboard\n    },\n\n]\n","import React from 'react';\n\n\nconst Style = {\n    notFound:{\n        width: '100%',\n        height: '100%',\n        fontSize: '80px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    }\n};\n\nfunction App() {\n    return (\n        <div style={Style.notFound}>\n            404  :(\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport {Switch, Route, Redirect} from \"react-router-dom\";\nimport Drawer from '@material-ui/core/Drawer';\nimport TopBar from './topBar.js'\nimport RouteList from '../../router/route'\nimport NotFound from '../error/404'\nimport {IconButton} from \"@material-ui/core\";\nimport './admin.scss'\n\n\nconst Layout = props => {\n\n    const [menuState,setMenuState] = React.useState(false);\n    const [title,setTitle] = React.useState('');\n\n    React.useEffect(() => {\n        let initTitle = '404';\n        // RouteList.forEach(r=>{if(r.path === props.location.pathname ){\n        //     initTitle = r.title\n        // }});\n\n\n        for (let i=0;i<RouteList.length;i++){\n            let r = RouteList[i];\n            if(r.path === props.location.pathname){\n                initTitle = r.title;\n                break;\n            }\n        }\n\n        setTitle(initTitle);\n        document.title = initTitle;\n    },[props.location.pathname]);\n\n\n    const openMenu = (menu)=>{\n        if(menu.path === props.location.pathname) return;\n        setTitle(menu.title);\n        setMenuState(false);\n        props.history.push(menu.path);\n    };\n\n    return (\n        <div id=\"admin\" className=\"admin\">\n            <TopBar title={title} toggle={()=>{setMenuState(true)}} clickRoute={openMenu} />\n            <Drawer anchor=\"top\" open={menuState} onClose={()=>{setMenuState(false)}} style={{flexDirection:\"column\"}}>\n                <div className=\"menuList\">\n                    {\n                        RouteList.map(menu => {\n                            if(menu.isMenu)\n                            return (\n                                <div className=\"menuBox\" key={menu.path}>\n                                    <IconButton edge=\"start\" color=\"primary\" aria-label=\"menu\" onClick={()=>{openMenu(menu)}}>\n                                        <menu.icon/>\n                                    </IconButton>\n                                    <p>{ menu.title }</p>\n                                </div>\n                            );\n                            return false;\n                        })\n                    }\n                </div>\n            </Drawer>\n            <div className=\"container\">\n                <Switch>\n                    {\n                        RouteList.map(route => {\n                            return (\n                                <Route exact key={route.path} path={route.path} component={route.component}/>\n                            )\n                        })\n                    }\n                    <Redirect exact from=\"/\" to=\"/dashboard\"/>\n                    <Route exact key='*' path=\"*\" component={NotFound}/>\n                </Switch>\n            </div>\n        </div>\n    );\n\n};\n\n\nexport default Layout;\n","import React from \"react\";\nimport {HashRouter, Switch, Route} from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Admin from './views/layout/index.js'\n\n\nfunction App() {\n    return (\n        <div>\n            <CssBaseline/>\n            <HashRouter>\n                <Switch>\n                    {/*login page*/}\n                    <Route path=\"/\" component={Admin} />\n                </Switch>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style/style.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}