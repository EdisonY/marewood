{"version":3,"sources":["assets/img/logo.svg","config/index.js","utils/dataStorage.js","config/url.js","components/snackbar/snackbarContentWrapper.js","components/snackbar/index.js","components/snackbar/snackbar.js","components/snackbar/snackbarInstance.js","utils/websocket.js","config/role.js","views/layout/topBar.js","utils/request.js","views/dashboard/index.js","api/system.js","api/category.js","views/category/edit.js","components/editField.js","views/category/index.js","api/repository.js","views/repository/edit.js","components/helperTooltips.js","views/repository/repositoryStatus.js","views/repository/repositoryJobStatus.js","assets/jss/common.js","views/repository/repositoryTable.js","views/repository/index.js","api/job.js","views/job/jobStatus.js","views/job/switchBranchDialog.js","views/job/categoriesTable.js","views/job/edit.js","views/job/index.js","api/user.js","views/users/roleDesc.js","views/users/index.js","router/route.js","views/layout/index.js","components/copyright.js","views/login/index.js","views/register/index.js","views/error/404.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","apiPrefix","timeout","requestRetry","requestRetryDelay","siteName","systemInfoKey","userInfoKey","tokenKey","getToken","Storage","get","Config","getSystemInfo","key","systemInfo","hasOwnProperty","appMode","process","REACT_APP_MODE","host","useApiUrl","window","location","origin","REACT_APP_API_URL","slice","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","SnackbarContentWrapper","snackbarInstance","props","classes","onClose","variant","other","Icon","className","clsx","aria-describedby","id","style","whiteSpace","action","aria-label","color","onClick","CustomizeSnackbar","state","open","content","duration","type","this","setState","setTimeout","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","handleClose","bind","React","Component","snackbarDom","document","getElementById","ReactDOM","render","notice","snackbar","openSnackbar","UpdateDataTypeIsNotice","UpdateDataTypeIsRepoAction","UpdateDataTypeIsCategoryAction","UpdateDataTypeIsJobAction","UpdateDataTypeIsUserAction","connWebsocket","token","ws","WebSocket","addEventListener","r","data","JSON","parse","Type","Message","UpdateDataType","wsFuncJob","wsFuncRepo","wsFuncCategory","wsFuncUser","e","1","2","3","4","Logo","require","UserInfo","userInfo","getUserInfo","TopBar","useState","anchorEl","setAnchorEl","AppBar","position","Toolbar","edge","toggle","width","height","src","alt","Typography","flexGrow","marginLeft","title","Chip","event","currentTarget","label","Username","Menu","keepMounted","Boolean","MenuItem","Role","Link","href","NProgress","configure","showSpinner","service","Axios","create","baseURL","headers","Accept","defaults","retry","retryDelay","interceptors","request","use","config","start","Promise","reject","response","res","done","status","msg","Dashboard","tableData","params","url","method","then","kvConfig","set","detailsConfig","catch","Paper","root","Table","table","TableHead","TableRow","TableCell","TableBody","map","row","Title","component","scope","Array","isArray","Val","join","Desc","withStyles","marginTop","overflowX","minWidth","sept","padding","categories","EditCategory","name","desc","field","target","value","createSuccess","Dialog","show","aria-labelledby","DialogTitle","DialogContent","TextField","required","margin","onChange","textFieldChange","fullWidth","multiline","rows","DialogActions","Button","submitCategory","closeButton","right","top","grey","children","disableTypography","MuiDialogContent","MuiDialogActions","EditField","fieldContent","editSuccess","onEntering","onEnteredDialog","dividers","InputLabelProps","shrink","autoFocus","saveFieldContent","defaultProps","CategoryTable","destroyDialogShow","editCategoryShow","editField","destroyId","getTableData","inputRows","ID","closeResetEditFieldDialog","align","hover","cursor","clickEditField","Name","JobQuantity","Tooltip","tooltip","interactive","CreatedAt","destroyDialogOpen","destroyDialogClose","DialogContentText","destroyConfirm","Fab","fab","editDialogShow","editFieldSuccess","editDialogClose","createCategorySuccess","bottom","repositoryFind","Edit","userName","password","dependTools","select","dependentSupport","submitForm","HelperTooltips","help","STATUS","RepositoryStatus","CircularProgress","size","renderCircularProgress","RepositoryJobStatus","maxWidth","maxHeight","overflowY","RepositoryTable","Status","refresh","Url","JobStatus","UserName","Password","TerminalInfo","DependTools","toUpperCase","repositoryGitPull","repositoryPruneBranch","discardRepoChange","deleteRepositoryDepend","editShow","totalPage","pageNum","pageSize","List","TotalPage","PageNum","v","pagination","Pagination","count","page","changePagination","shape","justifyContent","textAlign","jobsFind","SwitchBranchDialog","branchList","repositoryId","branch","jobId","switchSuccess","length","ListItem","button","selectBranch","ListItemText","CategoriesTable","switchBranchDialog","lockPassword","addressUrl","LockPassword","RepositoryId","p","User","toggleLock","Branch","RunQuantity","Fragment","rel","openJobUrl","WebHookUrl","BuildDir","BuildCommand","openSwitchBranchDialog","runJob","closeEditFieldDialog","closeSwitchBranchDialog","closeLockJobDialog","passwordFieldChange","lockJobDialogConfirm","buildDir","buildCommand","successScript","repositories","buildCommandList","isNormal","onChangeRepository","dev","categoryId","categoryName","Object","keys","Jobs","category","jobs","editDialog","timeoutId","setTabAndJobsByCategoryId","alert","index","clearTimeout","Tabs","indicatorColor","textColor","centered","tabsChange","Tab","createClose","roleEdit","RLOECOLOR","RoleDesc","role","getUserList","isUp","destroyUser","path","isMenu","HomeIcon","DashboardIcon","Repository","CategoryIcon","Category","ViewListIcon","Job","PeopleIcon","Users","withRouter","menuState","setMenuState","setTitle","useEffect","i","RouteList","pathname","openMenu","menu","history","push","clickRoute","Drawer","anchor","flexDirection","route","exact","from","to","Copyright","Date","getFullYear","paper","avatar","secondary","form","submit","SignIn","rememberMe","localStorage","getItem","initLoginInfo","checked","setChecked","username","setUsername","setPassword","Container","marginBottom","noValidate","FormControlLabel","control","Checkbox","setItem","removeItem","user","Token","stringify","Grid","container","item","xs","Box","mt","SignUp","justify","Style","notFound","App","CssBaseline","Register","Login","NotFound","hostname","match","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qHAAAA,EAAOC,QAAU,IAA0B,kC,uLCA5B,GACbC,UAAW,KACXC,QAAS,IACTC,aAAc,EACdC,kBAAmB,IACnBC,SAAU,WACVC,cAAe,uBACfC,YAAa,qBACbC,SAAU,yBCML,SAASC,IACd,OAAOC,IAAQC,IAAIC,EAAOJ,UAOrB,SAASK,IAA2B,IAAbC,EAAY,uDAAN,KAC9BC,EAAaL,IAAQC,IAAIC,EAAON,gBAAkB,GACtD,OAAIQ,EAAYC,EAAWC,eAAeF,GAAOC,EAAWD,GAAO,KAC5DC,ECzBT,IACME,EAAUC,+CAAYC,eAExBC,EAAO,iBACPC,EAAY,UAAYD,EAG1B,OAAQH,GACN,IAAK,WACHI,EAAY,6BACZ,MACF,IAAK,eAGL,IAAK,YAGL,IAAK,WACHA,EAAY,6BACZ,MACF,QACEA,EAAYC,OAAOC,SAASC,OAKW,kBAAlCN,+CAAYO,oBACrBJ,EAAYH,+CAAYO,mBAGI,SAA1BJ,EAAUK,MAAM,EAAG,KACrBL,EAAYC,OAAOC,SAASC,OAASH,G,qNClBjCM,EAAc,CAClBC,QAASC,IACTC,QAASC,IACTC,MAAOC,IACPC,KAAMC,KAEFC,EAAYC,qBAAW,SAAAC,GAAK,MAAK,CACrCV,QAAS,CACPW,gBAAiBC,QAAM,MAEzBR,MAAO,CACLO,gBAAiBD,EAAMG,QAAQT,MAAMU,MAEvCR,KAAM,CACJK,gBAAiBD,EAAMG,QAAQE,QAAQC,MAEzCd,QAAS,CACPS,gBAAiBM,QAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAaZ,EAAMa,QAAQ,IAE7BC,QAAS,CACPC,QAAS,OACTC,WAAY,aA4CDC,ICnFXC,EDmFWD,EAxCf,SAAgCE,GAC9B,IAAMC,EAAUtB,IACRgB,EAAwCK,EAAxCL,QAASO,EAA+BF,EAA/BE,QAASC,EAAsBH,EAAtBG,QAAYC,EAFD,YAEWJ,EAFX,iCAG/BK,EAAOnC,EAAYiC,GAEzB,OACE,kBAAC,IAAD,eACEG,UAAWC,kBAAKN,EAAQE,IACxBK,mBAAiB,kBACjBb,QACE,0BACEc,GAAG,kBACHH,UAAWL,EAAQN,QACnBe,MAAO,CAAEC,WAAY,aAErB,kBAACN,EAAD,CAAMC,UAAWC,kBAAKN,EAAQZ,KAAMY,EAAQV,eAC3CI,GAGLiB,OAAQ,CACN,kBAAC,IAAD,CACEvD,IAAI,QACJwD,aAAW,QACXC,MAAM,UACNC,QAASb,GAET,kBAAC,IAAD,CAAWI,UAAWL,EAAQZ,UAG9Be,KEfKY,E,YAtDb,WAAYhB,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACXC,MAAM,EACNC,QAAS,GACTC,SAAU,IACVC,KAAM,QANS,E,0EASNA,EAAMF,EAASC,GAAW,IAAD,OAChCE,KAAKL,MAAMC,MACbI,KAAKC,SAAS,CAAEL,MAAM,IACtBM,WAAW,WACT,EAAKD,SAAS,CACZL,MAAM,EACNG,KAAMA,EACNF,QAASA,EACTC,SAAUA,KAEX,MAEHE,KAAKC,SAAS,CACZL,MAAM,EACNG,KAAMA,EACNF,QAASA,EACTC,SAAUA,M,oCAKdE,KAAKC,SAAS,CAAEL,MAAM,M,+BAItB,OACE,kBAACO,EAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdV,KAAMI,KAAKL,MAAMC,KACjBW,iBAAkBP,KAAKL,MAAMG,SAC7BlB,QAASoB,KAAKQ,YAAYC,KAAKT,OAE/B,kBAAC,EAAD,CACEpB,QAASoB,KAAKQ,YAAYC,KAAKT,MAC/BnB,QAASmB,KAAKL,MAAMI,KACpB1B,QAAS2B,KAAKL,MAAME,e,GAhDEa,IAAMC,WCAhCC,EAAcC,SAASC,eAAe,YAE7BC,MAASC,OAAO,kBAAC,EAAD,MAAcJ,GFHhCK,EAAS,SAAClB,EAAMF,GAA8B,IAArBC,EAAoB,uDAAT,IAE/C,OADKrB,IAAkBA,EAAmByC,GACnCzC,EAAiB0C,aAAapB,EAAMF,EAASC,IAGvC,GACb3C,KADa,SACR0C,GAA2B,IAAlBC,EAAiB,uDAAN,IACvB,OAAOmB,EAAO,OAAQpB,EAASC,IAEjCjD,QAJa,SAILgD,GAA2B,IAAlBC,EAAiB,uDAAN,IAC1B,OAAOmB,EAAO,UAAWpB,EAASC,IAEpC/C,QAPa,SAOL8C,GAA2B,IAAlBC,EAAiB,uDAAN,IAC1B,OAAOmB,EAAO,UAAWpB,EAASC,IAEpC7C,MAVa,SAUP4C,GAA2B,IAAlBC,EAAiB,uDAAN,IACxB,OAAOmB,EAAO,QAASpB,EAASC,KGhB9BsB,EAAyB,EAC7BC,EAA6B,EAC7BC,EAAiC,EACjCC,EAA4B,EAC5BC,EAA6B,EAExB,SAASC,EAAcC,GAC5BnF,OAAOoF,GAAK,IAAIC,UAAJ,eAAsBvF,EAAtB,4BAA8CqF,IAE1DnF,OAAOoF,GAAGE,iBAAiB,UAAW,SAAAC,GACpC,IAAIC,EAAOC,KAAKC,MAAMH,EAAEC,MACxBd,EAAOc,EAAKG,KAAMH,EAAKI,SAEnBJ,EAAKK,iBAAmBhB,IAGxBW,EAAKK,iBAAmBb,GAA6BhF,OAAO8F,UAC9D9F,OAAO8F,YAIPN,EAAKK,iBAAmBf,GACxB9E,OAAO+F,WAEP/F,OAAO+F,aAIPP,EAAKK,iBAAmBd,GACxB/E,OAAOgG,eAEPhG,OAAOgG,iBAIPR,EAAKK,iBAAmBZ,GACxBjF,OAAOiG,YAEPjG,OAAOiG,gBAIXjG,OAAOoF,GAAGE,iBAAiB,QAAS,SAAAY,GAClCtC,EAASlD,MAAM,8C,kIC9CJ,IACbyF,EAAG,iCACHC,EAAG,qBACHC,EAAG,qBACHC,EAAG,4BCQCC,GAAOC,EAAQ,KACjBC,GRVG,WAAkC,IAAbjH,EAAY,uDAAN,KAC5BkH,EAAWtH,IAAQC,IAAIC,EAAOL,cAAgB,GAClD,OAAIO,EAAYkH,EAAShH,eAAeF,GAAOkH,EAASlH,GAAO,KACxDkH,EQOMC,GA2DAC,GAzDA,SAAAzE,GAAU,IAAD,EACUgC,IAAM0C,SAAS,MADzB,oBACfC,EADe,KACLC,EADK,KAWtB,OACE,yBAAKtE,UAAU,UACb,kBAACuE,GAAA,EAAD,CAAQC,SAAS,SAAShE,MAAM,WAC9B,kBAACiE,GAAA,EAAD,KACE,kBAAC,KAAD,CACEC,KAAK,QACLlE,MAAM,UACND,aAAW,OACXE,QAASf,EAAMiF,QAGf,yBAAKvE,MAAO,CAAEwE,MAAO,GAAIC,OAAQ,GAAIvF,QAAS,SAC5C,yBAAKc,MAAO,CAAEwE,MAAO,IAAME,IAAKhB,GAAMiB,IAAI,OAG9C,kBAACC,GAAA,EAAD,CAAYnF,QAAQ,KAAKO,MAAO,CAAE6E,SAAU,EAAGC,WAAY,KACxDxF,EAAMyF,OAET,6BAIE,kBAACC,GAAA,EAAD,CACE3E,QA/BQ,SAAA4E,GAClBf,EAAYe,EAAMC,gBA+BR9E,MAAM,UACN+E,MAAOvB,GAASwB,WAElB,kBAACC,GAAA,EAAD,CACEtF,GAAG,YACHkE,SAAUA,EACVqB,aAAW,EACX9E,KAAM+E,QAAQtB,GACdzE,QApCQ,WAClB0E,EAAY,QAqCF,kBAACsB,GAAA,EAAD,KAAWC,GAAK7B,GAAS6B,OACzB,kBAACC,GAAA,EAAD,CAAMC,KAAK,WACT,kBAACH,GAAA,EAAD,4B,4GCvDhBI,KAAUC,UAAU,CAAEC,aAAa,IACnC,IAAMC,GAAUC,KAAMC,OAAO,CAC3BC,QAAShJ,EAAY,IAAMT,EAAOX,UAClCqK,QAAS,CACPC,OAAQ,OAEVrK,QAASU,EAAOV,UAGlBgK,GAAQM,SAASC,MAAQ7J,EAAOT,aAChC+J,GAAQM,SAASE,WAAa9J,EAAOR,kBAErC8J,GAAQS,aAAaC,QAAQC,IAC3B,SAAAC,GAGE,OAFAf,KAAUgB,QACVD,EAAOR,QAAP,cAAkC7J,KAAc,GACzCqK,GAET,SAAA9I,GACEgJ,QAAQC,OAAOjJ,KAInBkI,GAAQS,aAAaO,SAASL,IAC5B,SAAAM,GAEE,OADApB,KAAUqB,OACS,MAAfD,EAAIE,QACNnG,EAASlD,MAAM,0BACRgJ,QAAQC,OAAOE,KAEE,IAApBA,EAAIrE,KAAKuE,QACXnG,EAASpD,QAAQqJ,EAAIrE,KAAKwE,KACnBN,QAAQC,OAAOE,IAEjBA,EAAIrE,KAAKA,MAGpB,SAAA9E,GAGE,OAFAkD,EAASlD,MAAMA,EAAMoB,SACrB2G,KAAUqB,OACHJ,QAAQC,OAAOjJ,KAIXkI,UCzCf,IAeMqB,G,YACJ,WAAY9H,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACX8G,UAAW,IAHI,E,iFAME,ICzBIC,EDyBL,OCxBbb,GAAQ,CACbc,IAAK,eACLC,OAAQ,MACRF,OAAQA,IDuBLG,KAAK,SAAA/E,GVNL,IAAuB3E,IUOR2E,EAAEgF,SVNtBnL,IAAQoL,IAAIlL,EAAON,cAAe4B,GUO5B,EAAK8C,SAAS,CAAEwG,UAAW3E,EAAEkF,kBAE9BC,MAAM,gB,+BAED,IACAtI,EAAYqB,KAAKtB,MAAjBC,QACR,OACE,6BACE,kBAACuI,GAAA,EAAD,CAAOlI,UAAWL,EAAQwI,MACxB,kBAACC,GAAA,EAAD,CAAOpI,UAAWL,EAAQ0I,OACxB,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,uBAGJ,kBAACC,GAAA,EAAD,KACGzH,KAAKL,MAAM8G,UAAUiB,IAAI,SAAAC,GAAG,OAC3B,kBAACJ,GAAA,EAAD,CAAUxL,IAAK4L,EAAIC,OACjB,kBAACJ,GAAA,EAAD,CAAWK,UAAU,KAAKC,MAAM,OAC7BH,EAAIC,OAEP,kBAACJ,GAAA,EAAD,KACGO,MAAMC,QAAQL,EAAIM,KAAON,EAAIM,IAAIC,KAAK,OAASP,EAAIM,KAEtD,kBAACT,GAAA,EAAD,KAAYG,EAAIQ,iB,GArCVzH,IAAMC,WAgDfyH,gBA/DA,SAAA7K,GAAK,MAAK,CACvB4J,KAAM,CACJvD,MAAO,OACPyE,UAAW9K,EAAMa,QAAQ,GACzBkK,UAAW,QAEbjB,MAAO,CACLkB,SAAU,KAEZC,KAAM,CACJH,UAAW,GACXI,QAASlL,EAAMa,QAAQ,EAAG,MAoDfgK,CAAmB5B,I,+JElE3B,SAASkC,GAAWhC,GACzB,OAAOb,GAAQ,CACbc,IAAK,cACLC,OAAQ,MACRF,OAAQA,I,ICiEGiC,G,YAjEb,WAAYjK,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACXiJ,KAAM,GACNC,KAAM,IAJS,E,0HAUHC,EAAOzE,GACrBrE,KAAKC,SAAL,gBAAiB6I,EAAQzE,EAAM0E,OAAOC,U,uCAEtB,IDSGtC,ECTJ,QDSIA,ECRZ1G,KAAKL,MDSPkG,GAAQ,CACbc,IAAK,mBACLC,OAAQ,OACR7E,KAAM2E,KCXHG,KAAK,SAAA/E,GACJ,EAAKpD,MAAMuK,kBAEZhC,MAAM,gB,+BAIT,OACE,6BACE,kBAACiC,GAAA,EAAD,CACEtJ,KAAMI,KAAKtB,MAAMyK,KACjBvK,QAASoB,KAAKtB,MAAM8B,YACpB4I,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAalK,GAAG,qBAAhB,4BACA,kBAACmK,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,UAAQ,EACRR,MAAOhJ,KAAKL,MAAMiJ,KAClBa,OAAO,QACPtK,GAAG,OACHuK,SAAU1J,KAAK2J,gBAAgBlJ,KAAKT,KAAM,QAC1CuE,MAAM,2BACNxE,KAAK,OACL6J,WAAS,IAEX,kBAACL,GAAA,EAAD,CACEE,OAAO,QACPT,MAAOhJ,KAAKL,MAAMkJ,KAClB1J,GAAG,OACH0K,WAAS,EACTC,KAAM,EACNJ,SAAU1J,KAAK2J,gBAAgBlJ,KAAKT,KAAM,QAC1CuE,MAAM,2BACNxE,KAAK,OACL6J,WAAS,KAGb,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQvK,QAASO,KAAKtB,MAAM8B,aAA5B,gBACA,kBAACwJ,GAAA,EAAD,CAAQvK,QAASO,KAAKiK,eAAexJ,KAAKT,MAAOR,MAAM,WAAvD,uB,GAxDekB,IAAMC,WCgB3B0I,GAAcjB,aAbL,SAAA7K,GAAK,MAAK,CACvB4J,KAAM,CACJsC,OAAQ,EACRhB,QAASlL,EAAMa,QAAQ,IAEzB8L,YAAa,CACX1G,SAAU,WACV2G,MAAO5M,EAAMa,QAAQ,GACrBgM,IAAK7M,EAAMa,QAAQ,GACnBoB,MAAOjC,EAAMG,QAAQ2M,KAAK,QAIVjC,CAAmB,SAAA1J,GAAU,IACvC4L,EAAyC5L,EAAzC4L,SAAU3L,EAA+BD,EAA/BC,QAASC,EAAsBF,EAAtBE,QAAYE,EADO,YACGJ,EADH,kCAE9C,OACE,kBAAC,KAAD,eAAgB6L,mBAAiB,EAACvL,UAAWL,EAAQwI,MAAUrI,GAC7D,kBAACkF,GAAA,EAAD,CAAYnF,QAAQ,MAAMyL,GACzB1L,EACC,kBAAC,KAAD,CACEW,aAAW,QACXP,UAAWL,EAAQuL,YACnBzK,QAASb,GAET,kBAAC,IAAD,OAEA,QAKJ0K,GAAgBlB,aAAW,SAAA7K,GAAK,MAAK,CACzC4J,KAAM,CACJsB,QAASlL,EAAMa,QAAQ,MAFLgK,CAIlBoC,MAEET,GAAgB3B,aAAW,SAAA7K,GAAK,MAAK,CACzC4J,KAAM,CACJsC,OAAQ,EACRhB,QAASlL,EAAMa,QAAQ,MAHLgK,CAKlBqC,MAEEC,G,YACJ,WAAYhM,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACXgL,aAAc,IAHC,E,gFAQjB3K,KAAKtB,MAAMkM,YACT5K,KAAKtB,MAAMS,GACXa,KAAKtB,MAAMoK,MACX9I,KAAKL,MAAMgL,gB,wCAKb3K,KAAKC,SAAS,CAAE0K,aAAc3K,KAAKtB,MAAMiM,iB,sCAG3BtG,GACdrE,KAAKC,SAAS,CAAE0K,aAActG,EAAM0E,OAAOC,U,+BAI3C,OACE,6BACE,kBAACE,GAAA,EAAD,CACEtK,QAASoB,KAAKtB,MAAME,QACpBiM,WAAY7K,KAAK8K,gBAAgBrK,KAAKT,MACtCoJ,kBAAgB,0BAChBxJ,KAAMI,KAAKtB,MAAMkB,MAEjB,kBAAC,GAAD,CACET,GAAG,0BACHP,QAASoB,KAAKtB,MAAME,SAFtB,eAIKoB,KAAKtB,MAAMmK,MAEhB,kBAAC,GAAD,CAAekC,UAAQ,EAAC3L,MAAO,CAAEwE,MAAO,MACtC,kBAAC2F,GAAA,EAAD,CACEyB,gBAAiB,CACfC,QAAQ,GAEVxB,OAAO,QACPT,MAAOhJ,KAAKL,MAAMgL,aAClBxL,GAAG,OACH0K,WAAS,EACTC,KAAM9J,KAAKtB,MAAMoL,KACjBJ,SAAU1J,KAAK2J,gBAAgBlJ,KAAKT,MACpCuE,MAAOvE,KAAKtB,MAAMmK,KAClB9I,KAAK,OACL6J,WAAS,KAGb,kBAAC,GAAD,KACE,kBAACI,GAAA,EAAD,CACEkB,WAAS,EACTzL,QAASO,KAAKmL,iBAAiB1K,KAAKT,MACpCR,MAAM,WAHR,uB,GAxDYkB,IAAMC,WAiF9B+J,GAAUU,aAAe,CACvBzD,IAAK,GAEQ+C,U,oBCjGTW,G,YACJ,WAAY3M,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACX8G,UAAW,GACX6E,mBAAmB,EACnBC,kBAAkB,EAClBC,UAAW,CACTrM,GAAI,EACJS,MAAM,EACNkK,KAAM,EACNjB,KAAM,GACNC,MAAO,GACP6B,aAAc,KAGlB,EAAKc,UAAY,EAfA,E,iFAkBE,IAAD,OAClBzL,KAAK0L,eACLnP,OAAOgG,eAAiB,WACtB,EAAKmJ,kB,6CAIPnP,OAAOgG,eAAiB,O,qCAEV,IAAD,OACbmG,KACG7B,KAAK,SAAA/E,GACJ,EAAK7B,SAAS,CAAEwG,UAAW3E,MAE5BmF,MAAM,gB,wCAGO9H,GAChBa,KAAKyL,UAAYtM,EACjBa,KAAKC,SAAS,CAAEqL,mBAAmB,M,2CAInCtL,KAAKC,SAAS,CAAEqL,mBAAmB,M,uCAGnB,IHrEI5E,EGqEL,QHrEKA,EGsEZ,CAAEvH,GAAIa,KAAKyL,WHrEd5F,GAAQ,CACbc,IAAK,mBACLC,OAAQ,MACRF,OAAQA,KGmELG,KAAK,SAAA/E,GACJ3B,EAAStD,QAAQ,kCACjB,EAAKoD,SAAS,CAAEqL,mBAAmB,IACnC,EAAKI,iBAENzE,MAAM,gB,uCAITjH,KAAKC,SAAS,CAAEsL,kBAAkB,M,wCAGlCvL,KAAKC,SAAS,CAAEsL,kBAAkB,M,8CAGlCvL,KAAKC,SAAS,CAAEsL,kBAAkB,IAClCvL,KAAK0L,iB,qCAGQ/D,EAAKgE,EAAW9C,EAAMC,GACnC9I,KAAKC,SAAS,CACZuL,UAAW,CACTrM,GAAIwI,EAAIiE,GACRhM,MAAM,EACNkK,KAAM6B,EACN9C,KAAMA,EACNC,MAAOA,EACP6B,aAAchD,EAAImB,Q,uCAIP3J,EAAI2J,EAAO6B,GAAe,IH7EjBjE,EG6EgB,QH7EhBA,EG8EZ,CAAEvH,KAAI2J,QAAO6B,gBH7EpB9E,GAAQ,CACbc,IAAK,yBACLC,OAAQ,MACRF,OAAQA,KG2ELG,KAAK,WACJ,EAAKgF,4BACL,EAAKH,iBAENzE,MAAM,gB,kDAGTjH,KAAKC,SAAS,CACZuL,UAAW,CACTrM,GAAI,EACJS,MAAM,EACNkK,KAAM,EACNjB,KAAM,GACNC,MAAO,GACP6B,aAAc,Q,+BAKV,IAAD,OACChM,EAAYqB,KAAKtB,MAAjBC,QACR,OACE,6BACE,kBAACuI,GAAA,EAAD,CAAOlI,UAAWL,EAAQwI,MACxB,kBAACC,GAAA,EAAD,CAAOpI,UAAWL,EAAQ0I,OACxB,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,CAAWsE,MAAM,QAAjB,4BACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,QAAjB,4BACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,QAAjB,gBACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,QAAjB,4BACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,QAAjB,kBAGJ,kBAACrE,GAAA,EAAD,KACGzH,KAAKL,MAAM8G,UAAUiB,IAAI,SAAAC,GAAG,OAC3B,kBAACJ,GAAA,EAAD,CAAUxL,IAAK4L,EAAIiE,GAAIG,OAAK,GAC1B,kBAACvE,GAAA,EAAD,CAAWK,UAAU,KAAKC,MAAM,OAC7BH,EAAIiE,IAEP,kBAACpE,GAAA,EAAD,CAAWsE,MAAM,QACf,kBAAC,KAAD,CACE1M,MAAO,CACLpB,SAAU,GACVG,YAAa,GACb6N,OAAQ,WAEVvM,QAAS,EAAKwM,eAAexL,KAC3B,EACAkH,EACA,EACA,eACA,QAEFnI,MAAM,YAEPmI,EAAIuE,MAEP,kBAAC1E,GAAA,EAAD,CAAWsE,MAAM,QAAQnE,EAAIwE,aAC7B,kBAAC3E,GAAA,EAAD,CAAWsE,MAAM,QACf,kBAACM,GAAA,EAAD,CACEjI,MAAOwD,EAAIQ,KACXxJ,QAAS,CAAE0N,QAAS1N,EAAQ0N,SAC5BC,aAAW,GAEX,kBAAC,KAAD,CACE9M,MAAM,UACNC,QAAS,EAAKwM,eAAexL,KAC3B,EACAkH,EACA,EACA,eACA,SAGF,kBAAC,KAAD,SAIN,kBAACH,GAAA,EAAD,CAAWsE,MAAM,QAAQnE,EAAI4E,WAC7B,kBAAC/E,GAAA,EAAD,CAAWsE,MAAM,QACf,kBAACM,GAAA,EAAD,CAASjI,MAAM,4BACb,kBAAC,KAAD,CACET,KAAK,QACLlE,MAAM,UACNC,QAAS,EAAK+M,kBAAkB/L,KAAK,EAAMkH,EAAIiE,KAE/C,kBAAC,KAAD,eAShB,kBAAC1C,GAAA,EAAD,CACEtJ,KAAMI,KAAKL,MAAM2L,kBACjB1M,QAASoB,KAAKyM,mBAAmBhM,KAAKT,MACtCoJ,kBAAgB,qBAChBlK,mBAAiB,4BAEjB,kBAACmK,GAAA,EAAD,CAAalK,GAAG,sBAAsB,yCACtC,kBAACmK,GAAA,EAAD,KACE,kBAACoD,GAAA,EAAD,CAAmBvN,GAAG,4BAAtB,2MAIF,kBAAC4K,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEvK,QAASO,KAAKyM,mBAAmBhM,KAAKT,MACtCR,MAAM,WAFR,gBAMA,kBAACwK,GAAA,EAAD,CACEvK,QAASO,KAAK2M,eAAelM,KAAKT,MAClCR,MAAM,YACN0L,WAAS,GAHX,kBASJ,kBAAC0B,GAAA,EAAD,CACEpN,MAAM,UACNR,UAAWL,EAAQkO,IACnBtN,aAAW,MACXE,QAASO,KAAK8M,eAAerM,KAAKT,OAElC,kBAAC,KAAD,OAEF,kBAAC,GAAD,CACEb,GAAIa,KAAKL,MAAM6L,UAAUrM,GACzBS,KAAMI,KAAKL,MAAM6L,UAAU5L,KAC3BiJ,KAAM7I,KAAKL,MAAM6L,UAAU3C,KAC3BiB,KAAM9J,KAAKL,MAAM6L,UAAU1B,KAC3BhB,MAAO9I,KAAKL,MAAM6L,UAAU1C,MAC5B6B,aAAc3K,KAAKL,MAAM6L,UAAUb,aACnC/L,QAASoB,KAAK6L,0BAA0BpL,KAAKT,MAC7C4K,YAAa5K,KAAK+M,iBAAiBtM,KAAKT,QAE1C,kBAAC,GAAD,CACEmJ,KAAMnJ,KAAKL,MAAM4L,iBACjB/K,YAAaR,KAAKgN,gBAAgBvM,KAAKT,MACvCiJ,cAAejJ,KAAKiN,sBAAsBxM,KAAKT,a,GAlO7BU,IAAMC,WAyOnByH,gBAzPA,SAAA7K,GAAK,MAAK,CACvB4J,KAAM,CACJvD,MAAO,OACPyE,UAAW9K,EAAMa,QAAQ,GACzBkK,UAAW,QAEbjB,MAAO,CACLkB,SAAU,KAEZsE,IAAK,CACHrJ,SAAU,WACV0J,OAAQ3P,EAAMa,QAAQ,GACtB+L,MAAO5M,EAAMa,QAAQ,MA6OVgK,CAAmBiD,IC7M3B,SAAS8B,GAAezG,GAC7B,OAAOb,GAAQ,CACbc,IAAK,mBACLC,OAAQ,MACRF,OAAQA,I,IC6EG0G,G,YA3Ib,WAAY1O,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACXiJ,KAAM,GACNjC,IAAK,GACLkC,KAAM,GACNwE,SAAU,GACVC,SAAU,GACVC,YAAa,IARE,E,0HAcHzE,EAAOzE,GACrBrE,KAAKC,SAAL,gBAAiB6I,EAAQzE,EAAM0E,OAAOC,U,mCAG1B,IDkEOtC,EClER,QDkEQA,ECjEZ1G,KAAKL,MDkEPkG,GAAQ,CACbc,IAAK,qBACLC,OAAQ,OACR7E,KAAM2E,KCpEHG,KAAK,SAAA/E,GACJ,EAAKpD,MAAMuK,kBAEZhC,MAAM,gB,+BAIT,OACE,6BACE,kBAACiC,GAAA,EAAD,CACEtJ,KAAMI,KAAKtB,MAAMyK,KACjBvK,QAASoB,KAAKtB,MAAM8B,YACpB4I,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAalK,GAAG,qBAAhB,4BACA,kBAACmK,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEyB,gBAAiB,CACfC,QAAQ,GAEVzB,UAAQ,EACR0B,WAAS,EACTlC,MAAOhJ,KAAKL,MAAMiJ,KAClBa,OAAO,QACPtK,GAAG,OACHuK,SAAU1J,KAAK2J,gBAAgBlJ,KAAKT,KAAM,QAC1CuE,MAAM,2BACNxE,KAAK,OACL6J,WAAS,IAEX,kBAACL,GAAA,EAAD,CACEyB,gBAAiB,CACfC,QAAQ,GAEVzB,UAAQ,EACR0B,WAAS,EACTlC,MAAOhJ,KAAKL,MAAMgH,IAClB8C,OAAO,QACPtK,GAAG,MACHuK,SAAU1J,KAAK2J,gBAAgBlJ,KAAKT,KAAM,OAC1CuE,MAAM,kBACNxE,KAAK,OACL6J,WAAS,IAEX,kBAACL,GAAA,EAAD,CACEyB,gBAAiB,CACfC,QAAQ,GAEVuC,QAAM,EACNhE,UAAQ,EACRR,MAAOhJ,KAAKL,MAAM4N,YAClB9D,OAAO,QACPtK,GAAG,cACHuK,SAAU1J,KAAK2J,gBAAgBlJ,KAAKT,KAAM,eAC1CuE,MAAM,uCACNxE,KAAK,OACL6J,WAAS,GAER5J,KAAKtB,MAAM+O,iBAAiB/F,IAAI,SAAA5F,GAC/B,OACE,kBAAC8C,GAAA,EAAD,CAAU7I,IAAK+F,EAAGkH,MAAOlH,GACtBA,MAKT,kBAACyH,GAAA,EAAD,CACEyB,gBAAiB,CACfC,QAAQ,GAEVC,WAAS,EACTlC,MAAOhJ,KAAKL,MAAM0N,SAClB5D,OAAO,QACPtK,GAAG,WACHuK,SAAU1J,KAAK2J,gBAAgBlJ,KAAKT,KAAM,YAC1CuE,MAAM,qBACNxE,KAAK,OACL6J,WAAS,IAEX,kBAACL,GAAA,EAAD,CACEyB,gBAAiB,CACfC,QAAQ,GAEVC,WAAS,EACTlC,MAAOhJ,KAAKL,MAAM2N,SAClB7D,OAAO,QACPtK,GAAG,WACHuK,SAAU1J,KAAK2J,gBAAgBlJ,KAAKT,KAAM,YAC1CuE,MAAM,eACNxE,KAAK,WACL6J,WAAS,IAEX,kBAACL,GAAA,EAAD,CACEyB,gBAAiB,CACfC,QAAQ,GAEVxB,OAAO,QACPT,MAAOhJ,KAAKL,MAAMkJ,KAClB1J,GAAG,OACH0K,WAAS,EACTC,KAAM,EACNJ,SAAU1J,KAAK2J,gBAAgBlJ,KAAKT,KAAM,QAC1CuE,MAAM,2BACNxE,KAAK,OACL6J,WAAS,KAGb,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQvK,QAASO,KAAKtB,MAAM8B,aAA5B,gBACA,kBAACwJ,GAAA,EAAD,CAAQvK,QAASO,KAAK0N,WAAWjN,KAAKT,MAAOR,MAAM,WAAnD,uB,GAlIOkB,IAAMC,W,6LCOVgN,G,YAfb,WAAYjP,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,GAFI,E,mHAOjB,OACE,kBAACyM,GAAA,EAAD,CAASjI,MAAOnE,KAAKtB,MAAMkP,MACzB,kBAAC,KAAD,CAAiB5P,SAAS,e,GAVL0C,IAAMC,W,UCD7BkN,GAAS,CAAC,iCAAS,uCAAU,wCAiCpBC,G,YA9Bb,WAAYpP,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,GAFI,E,oFAII2G,GACrB,OAAI,IAAMA,EAAe,kBAACyH,GAAA,EAAD,CAAkBC,KAAM,KAC7C,IAAM1H,EACD,kBAACyH,GAAA,EAAD,CAAkBlP,QAAQ,SAASmK,MAAO,IAAKgF,KAAM,KAE5D,kBAACD,GAAA,EAAD,CACElP,QAAQ,SACRmK,MAAO,IACPgF,KAAM,GACNxO,MAAM,gB,+BAKV,OACE,6BACE,kBAAC4M,GAAA,EAAD,CAASjI,MAAO0J,GAAO7N,KAAKtB,MAAM4H,SAChC,kBAAC,KAAD,CAAY9G,MAAM,WACfQ,KAAKiO,uBAAuBjO,KAAKtB,MAAM4H,e,GAvBrB5F,IAAMC,WCF/BkN,GAAS,CAAC,uFAAkB,sEAwBnBK,G,YArBb,WAAYxP,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,GAFI,E,oFAII2G,GACrB,OAAI,IAAMA,EAAe,kBAACyH,GAAA,EAAD,CAAkBC,KAAM,GAAIxO,MAAM,cACpD,kBAACuO,GAAA,EAAD,CAAkBlP,QAAQ,SAASmK,MAAO,IAAKgF,KAAM,O,+BAG5D,OACE,6BACE,kBAAC5B,GAAA,EAAD,CAASjI,MAAO0J,GAAO7N,KAAKtB,MAAM4H,SAChC,kBAAC,KAAD,CAAY9G,MAAM,WACfQ,KAAKiO,uBAAuBjO,KAAKtB,MAAM4H,e,GAdlB5F,IAAMC,WCLlC0L,GAAU,CACd8B,SAAU,IACV1F,QAAQ,GACR2F,UAAU,OACVC,UAAU,OACVhP,WAAY,YC6CRiP,G,YACJ,WAAY5P,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACX2L,mBAAmB,EACnBE,UAAW,CACTrM,GAAI,EACJS,MAAM,EACNkK,KAAM,EACNjB,KAAM,GACNC,MAAO,GACP6B,aAAc,KAGlB,EAAKc,UAAY,EAbA,E,+EAgBDtM,GAChBa,KAAKyL,UAAYtM,EACjBa,KAAKC,SAAS,CAAEqL,mBAAmB,M,2CAInCtL,KAAKC,SAAS,CAAEqL,mBAAmB,M,6CAGd3D,GN9BlB,IAAsBjB,EM+BN,IAAfiB,EAAI4G,QN/BiB7H,EMmCZ,CAAEvH,GAAIwI,EAAIiE,INlClB/F,GAAQ,CACbc,IAAK,4BACLC,OAAQ,MACRF,OAAQA,KMgCLG,KAAK,SAAA/E,GACJ3B,EAAStD,QAAQiF,KAElBmF,MAAM,cAPP9G,EAASpD,QAAQ,0F,wCASH4K,GNkDb,IAAuBjB,KMjDZ,CAAEvH,GAAIwI,EAAIiE,INkDnB/F,GAAQ,CACbc,IAAK,6BACLC,OAAQ,MACRF,OAAQA,KMpDLG,KAAK,WACJ1G,EAAStD,QAAQ,oDAElBoK,MAAM,gB,uCAEO,INTIP,EMSL,QNTKA,EMUZ,CAAEvH,GAAIa,KAAKyL,WNTd5F,GAAQ,CACbc,IAAK,qBACLC,OAAQ,MACRF,OAAQA,KMOLG,KAAK,SAAA/E,GACJ,EAAK7B,SAAS,CAAEqL,mBAAmB,IACnC,EAAK5M,MAAM8P,YAEZvH,MAAM,gB,wCAGOU,GNhGb,IAAiBjB,KMiGZ,CAAEvH,GAAIwI,EAAIiE,INhGb/F,GAAQ,CACbc,IAAK,uBACLC,OAAQ,MACRF,OAAQA,KM8FLG,KAAK,WACJ1G,EAAStD,QAAQ,0CAElBoK,MAAM,gB,4CAGWU,GN9EjB,IAAqBjB,KM+EZ,CAAEvH,GAAIwI,EAAIiE,IN9EjB/F,GAAQ,CACbc,IAAK,2BACLC,OAAQ,MACRF,OAAQA,KM4ELG,KAAK,WACJ1G,EAAStD,QAAQ,0CAElBoK,MAAM,gB,qCAGIU,EAAKgE,EAAW9C,EAAMC,GACnC9I,KAAKC,SAAS,CACZuL,UAAW,CACTrM,GAAIwI,EAAIiE,GACRhM,MAAM,EACNkK,KAAM6B,EACN9C,KAAMA,EACNC,MAAOA,EACP6B,aAAchD,EAAImB,Q,uCAIP3J,EAAI2J,EAAO6B,GAAe,INPjBjE,EMOgB,QNPhBA,EMQZ,CAAEvH,KAAI2J,QAAO6B,gBNPpB9E,GAAQ,CACbc,IAAK,2BACLC,OAAQ,MACRF,OAAQA,KMKLG,KAAK,WACJ,EAAKgF,4BACL,EAAKnN,MAAM8P,YAEZvH,MAAM,gB,kDAGTjH,KAAKC,SAAS,CACZuL,UAAW,CACTrM,GAAI,EACJS,MAAM,EACNkK,KAAM,EACNjB,KAAM,GACNC,MAAO,GACP6B,aAAc,Q,+BAKV,IAAD,OACChM,EAAYqB,KAAKtB,MAAjBC,QACR,OACE,kBAAC,WAAD,KACE,kBAACyI,GAAA,EAAD,CAAOpI,UAAWL,EAAQ0I,OACxB,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,CAAWsE,MAAM,UAAjB,4BACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,UAAjB,4BACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,UAAjB,4BACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,UAAjB,2BAEE,kBAAC,GAAD,CAAgB8B,KAAK,0IAEvB,kBAACpG,GAAA,EAAD,CAAWsE,MAAM,UAAjB,2BAEE,kBAAC,GAAD,CAAgB8B,KAAK,oIAEvB,kBAACpG,GAAA,EAAD,CAAWsE,MAAM,UAAjB,4BACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,UAAjB,eAEE,kBAAC,GAAD,CAAgB8B,KAAK,0CAEvB,kBAACpG,GAAA,EAAD,CAAWsE,MAAM,UAAjB,4BACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,UAAjB,eAEE,kBAAC,GAAD,CAAgB8B,KAAK,8QAI3B,kBAACnG,GAAA,EAAD,KACGzH,KAAKtB,MAAM+H,UAAUiB,IAAI,SAAAC,GAAG,OAC3B,kBAACJ,GAAA,EAAD,CAAUxL,IAAK4L,EAAIiE,GAAIG,OAAK,GAC1B,kBAACvE,GAAA,EAAD,CAAWK,UAAU,KAAKC,MAAM,OAC7BH,EAAIiE,IAEP,kBAACpE,GAAA,EAAD,CAAWsE,MAAM,UACf,kBAACM,GAAA,EAAD,CAASjI,MAAOwD,EAAI8G,IAAKnC,aAAW,GAClC,kBAAC,KAAD,CAAY9M,MAAM,WAChB,kBAAC,KAAD,SAIN,kBAACgI,GAAA,EAAD,CAAWsE,MAAM,QACf,kBAAC,KAAD,CACE1M,MAAO,CACLpB,SAAU,GACVG,YAAa,GACb6N,OAAQ,WAEVvM,QAAS,EAAKwM,eAAexL,KAC3B,EACAkH,EACA,EACA,eACA,QAEFnI,MAAM,YAEPmI,EAAIuE,MAEP,kBAAC1E,GAAA,EAAD,CAAWsE,MAAM,UACf,kBAAC,GAAD,CAAkBxF,OAAQqB,EAAI4G,UAEhC,kBAAC/G,GAAA,EAAD,CAAWsE,MAAM,UACf,kBAAC,GAAD,CAAqBxF,OAAQqB,EAAI+G,aAEnC,kBAAClH,GAAA,EAAD,CAAWsE,MAAM,UACdnE,EAAIgH,UAAYhH,EAAIiH,SACnB,kBAACxC,GAAA,EAAD,CACEjI,MAAO,wDAAUwD,EAAIgH,UACrBrC,aAAW,GAEX,kBAAC,KAAD,CAAY9M,MAAM,WAChB,kBAAC,KAAD,QAIJ,kBAAC4M,GAAA,EAAD,CAASjI,MAAM,iCAAQmI,aAAW,GAChC,kBAAC,KAAD,CAAY9M,MAAM,WAChB,kBAAC,KAAD,SAKR,kBAACgI,GAAA,EAAD,CAAWsE,MAAM,UACf,kBAACM,GAAA,EAAD,CACEjI,MAAOwD,EAAIkH,aACXlQ,QAAS,CAAE0N,QAAS1N,EAAQ0N,SAC5BC,aAAW,GAEX,kBAAC,KAAD,CAAY9M,MAAM,WAChB,kBAAC,KAAD,SAIN,kBAACgI,GAAA,EAAD,CAAWsE,MAAM,UACf,kBAACM,GAAA,EAAD,CACEjI,MAAOwD,EAAIQ,KACXxJ,QAAS,CAAE0N,QAAS1N,EAAQ0N,SAC5BC,aAAW,GAEX,kBAAC,KAAD,CACE9M,MAAM,UACNC,QAAS,EAAKwM,eAAexL,KAC3B,EACAkH,EACA,EACA,eACA,SAGF,kBAAC,KAAD,SAIN,kBAACH,GAAA,EAAD,CAAWsE,MAAM,UACf,0BAAM9M,UAAU,OAAO2I,EAAImH,YAAYC,gBAEzC,kBAACvH,GAAA,EAAD,CAAWsE,MAAM,UACf,kBAACM,GAAA,EAAD,CAASjI,MAAM,2BAAOmI,aAAW,GAC/B,kBAAC,KAAD,CACE9M,MAAM,UACNC,QAAS,EAAKuP,kBAAkBvO,KAAK,EAAMkH,IAE3C,kBAAC,KAAD,QAGJ,kBAACyE,GAAA,EAAD,CAASjI,MAAM,2BAAOmI,aAAW,GAC/B,kBAAC,KAAD,CACE9M,MAAM,UACNC,QAAS,EAAKwP,sBAAsBxO,KAAK,EAAMkH,IAE/C,kBAAC,KAAD,QAGJ,kBAACyE,GAAA,EAAD,CAASjI,MAAM,mDAAWmI,aAAW,GACnC,kBAAC,KAAD,CACE9M,MAAM,UACNC,QAAS,EAAKyP,kBAAkBzO,KAAK,EAAMkH,IAE3C,kBAAC,KAAD,QAGJ,kBAACyE,GAAA,EAAD,CAASjI,MAAM,2BAAOmI,aAAW,GAC/B,kBAAC,KAAD,CACE9M,MAAM,UACNC,QAAS,EAAK0P,uBAAuB1O,KAAK,EAAMkH,IAEhD,kBAAC,KAAD,QAGJ,kBAACyE,GAAA,EAAD,CAASjI,MAAM,2BAAOmI,aAAW,GAC/B,kBAAC,KAAD,CACE9M,MAAM,UACNC,QAAS,EAAK+M,kBAAkB/L,KAAK,EAAMkH,EAAIiE,KAE/C,kBAAC,KAAD,cAQd,kBAAC,GAAD,CACEzM,GAAIa,KAAKL,MAAM6L,UAAUrM,GACzBS,KAAMI,KAAKL,MAAM6L,UAAU5L,KAC3BiJ,KAAM7I,KAAKL,MAAM6L,UAAU3C,KAC3BiB,KAAM9J,KAAKL,MAAM6L,UAAU1B,KAC3BhB,MAAO9I,KAAKL,MAAM6L,UAAU1C,MAC5B6B,aAAc3K,KAAKL,MAAM6L,UAAUb,aACnC/L,QAASoB,KAAK6L,0BAA0BpL,KAAKT,MAC7C4K,YAAa5K,KAAK+M,iBAAiBtM,KAAKT,QAE1C,kBAACkJ,GAAA,EAAD,CACEtJ,KAAMI,KAAKL,MAAM2L,kBACjB1M,QAASoB,KAAKyM,mBAAmBhM,KAAKT,MACtCoJ,kBAAgB,qBAChBlK,mBAAiB,4BAEjB,kBAACmK,GAAA,EAAD,CAAalK,GAAG,sBAAsB,yCACtC,kBAACmK,GAAA,EAAD,KACE,kBAACoD,GAAA,EAAD,CAAmBvN,GAAG,4BAAtB,2JAIF,kBAAC4K,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEvK,QAASO,KAAKyM,mBAAmBhM,KAAKT,MACtCR,MAAM,WAFR,gBAMA,kBAACwK,GAAA,EAAD,CACEvK,QAASO,KAAK2M,eAAelM,KAAKT,MAClCR,MAAM,YACN0L,WAAS,GAHX,uB,GAzSkBxK,IAAMC,WAuTrByH,gBA9TA,iBAAO,CACpBf,MAAO,CACLkB,SAAU,KAEZ8D,aA0TajE,CAAmBkG,I,UC3U5BA,G,YACJ,WAAY5P,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACX8G,UAAW,GACX2I,UAAU,EACV3B,iBAAkB3R,EAAc,gBAAkB,GAClDuT,UAAW,EACXC,QAAS,GAPM,E,iFAWE,IAAD,OAClBtP,KAAK0L,eACLnP,OAAO+F,WAAa,WAClB,EAAKoJ,aAAa,EAAK/L,MAAM2P,Y,6CAK/B/S,OAAO+F,WAAa,O,uCAIpBtC,KAAKC,SAAS,CAAEmP,UAAU,M,wCAI1BpP,KAAKC,SAAS,CAAEmP,UAAU,M,sCAI1BpP,KAAKC,SAAS,CAAEmP,UAAU,IAC1BpP,KAAK0L,iB,qCAEkC,IAAD,OAA3B4D,EAA2B,uDAAjB,EAAGC,EAAc,uDAAH,EAEnCpC,GAAe,CAAEmC,UAASC,aACvB1I,KAAK,SAAA/E,GACJ,EAAK7B,SAAS,CACZwG,UAAW3E,EAAE0N,KACbH,UAAWvN,EAAE2N,UACbH,QAASxN,EAAE4N,YAgBdzI,MAAM,gB,uCAGM0I,EAAGL,GACdA,IAAYtP,KAAKL,MAAM2P,SAG3BtP,KAAK0L,aAAa4D,K,+BAEV,IACA3Q,EAAYqB,KAAKtB,MAAjBC,QACR,OACE,6BACE,kBAACuI,GAAA,EAAD,CAAOlI,UAAWL,EAAQwI,MACxB,kBAAC,GAAD,CACEV,UAAWzG,KAAKL,MAAM8G,UACtB+H,QAASxO,KAAK0L,aAAajL,KAAKT,QAElC,yBAAKhB,UAAWL,EAAQiR,YACtB,kBAACC,GAAA,EAAD,CACEC,MAAO9P,KAAKL,MAAM0P,UAClBU,KAAM/P,KAAKL,MAAM2P,QACjB5F,SAAU1J,KAAKgQ,iBAAiBvP,KAAKT,MACrCR,MAAM,UACNyQ,MAAM,cAIZ,kBAACrD,GAAA,EAAD,CACEpN,MAAM,UACNR,UAAWL,EAAQkO,IACnBtN,aAAW,MACXE,QAASO,KAAK8M,eAAerM,KAAKT,OAElC,kBAAC,KAAD,OAEF,kBAAC,GAAD,CACEyN,iBAAkBzN,KAAKL,MAAM8N,iBAC7BtE,KAAMnJ,KAAKL,MAAMyP,SACjB5O,YAAaR,KAAKgN,gBAAgBvM,KAAKT,MACvCiJ,cAAejJ,KAAKiJ,cAAcxI,KAAKT,a,GAlGnBU,IAAMC,WAyGrByH,gBA7HA,SAAA7K,GAAK,MAAK,CACvB4J,KAAM,CACJvD,MAAO,OACPyE,UAAW9K,EAAMa,QAAQ,GACzBkK,UAAW,QAEbuE,IAAK,CACHrJ,SAAU,WACV0J,OAAQ3P,EAAMa,QAAQ,GACtB+L,MAAO5M,EAAMa,QAAQ,IAEvBwR,WAAY,CACVhM,MAAO,OACPtF,QAAS,OACT4R,eAAgB,SAChBC,UAAW,SACX1H,QAASlL,EAAMa,QAAQ,MA6GZgK,CAAmBkG,I,oBCnH3B,SAAS8B,GAAS1J,GACvB,OAAOb,GAAQ,CACbc,IAAK,aACLC,OAAQ,MACRF,OAAQA,I,wFCrBNmH,GAAS,CAAC,2BAAQ,2BAAQ,2BAAQ,4BA2CzBC,G,YAxCb,WAAYpP,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,GAFI,E,oFAII2G,GACrB,OAAI,IAAMA,EAEN,kBAACyH,GAAA,EAAD,CACElP,QAAQ,SACRO,MAAO,CAAEI,MAAO,WAChBwJ,MAAO,IACPgF,KAAM,KAGR,IAAM1H,EACD,kBAACyH,GAAA,EAAD,CAAkBlP,QAAQ,SAASmK,MAAO,IAAKgF,KAAM,KAC1D,IAAM1H,EAEN,kBAACyH,GAAA,EAAD,CACElP,QAAQ,SACRmK,MAAO,IACPgF,KAAM,GACNxO,MAAM,cAGL,kBAACuO,GAAA,EAAD,CAAkBC,KAAM,O,+BAG/B,OACE,6BACE,kBAAC5B,GAAA,EAAD,CAASjI,MAAO0J,GAAO7N,KAAKtB,MAAM4H,SAChC,kBAAC,KAAD,CAAY9G,MAAM,WACfQ,KAAKiO,uBAAuBjO,KAAKtB,MAAM4H,e,GAjCrB5F,IAAMC,W,8BCmEtB0P,G,YA5Db,WAAY3R,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACX2Q,WAAY,IAHG,E,4HAQA,IVAK5J,EUAN,OAChB1G,KAAKC,SAAS,CAAEqQ,WAAY,MVDN5J,EUEZ,CAAEvH,GAAIa,KAAKtB,MAAM6R,cVDtB1K,GAAQ,CACbc,IAAK,yBACLC,OAAQ,MACRF,OAAQA,KUDLG,KAAK,SAAA/E,GACJ,EAAK7B,SAAS,CAAEqQ,WAAYxO,MAE7BmF,MAAM,gB,mCAEEuJ,GAAS,IFkBK9J,EElBN,QFkBMA,EEjBZ,CAAE8J,OAAQA,EAAQrR,GAAIa,KAAKtB,MAAM+R,OFkBzC5K,GAAQ,CACbc,IAAK,qBACLC,OAAQ,MACRF,OAAQA,KEpBLG,KAAK,WACJ,EAAKnI,MAAMgS,kBAEZzJ,MAAM,gB,+BAGD,IAAD,OACP,OACE,kBAACiC,GAAA,EAAD,CACEtJ,KAAMI,KAAKtB,MAAMkB,KACjBiL,WAAY7K,KAAK8K,gBAAgBrK,KAAKT,MACtCpB,QAASoB,KAAKtB,MAAME,QACpBwK,kBAAgB,gBAEhB,kBAACC,GAAA,EAAD,CAAalK,GAAG,gBAAhB,0DACA,kBAACuN,GAAA,EAAD,KACoC,IAAjC1M,KAAKL,MAAM2Q,WAAWK,OAAe,uCAAW,IAEnD,kBAACnB,GAAA,EAAD,KACGxP,KAAKL,MAAM2Q,WAAW5I,IAAI,SAAA8I,GAAM,OAC/B,kBAACI,GAAA,EAAD,CACEC,QAAM,EACNpR,QAAS,EAAKqR,aAAarQ,KAAK,EAAM+P,GACtCzU,IAAKyU,GAEL,kBAACO,GAAA,EAAD,CAAcnT,QAAS4S,a,GA5CJ9P,IAAMC,WCmCjCqQ,G,YACJ,WAAYtS,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACX2L,mBAAmB,EACnB2F,mBAAoB,CAClB9R,GAAI,EACJgK,MAAM,EACNoH,aAAc,GAEhBW,aAAc,CACZ/R,GAAI,EACJmO,SAAU,GACVnE,MAAM,GAERqC,UAAW,CACTrM,GAAI,EACJS,MAAM,EACNiJ,KAAM,GACNiB,KAAM,EACNhB,MAAO,GACP6B,aAAc,KAGlB,EAAKc,UAAY,EACjB,EAAK0F,WAAarV,EAAc,oBAAsB,GAxBrC,E,wEA0BR6L,GACT3H,KAAKC,SAAS,CACZiR,aAAc,CACZ/R,GAAIwI,EAAIiE,GACR0B,SAAU,GACVnE,MAAM,O,6BAILxB,GAAM,IHVQjB,EGUT,OACS,IAAfiB,EAAI4G,OAIiB,KAArB5G,EAAIyJ,cHfW1K,EGoBZ,CAAEvH,GAAIwI,EAAIiE,IHnBZ/F,GAAQ,CACbc,IAAK,WACLC,OAAQ,MACRF,OAAQA,KGiBLG,KAAK,SAAA/E,GACJ3B,EAAStD,QAAQ,0DACjB,EAAK6B,MAAM8P,YAEZvH,MAAM,cATP9G,EAASpD,QAAQ,0DAJjBoD,EAASpD,QAAQ,kE,6CAgBE4K,GACI,KAArBA,EAAIyJ,aAIW,IAAfzJ,EAAI4G,OAIRvO,KAAKC,SAAS,CACZgR,mBAAoB,CAClB9R,GAAIwI,EAAIiE,GACRzC,MAAM,EACNoH,aAAc5I,EAAI0J,gBAPpBlR,EAASpD,QAAQ,gEAJjBoD,EAASpD,QAAQ,4D,sCAiBnBiD,KAAKC,SAAS,CACZgR,mBAAoB,CAClB9R,GAAI,EACJgK,MAAM,EACNoH,aAAc,KAGlBvQ,KAAKtB,MAAM8P,Y,gDAIXxO,KAAKC,SAAS,CACZgR,mBAAoB,CAClB9R,GAAI,EACJgK,MAAM,EACNoH,aAAc,O,wCAKF5I,GACS,KAArBA,EAAIyJ,cAIRpR,KAAKyL,UAAY9D,EAAIiE,GACrB5L,KAAKC,SAAS,CAAEqL,mBAAmB,KAJjCnL,EAASpD,QAAQ,4D,2CAQnBiD,KAAKC,SAAS,CAAEqL,mBAAmB,M,uCAGnB,IH7FI5E,EG6FL,QH7FKA,EG8FZ,CAAEvH,GAAIa,KAAKyL,WH7Fd5F,GAAQ,CACbc,IAAK,cACLC,OAAQ,MACRF,OAAQA,KG2FLG,KAAK,SAAA/E,GACJ3B,EAAStD,QAAQ,kCACjB,EAAKoD,SAAS,CAAEqL,mBAAmB,IACnC,EAAK5M,MAAM8P,YAEZvH,MAAM,gB,iCAEAU,EAAKhB,GACK,IAAfgB,EAAI4G,OAIRhS,OAAOqD,KAAK+G,GAHVxG,EAASlD,MAAM,4D,2CAMjB+C,KAAKC,SAAS,CACZiR,aAAc,CACZ/R,GAAI,EACJmO,SAAU,GACVnE,MAAM,O,6CAKY,IHhFFzC,EGgFC,OACjB4K,EAAI,CACNnS,GAAIa,KAAKL,MAAMuR,aAAa/R,GAC5BmO,SAAUtN,KAAKL,MAAMuR,aAAa5D,WHnFhB5G,EGqFZ4K,EHpFHzL,GAAQ,CACbc,IAAK,YACLC,OAAQ,MACRF,OAAQA,KGkFLG,KAAK,SAAA/E,GACJ3B,EAAStD,QAAQ,kCACjB,EAAK6B,MAAM8P,UACX,EAAKvO,SAAS,CACZiR,aAAc,CACZ/R,GAAI,EACJmO,SAAU,GACVnE,MAAM,OAIXlC,MAAM,gB,0CAGS5C,GAClB,IAAIiN,EAAItR,KAAKL,MAAMuR,aACnBI,EAAEhE,SAAWjJ,EAAM0E,OAAOC,MAC1BhJ,KAAKC,SAAS,CAAEiR,aAAcI,M,qCAGjB3J,EAAKgE,EAAW9C,EAAMC,GACV,KAArBnB,EAAIyJ,aAIRpR,KAAKC,SAAS,CACZuL,UAAW,CACTrM,GAAIwI,EAAIiE,GACRhM,MAAM,EACNkK,KAAM6B,EACN9C,KAAMA,EACNC,MAAOA,EACP6B,aAAchD,EAAImB,MAVpB3I,EAASpD,QAAQ,4D,uCAeJoC,EAAI2J,EAAO6B,GAAe,IHxIjBjE,EGwIgB,QHxIhBA,EGyIZ,CAAEvH,KAAI2J,QAAO6B,gBHxIpB9E,GAAQ,CACbc,IAAK,oBACLC,OAAQ,MACRF,OAAQA,KGsILG,KAAK,WACJ,EAAK5G,SAAS,CACZuL,UAAW,CACTrM,GAAI,EACJS,MAAM,EACNkK,KAAM,EACNjB,KAAM,GACNC,MAAO,GACP6B,aAAc,MAGlB,EAAKjM,MAAM8P,YAEZvH,MAAM,gB,6CAGTjH,KAAKC,SAAS,CACZuL,UAAW,CACTrM,GAAI,EACJS,MAAM,EACNkK,KAAM,EACNjB,KAAM,GACNC,MAAO,GACP6B,aAAc,Q,+BAKV,IAAD,OACChM,EAAYqB,KAAKtB,MAAjBC,QACR,OACE,6BACE,kBAACyI,GAAA,EAAD,CAAOpI,UAAWL,EAAQ0I,OACxB,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWsE,MAAM,UAAjB,MACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,UAAjB,eAEE,kBAAC,GAAD,CAAgB8B,KAAK,4GAEvB,kBAACpG,GAAA,EAAD,CAAWsE,MAAM,UAAjB,4BACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,UAAjB,4BACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,UAAjB,2BAEE,kBAAC,GAAD,CAAgB8B,KAAK,4GAEvB,kBAACpG,GAAA,EAAD,CAAWsE,MAAM,UAAjB,4BACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,UAAjB,2BAEE,kBAAC,GAAD,CAAgB8B,KAAK,oFAEvB,kBAACpG,GAAA,EAAD,CAAWsE,MAAM,UAAjB,UAEE,kBAAC,GAAD,CAAgB8B,KAAK,4JAEvB,kBAACpG,GAAA,EAAD,CAAWsE,MAAM,UAAjB,4BAKA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,UAAjB,2BAEE,kBAAC,GAAD,CAAgB8B,KAAK,wKAEvB,kBAACpG,GAAA,EAAD,CAAWsE,MAAM,UAAjB,4BACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,UAAjB,4BACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,UAAjB,kBAGJ,kBAACrE,GAAA,EAAD,KACGzH,KAAKtB,MAAM+H,UAAUiB,IAAI,SAAAC,GAAG,OAC3B,kBAACJ,GAAA,EAAD,CAAUxL,IAAK4L,EAAIiE,GAAIG,OAAK,GAC1B,kBAACvE,GAAA,EAAD,CAAWsE,MAAM,UAAUnE,EAAIiE,IAC/B,kBAACpE,GAAA,EAAD,CAAWsE,MAAM,UACdnE,EAAIyJ,aACH,kBAAChF,GAAA,EAAD,CAASjI,MAAO,2BAASwD,EAAI4J,KAAMjF,aAAW,GAC5C,kBAAC,KAAD,CACE9M,MAAM,UACNC,QAAS,EAAK+R,WAAW/Q,KAAK,EAAMkH,IAEpC,kBAAC,KAAD,QAIJ,kBAACyE,GAAA,EAAD,CAASjI,MAAM,iCAAQmI,aAAW,GAChC,kBAAC,KAAD,CACE9M,MAAM,UACNC,QAAS,EAAK+R,WAAW/Q,KAAK,EAAMkH,IAEpC,kBAAC,KAAD,SAKR,kBAACH,GAAA,EAAD,CAAWsE,MAAM,OAAO1M,MAAO,CAAEpB,SAAU,SACzC,kBAAC,KAAD,CACEoB,MAAO,CAAEpB,SAAU,GAAIG,YAAa,GAAI6N,OAAQ,WAChDvM,QAAS,EAAKwM,eAAexL,KAC3B,EACAkH,EACA,EACA,eACA,QAEFnI,MAAM,YAEPmI,EAAIuE,MAEP,kBAAC1E,GAAA,EAAD,CAAWsE,MAAM,UACf,kBAAC,GAAD,CAAWxF,OAAQqB,EAAI4G,UAEzB,kBAAC/G,GAAA,EAAD,CAAWsE,MAAM,UAAUnE,EAAI8J,QAC/B,kBAACjK,GAAA,EAAD,CAAWsE,MAAM,UAAUnE,EAAI+J,aAC/B,kBAAClK,GAAA,EAAD,CAAWsE,MAAM,UACf,kBAACM,GAAA,EAAD,CACEhN,MAAO,CAAEqJ,QAAS,IAClBtE,MACiB,IAAfwD,EAAI4G,OACF,uFAEA,kBAAC,IAAMoD,SAAP,KACE,uBACE5I,OAAO,SACP6I,IAAI,sBACJxS,MAAO,CAAEI,MAAO,QAChBuF,KAAMxI,OAAOC,SAASC,OAASkL,EAAI8G,KAElClS,OAAOC,SAASC,OAASkL,EAAI8G,KAE/B,EAAK0C,WAAWzJ,IAAI,SAAAf,GACnB,OACE,kBAAC,IAAMgL,SAAP,CAAgB5V,IAAK4K,GACnB,6BACA,uBACEoC,OAAO,SACP6I,IAAI,sBACJxS,MAAO,CAAEI,MAAO,QAChBuF,KAAM4B,EAAM,IAAMgB,EAAIiE,IAErBjF,EAAM,IAAMgB,EAAIiE,QAQ/BU,aAAW,GAEX,kBAAC,KAAD,CACE9M,MAAM,UACNC,QAAS,EAAKoS,WAAWpR,KACvB,EACAkH,EACApL,OAAOC,SAASC,OAASkL,EAAI8G,MAGf,IAAf9G,EAAI4G,OAAe,kBAAC,KAAD,MAAkB,kBAAC,KAAD,SAI5C,kBAAC/G,GAAA,EAAD,CAAWsE,MAAM,UACf,kBAACM,GAAA,EAAD,CACEjI,MAAO5H,OAAOC,SAASC,OAASkL,EAAImK,WACpCxF,aAAW,GAEX,kBAAC,KAAD,CAAY9M,MAAM,WAChB,kBAAC,KAAD,SAIN,kBAACgI,GAAA,EAAD,CAAWsE,MAAM,UACf,kBAACM,GAAA,EAAD,CACEjI,MAAOwD,EAAIkH,aACXlQ,QAAS,CAAE0N,QAAS1N,EAAQ0N,SAC5BC,aAAW,GAEX,kBAAC,KAAD,CAAY9M,MAAM,WAChB,kBAAC,KAAD,SAIN,kBAACgI,GAAA,EAAD,CAAWsE,MAAM,UACf,kBAACM,GAAA,EAAD,CACEjI,MAAOwD,EAAIQ,KACXxJ,QAAS,CAAE0N,QAAS1N,EAAQ0N,SAC5BC,aAAW,GAEX,kBAAC,KAAD,CACE9M,MAAM,UACNC,QAAS,EAAKwM,eAAexL,KAC3B,EACAkH,EACA,EACA,eACA,SAGF,kBAAC,KAAD,SAIN,kBAACH,GAAA,EAAD,CAAWsE,MAAM,UACf,0BAAM9M,UAAU,OAAO2I,EAAIoK,WAE7B,kBAACvK,GAAA,EAAD,CAAWsE,MAAM,UACf,0BAAM9M,UAAU,OAAO2I,EAAIqK,eAE7B,kBAACxK,GAAA,EAAD,CAAWsE,MAAM,UACf,kBAACM,GAAA,EAAD,CAASjI,MAAM,2BAAOmI,aAAW,GAC/B,kBAAC,KAAD,CACE9M,MAAM,UACNC,QAAS,EAAKwS,uBAAuBxR,KAAK,EAAMkH,IAEhD,kBAAC,KAAD,QAGJ,kBAACyE,GAAA,EAAD,CAASjI,MAAM,2BAAOmI,aAAW,GAC/B,kBAAC,KAAD,CACE9M,MAAM,UACNC,QAAS,EAAKyS,OAAOzR,KAAK,EAAMkH,IAEhC,kBAAC,KAAD,QAGJ,kBAACyE,GAAA,EAAD,CAASjI,MAAM,2BAAOmI,aAAW,GAC/B,kBAAC,KAAD,CACE9M,MAAM,UACNC,QAAS,EAAK+M,kBAAkB/L,KAAK,EAAMkH,IAE3C,kBAAC,KAAD,cAQd,kBAAC,GAAD,CACExI,GAAIa,KAAKL,MAAM6L,UAAUrM,GACzBS,KAAMI,KAAKL,MAAM6L,UAAU5L,KAC3BiJ,KAAM7I,KAAKL,MAAM6L,UAAU3C,KAC3BiB,KAAM9J,KAAKL,MAAM6L,UAAU1B,KAC3BhB,MAAO9I,KAAKL,MAAM6L,UAAU1C,MAC5B6B,aAAc3K,KAAKL,MAAM6L,UAAUb,aACnC/L,QAASoB,KAAKmS,qBAAqB1R,KAAKT,MACxC4K,YAAa5K,KAAK+M,iBAAiBtM,KAAKT,QAE1C,kBAAC,GAAD,CACEyQ,MAAOzQ,KAAKL,MAAMsR,mBAAmB9R,GACrCoR,aAAcvQ,KAAKL,MAAMsR,mBAAmBV,aAC5C3Q,KAAMI,KAAKL,MAAMsR,mBAAmB9H,KACpCvK,QAASoB,KAAKoS,wBAAwB3R,KAAKT,MAC3C0Q,cAAe1Q,KAAK0Q,cAAcjQ,KAAKT,QAEzC,kBAACkJ,GAAA,EAAD,CACEtJ,KAAMI,KAAKL,MAAM2L,kBACjB1M,QAASoB,KAAKyM,mBAAmBhM,KAAKT,MACtCoJ,kBAAgB,qBAChBlK,mBAAiB,4BAEjB,kBAACmK,GAAA,EAAD,CAAalK,GAAG,sBAAsB,yCACtC,kBAACmK,GAAA,EAAD,KACE,kBAACoD,GAAA,EAAD,CAAmBvN,GAAG,4BAAtB,uEAIF,kBAAC4K,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEvK,QAASO,KAAKyM,mBAAmBhM,KAAKT,MACtCR,MAAM,WAFR,gBAMA,kBAACwK,GAAA,EAAD,CACEvK,QAASO,KAAK2M,eAAelM,KAAKT,MAClCR,MAAM,YACN0L,WAAS,GAHX,kBAUJ,kBAAChC,GAAA,EAAD,CACEtJ,KAAMI,KAAKL,MAAMuR,aAAa/H,KAC9BvK,QAASoB,KAAKqS,mBAAmB5R,KAAKT,OAEtC,kBAACqJ,GAAA,EAAD,CAAalK,GAAG,qBAAhB,kCACA,kBAACmK,GAAA,EAAD,KACE,kBAACoD,GAAA,EAAD,6FACA,kBAACnD,GAAA,EAAD,CACEG,SAAU1J,KAAKsS,oBAAoB7R,KAAKT,MACxCkL,WAAS,EACTzB,OAAO,QACPtK,GAAG,WACHoF,MAAM,gBACNxE,KAAK,OACL6J,WAAS,KAGb,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEvK,QAASO,KAAKqS,mBAAmB5R,KAAKT,MACtCR,MAAM,WAFR,gBAMA,kBAACwK,GAAA,EAAD,CACEvK,QAASO,KAAKuS,qBAAqB9R,KAAKT,MACxCR,MAAM,WAFR,uB,GArekBkB,IAAMC,WAkfrByH,gBA1fA,SAAA7K,GAAK,MAAK,CACvB8J,MAAO,CACLgB,UAAW9K,EAAMa,QAAQ,GACzBmK,SAAU,KAEZ8D,aAqfajE,CAAmB4I,I,iOC9VnB5D,G,YAnLb,WAAY1O,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACXiJ,KAAM,GACNC,KAAM,GACN0H,aAAc,GACdiC,SAAU,OACVC,aAAc,GACdC,cAAe,GACfC,aAAc,GACdC,iBAAkB,IAVH,E,iFAcE,IZ8BMlM,EY9BP,QZ8BOA,EY7BZ,CAAEmM,SAAU,GZ8BpBhN,GAAQ,CACbc,IAAK,gBACLC,OAAQ,MACRF,OAAQA,KYhCLG,KAAK,SAAA/E,GACJ,EAAK7B,SAAS,CAAE0S,aAAc7Q,MAE/BmF,MAAM,gB,sCAGK6B,EAAOzE,GACrBrE,KAAKC,SAAL,gBAAiB6I,EAAQzE,EAAM0E,OAAOC,QACxB,iBAAVF,GACF9I,KAAK8S,mBAAmBzO,K,yCAITA,GAAQ,IZmEHqC,EYnEE,QZmEFA,EYlEZ,CAAEvH,GAAIkF,EAAM0E,OAAOC,OZmExBnD,GAAQ,CACbc,IAAK,yBACLC,OAAQ,MACRF,OAAQA,KYrELG,KAAK,SAAA/E,UACGA,EAAEiR,IACT,EAAK9S,SAAS,CAAE2S,iBAAkB9Q,MAEnCmF,MAAM,cACTjH,KAAKC,SAAS,CAAEsQ,aAAclM,EAAM0E,OAAOC,U,mCAG/B,IJrBOtC,EIqBR,QJrBQA,E,wVIsBZ,CAAD,GAAM1G,KAAKL,MAAX,CAAkBqT,WAAYhT,KAAKtB,MAAMsU,aJrB1CnN,GAAQ,CACbc,IAAK,cACLC,OAAQ,OACR7E,KAAM2E,KImBHG,KAAK,SAAA/E,GACJ,EAAKpD,MAAMuK,kBAEZhC,MAAM,gB,+BAGD,IAAD,OACP,OACE,6BACE,kBAACiC,GAAA,EAAD,CACEtJ,KAAMI,KAAKtB,MAAMyK,KACjBvK,QAASoB,KAAKtB,MAAM8B,YACpB4I,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAalK,GAAG,qBAAhB,eACKa,KAAKtB,MAAMuU,aADhB,oDAGA,kBAAC3J,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEyB,gBAAiB,CACfC,QAAQ,GAEVzB,UAAQ,EACR0B,WAAS,EACTlC,MAAOhJ,KAAKL,MAAMiJ,KAClBa,OAAO,QACPtK,GAAG,OACHuK,SAAU1J,KAAK2J,gBAAgBlJ,KAAKT,KAAM,QAC1CuE,MAAM,2BACNxE,KAAK,OACL6J,WAAS,IAEX,kBAACL,GAAA,EAAD,CACEyB,gBAAiB,CACfC,QAAQ,GAEVuC,QAAM,EACNhE,UAAQ,EACRR,MAAOhJ,KAAKL,MAAM4Q,aAClB9G,OAAO,QACPtK,GAAG,eACHuK,SAAU1J,KAAK2J,gBAAgBlJ,KAAKT,KAAM,gBAC1CuE,MAAM,2BACNxE,KAAK,OACL6J,WAAS,GAER5J,KAAKL,MAAMgT,aAAajL,IAAI,SAAA5F,GAC3B,OACE,kBAAC8C,GAAA,EAAD,CAAU7I,IAAK+F,EAAE8J,GAAI5C,MAAOlH,EAAE8J,IAC3B9J,EAAEoK,SAKX,kBAAC3C,GAAA,EAAD,CACEC,UAAQ,EACRwB,gBAAiB,CACfC,QAAQ,GAEVC,WAAS,EACTlC,MAAOhJ,KAAKL,MAAM6S,SAClB/I,OAAO,QACPtK,GAAG,WACHuK,SAAU1J,KAAK2J,gBAAgBlJ,KAAKT,KAAM,YAC1CuE,MAAM,2BACNxE,KAAK,OACL6J,WAAS,IAEX,kBAACL,GAAA,EAAD,CACEyB,gBAAiB,CACfC,QAAQ,GAEVuC,QAAM,EACNhE,UAAQ,EACRR,MAAOhJ,KAAKL,MAAM8S,aAClBhJ,OAAO,QACPtK,GAAG,eACHuK,SAAU1J,KAAK2J,gBAAgBlJ,KAAKT,KAAM,gBAC1CuE,MAAM,6CACNxE,KAAK,OACL6J,WAAS,GAERsJ,OAAOC,KAAKnT,KAAKL,MAAMiT,kBAAkBlL,IAAI,SAAA3L,GAC5C,OACE,kBAAC6I,GAAA,EAAD,CAAU7I,IAAKA,EAAKiN,MAAOjN,GACxBA,EADH,OACY,EAAK4D,MAAMiT,iBAAiB7W,GAAM,QAoBpD,kBAACwN,GAAA,EAAD,CACEyB,gBAAiB,CACfC,QAAQ,GAEVxB,OAAO,QACPT,MAAOhJ,KAAKL,MAAMkJ,KAClB1J,GAAG,OACH0K,WAAS,EACTC,KAAM,EACNJ,SAAU1J,KAAK2J,gBAAgBlJ,KAAKT,KAAM,QAC1CuE,MAAM,2BACNxE,KAAK,OACL6J,WAAS,KAGb,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAQvK,QAASO,KAAKtB,MAAM8B,aAA5B,gBACA,kBAACwJ,GAAA,EAAD,CAAQvK,QAASO,KAAK0N,WAAWjN,KAAKT,MAAOR,MAAM,WAAnD,uB,GApKOkB,IAAMC,WCmBnByS,G,YACJ,WAAY1U,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACX0T,SAAU,EACV3K,WAAY,GACZ4K,KAAM,GACNC,WAAY,CACVpK,MAAM,EACN6J,WAAY,EACZC,aAAc,IAEhB5D,UAAW,EACXC,QAAS,GAEX,EAAKkE,UAAY,KAdA,E,iFAiBE,IAAD,OAClB9K,KACG7B,KAAK,SAAA/E,GACa,IAAbA,EAAE6O,QAIN,EAAK1Q,SAAS,CAAEyI,WAAY5G,GAAK,WAC/B,EAAK2R,0BAA0B,KAEjClX,OAAO8F,UAAY,WACjB,EAAKoR,0BACH,EAAK9T,MAAM0T,SACX,EAAK1T,MAAM2P,WATboE,MAAM,0CAaTzM,MAAM,gB,6CAGT1K,OAAO8F,UAAY,O,uCAEJsN,EAAGL,GACdA,IAAYtP,KAAKL,MAAM2P,SAG3BtP,KAAKyT,0BAA0BzT,KAAKL,MAAM0T,SAAU/D,K,iCAG3CjL,EAAOsP,GAChB3T,KAAKyT,0BAA0BE,K,kDAGgC,IAAD,OAAtCA,EAAsC,uDAA9B,EAAGrE,EAA2B,uDAAjB,EAAGC,EAAc,uDAAH,EACvDyD,EAAahT,KAAKL,MAAM+I,WAAWiL,GAAO/H,GAC1C5L,KAAKwT,WACPI,aAAa5T,KAAKwT,WAEpBpD,GAAS,CAAE4C,aAAY1D,UAASC,aAC7B1I,KAAK,SAAA/E,GACJ,EAAK7B,SAAS,CACZoT,SAAUM,EACVL,KAAMxR,EAAE0N,KACRH,UAAWvN,EAAE2N,UACbH,QAASxN,EAAE4N,YAWdzI,MAAM,gB,uCAIT,IAAIoM,EAAWrT,KAAKL,MAAM+I,WAAW1I,KAAKL,MAAM0T,UAChDrT,KAAKC,SAAS,CACZsT,WAAY,CACVpK,MAAM,EACN6J,WAAYK,EAASzH,GACrBqH,aAAcI,EAASnH,U,sCAM3BlM,KAAKyT,0BAA0BzT,KAAKL,MAAM0T,UAC1CrT,KAAKC,SAAS,CACZsT,WAAY,CACVpK,MAAM,EACN6J,WAAY,EACZC,aAAc,Q,oCAMlBjT,KAAKC,SAAS,CACZsT,WAAY,CACVpK,MAAM,EACN6J,WAAY,EACZC,aAAc,Q,+BAKV,IACAtU,EAAYqB,KAAKtB,MAAjBC,QACR,OACE,6BACE,kBAACuI,GAAA,EAAD,CAAOlI,UAAWL,EAAQwI,MACxB,kBAAC0M,GAAA,EAAD,CACE7K,MAAOhJ,KAAKL,MAAM0T,SAClBS,eAAe,UACfC,UAAU,UACVC,UAAQ,EACRtK,SAAU1J,KAAKiU,WAAWxT,KAAKT,OAE9BA,KAAKL,MAAM+I,WAAWhB,IAAI,SAAA2L,GAAQ,OACjC,kBAACa,GAAA,EAAD,CAAKnY,IAAKsX,EAASzH,GAAIrH,MAAO8O,EAASnH,UAG3C,kBAAC,GAAD,CACEzF,UAAWzG,KAAKL,MAAM2T,KACtB9E,QAASxO,KAAKyT,0BAA0BhT,KACtCT,KACAA,KAAKL,MAAM0T,YAGf,yBAAKrU,UAAWL,EAAQiR,YACtB,kBAACC,GAAA,EAAD,CACEC,MAAO9P,KAAKL,MAAM0P,UAClBU,KAAM/P,KAAKL,MAAM2P,QACjB5F,SAAU1J,KAAKgQ,iBAAiBvP,KAAKT,MACrCR,MAAM,UACNyQ,MAAM,cAIZ,kBAACrD,GAAA,EAAD,CACEpN,MAAM,UACNR,UAAWL,EAAQkO,IACnBtN,aAAW,MACXE,QAASO,KAAK8M,eAAerM,KAAKT,OAElC,kBAAC,KAAD,OAEF,kBAAC,GAAD,CACEmJ,KAAMnJ,KAAKL,MAAM4T,WAAWpK,KAC5B6J,WAAYhT,KAAKL,MAAM4T,WAAWP,WAClCC,aAAcjT,KAAKL,MAAM4T,WAAWN,aACpCzS,YAAaR,KAAKmU,YAAY1T,KAAKT,MACnCiJ,cAAejJ,KAAKiJ,cAAcxI,KAAKT,a,GA1J9BU,IAAMC,WAiKVyH,gBAxLA,SAAA7K,GAAK,MAAK,CACvB4J,KAAM,CACJvD,MAAO,OACPyE,UAAW9K,EAAMa,QAAQ,GACzBkK,UAAW,QAEbjB,MAAO,CACLkB,SAAU,KAEZsE,IAAK,CACHrJ,SAAU,WACV0J,OAAQ3P,EAAMa,QAAQ,GACtB+L,MAAO5M,EAAMa,QAAQ,IAEvBwR,WAAY,CACVhM,MAAO,OACPtF,QAAS,OACT4R,eAAgB,SAChBC,UAAW,SACX1H,QAASlL,EAAMa,QAAQ,MAqKZgK,CAAmBgL,ICvI3B,SAASgB,GAAS1N,GACvB,OAAOb,GAAQ,CACbc,IAAK,kBACLC,OAAQ,MACRF,OAAQA,I,8CC7DN2N,GAAY,CAAC,UAAW,UAAW,UAAW,UAAW,WAqBhDC,G,YAnBb,WAAY5V,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,GAFI,E,sEAMjB,OACE,6BACE,0BACEX,UAAU,MACVI,MAAO,CAAE5B,gBAAiB6W,GAAUrU,KAAKtB,MAAM6V,QAE9C1P,GAAK7E,KAAKtB,MAAM6V,Y,GAbJ7T,IAAMC,WC4BvB4Q,G,YACJ,WAAY7S,GAAQ,IAAD,8BACjB,4CAAMA,KACDiB,MAAQ,CACX8G,UAAW,IAHI,E,iFAME,IAAD,OAClBzG,KAAKwU,cACLjY,OAAOiG,WAAa,WAClB,EAAKgS,iB,6CAIPjY,OAAOiG,WAAa,O,oCAEP,IFdKkE,EEcN,OFbPb,GAAQ,CACbc,IAAK,SACLC,OAAQ,MACRF,OAAQA,IEYLG,KAAK,SAAA/E,GACJ,EAAK7B,SAAS,CAAEwG,UAAW3E,MAE5BmF,MAAM,gB,kCAECU,GAAM,IFRQjB,EEQT,QFRSA,EESZ,CAAEvH,GAAIwI,EAAIiE,IFRjB/F,GAAQ,CACbc,IAAK,eACLC,OAAQ,MACRF,OAAQA,KEMLG,KAAK,SAAA/E,GACJ3B,EAAStD,QAAQ,4BACjB,EAAK2X,gBAENvN,MAAM,gB,2BAENU,GAAgB,IAAD,OAAV8M,EAAU,uDAAH,EACfL,GAAS,CAAEjV,GAAIwI,EAAIiE,GAAI6I,KAAMA,IAC1B5N,KAAK,SAAA/E,GACJ3B,EAAStD,QAAQ,4BACjB,EAAK2X,gBAENvN,MAAM,gB,+BAED,IAAD,OACCtI,EAAYqB,KAAKtB,MAAjBC,QACR,OACE,6BACE,kBAACuI,GAAA,EAAD,CAAOlI,UAAWL,EAAQwI,MACxB,kBAACC,GAAA,EAAD,CAAOpI,UAAWL,EAAQ0I,OACxB,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,CAAWsE,MAAM,QAAjB,4BACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,QAAjB,gBACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,QAAjB,gBACA,kBAACtE,GAAA,EAAD,CAAWsE,MAAM,UAAjB,kBAGJ,kBAACrE,GAAA,EAAD,KACGzH,KAAKL,MAAM8G,UAAUiB,IAAI,SAAAC,GAAG,OAC3B,kBAACJ,GAAA,EAAD,CAAUxL,IAAK4L,EAAIiE,GAAIG,OAAK,GAC1B,kBAACvE,GAAA,EAAD,CAAWK,UAAU,KAAKC,MAAM,OAC7BH,EAAIiE,IAEP,kBAACpE,GAAA,EAAD,CAAWsE,MAAM,QAAQnE,EAAInD,UAC7B,kBAACgD,GAAA,EAAD,CAAWsE,MAAM,QACf,kBAAC,GAAD,CAAUyI,KAAM5M,EAAI9C,QAEtB,kBAAC2C,GAAA,EAAD,CAAWsE,MAAM,QAAQnE,EAAIQ,MAC7B,kBAACX,GAAA,EAAD,CAAWsE,MAAM,UACf,kBAACM,GAAA,EAAD,CAASjI,MAAM,4BACb,kBAAC,KAAD,CACE3E,MAAM,UACNC,QAAS,EAAK8U,KAAK9T,KAAK,EAAMkH,EAAK,IAEnC,kBAAC,KAAD,QAGJ,kBAACyE,GAAA,EAAD,CAASjI,MAAM,4BACb,kBAAC,KAAD,CACE3E,MAAM,UACNC,QAAS,EAAK8U,KAAK9T,KAAK,EAAMkH,EAAK,IAEnC,kBAAC,KAAD,QAGJ,kBAACyE,GAAA,EAAD,CAASjI,MAAM,4BACb,kBAAC,KAAD,CACE3E,MAAM,UACNC,QAAS,EAAKiV,YAAYjU,KAAK,EAAMkH,IAErC,kBAAC,KAAD,oB,GAvFLjH,IAAMC,WAqGVyH,gBApHA,SAAA7K,GAAK,MAAK,CACvB4J,KAAM,CACJvD,MAAO,OACPyE,UAAW9K,EAAMa,QAAQ,GACzBkK,UAAW,QAEbjB,MAAO,CACLkB,SAAU,KAEZC,KAAM,CACJH,UAAW,GACXI,QAASlL,EAAMa,QAAQ,EAAG,MAyGfgK,CAAmBmJ,I,yGCxHnB,IACb,CACEpN,MAAO,qBACPwQ,KAAM,aACNC,QAAQ,EACR7W,KAAM8W,KACNhN,UAAWrB,IAEb,CACErC,MAAO,2BACPwQ,KAAM,cACNC,QAAQ,EACR7W,KAAM+W,KACNjN,UAAWkN,IAEb,CACE5Q,MAAO,2BACPwQ,KAAM,YACNC,QAAQ,EACR7W,KAAMiX,KACNnN,UAAWoN,IAEb,CACE9Q,MAAO,2BACPwQ,KAAM,OACNC,QAAQ,EACR7W,KAAMmX,KACNrN,UAAWsN,IAEb,CACEhR,MAAO,2BACPwQ,KAAM,SACNC,QAAQ,EACR7W,KAAMqX,KACNvN,UAAWwN,KC4CAC,I,OAAAA,aAjFA,SAAA5W,GAAU,IAAD,EACYgC,IAAM0C,UAAS,GAD3B,oBACfmS,EADe,KACJC,EADI,OAEI9U,IAAM0C,SAAS,IAFnB,oBAEfe,EAFe,KAERsR,EAFQ,KAItB/U,IAAMgV,UAAU,WACd,IAAK,IAAIC,EAAI,EAAGA,EAAIC,GAAUjF,OAAQgF,IAAK,CACzC,IAAI7T,EAAI8T,GAAUD,GAClB,GAAI7T,EAAE6S,OAASjW,EAAMlC,SAASqZ,SAG5B,OAFAJ,EAAS3T,EAAEqC,YACXtD,SAASsD,MAAQrC,EAAEqC,MAAQ,IAAMtI,EAAOP,YAI3C,CAACoD,EAAMlC,SAASqZ,WAEnB,IAAMC,EAAW,SAAAC,GACXA,EAAKpB,OAASjW,EAAMlC,SAASqZ,WACjCJ,EAASM,EAAK5R,OACdqR,GAAa,GACb9W,EAAMsX,QAAQC,KAAKF,EAAKpB,QAG1B,OACE,yBAAKxV,GAAG,QAAQH,UAAU,SACxB,kBAAC,GAAD,CACEmF,MAAOA,EACPR,OAAQ,WACN6R,GAAa,IAEfU,WAAYJ,IAEd,kBAACK,GAAA,EAAD,CACEC,OAAO,MACPxW,KAAM2V,EACN3W,QAAS,WACP4W,GAAa,IAEfpW,MAAO,CAAEiX,cAAe,WAExB,yBAAKrX,UAAU,YACZ4W,GAAUlO,IAAI,SAAAqO,GACb,QAAIA,EAAKnB,QAEL,yBAAK5V,UAAU,UAAUjD,IAAKga,EAAKpB,MACjC,kBAAC,KAAD,CACEjR,KAAK,QACLlE,MAAM,UACND,aAAW,OACXE,QAAS,WACPqW,EAASC,KAGX,kBAACA,EAAKhY,KAAN,OAEF,2BAAIgY,EAAK5R,YAOrB,yBAAKnF,UAAU,aACb,kBAAC,KAAD,KACG4W,GAAUlO,IAAI,SAAA4O,GACb,OACE,kBAAC,KAAD,CACEC,OAAK,EACLxa,IAAKua,EAAM3B,KACXA,KAAM2B,EAAM3B,KACZ9M,UAAWyO,EAAMzO,cAIvB,kBAAC,KAAD,CAAU0O,OAAK,EAACC,KAAK,IAAIC,GAAG,eAC5B,kBAAC,KAAD,CAAUA,GAAG,e,4DC9ER,SAASC,KACtB,OACE,kBAAC1S,GAAA,EAAD,CAAYnF,QAAQ,QAAQW,MAAM,gBAAgBsM,MAAM,UACrD,kBACD,kBAAChH,GAAA,EAAD,CAAMtF,MAAM,UAAUuF,KAAK,wCACxBlJ,EAAOP,UACF,KACP,IAAIqb,MAAOC,cACX,KCEP,IAAM9T,GAAOC,EAAQ,KAEf1F,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCsZ,MAAO,CACLxO,UAAW9K,EAAMa,QAAQ,GACzBE,QAAS,OACT+X,cAAe,SACf9X,WAAY,UAEduY,OAAQ,CACNrN,OAAQlM,EAAMa,QAAQ,GACtBZ,gBAAiBD,EAAMG,QAAQqZ,UAAUlZ,MAE3CmZ,KAAM,CACJpT,MAAO,OACPyE,UAAW9K,EAAMa,QAAQ,IAE3B6Y,OAAQ,CACNxN,OAAQlM,EAAMa,QAAQ,EAAG,EAAG,OAIjB,SAAS8Y,KACtB,IAAMvY,EAAUtB,KAEZ8Z,EAAoD,MAAvCC,aAAaC,QAAQ,cAClCC,EAAgBtV,KAAKC,MAAMmV,aAAaC,QAAQ,eAAiB,GAJtC,EAMD3W,IAAM0C,SAAS+T,GANd,oBAMxBI,EANwB,KAMfC,EANe,OAOCpU,mBAASkU,EAAcG,UAPxB,oBAOxBA,EAPwB,KAOdC,EAPc,OAQCtU,mBAASkU,EAAchK,UARxB,oBAQxBA,EARwB,KAQdqK,EARc,KAwC/B,OACE,kBAACC,GAAA,EAAD,CAAW/P,UAAU,OAAOsG,SAAS,MACnC,yBAAKnP,UAAWL,EAAQkY,OACtB,yBAAKzX,MAAO,CAAEwE,MAAO,GAAIiU,aAAc,IAAM/T,IAAKhB,GAAMiB,IAAI,KAC5D,kBAACC,GAAA,EAAD,CAAY6D,UAAU,KAAKhJ,QAAQ,MAAnC,gBAGA,0BAAMG,UAAWL,EAAQqY,KAAMc,YAAU,GACvC,kBAACvO,GAAA,EAAD,CACE1K,QAAQ,WACR4K,OAAO,SACPD,UAAQ,EACRI,WAAS,EACTZ,MAAOyO,EACP/N,SAnCa,SAAArF,GACrBqT,EAAYrT,EAAM0E,OAAOC,QAmCjB7J,GAAG,WACHoF,MAAM,WACNqE,KAAK,WACLsC,WAAS,IAEX,kBAAC3B,GAAA,EAAD,CACE1K,QAAQ,WACR4K,OAAO,SACPT,MAAOsE,EACP9D,UAAQ,EACRI,WAAS,EACTF,SA5Ca,SAAArF,GACrBsT,EAAYtT,EAAM0E,OAAOC,QA4CjBJ,KAAK,WACLrE,MAAM,WACNxE,KAAK,WACLZ,GAAG,aAEL,kBAAC4Y,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEV,QAASA,EACT7N,SAnEQ,SAAArF,GACpBmT,EAAWnT,EAAM0E,OAAOwO,SAEpBlT,EAAM0E,OAAOwO,QACfH,aAAac,QAAQ,aAAc,KAEnCd,aAAae,WAAW,eA8DdnP,MAAM,WACNxJ,MAAM,YAGV+E,MAAM,gBAER,kBAACyF,GAAA,EAAD,CACEJ,WAAS,EACT/K,QAAQ,YACRW,MAAM,UACNC,QA9DU,WN1Cf,IAAeiH,KM4CZ,CAAE+Q,WAAUnK,YN3CbzH,GAAQ,CACbc,IAAK,SACLC,OAAQ,OACR7E,KAAM2E,KMyCHG,KAAK,SAAA/E,GpC/CL,IAAkBJ,EATG0W,EASH1W,EoCgDRI,EAAEuW,MpC/CV1c,IAAQoL,IAAIlL,EAAOJ,SAAUiG,GAVV0W,EoC0DRtW,EpCzDlBnG,IAAQoL,IAAIlL,EAAOL,YAAa4c,GoC0D1B3W,EAAcK,EAAEuW,OAChB9b,OAAOC,SAASuI,KAAO,KACvBqS,aAAac,QACX,YACAlW,KAAKsW,UAAU,CAAEb,WAAUnK,gBAG9BrG,MAAM,eAkDDjI,UAAWL,EAAQsY,QALrB,gBASA,kBAACsB,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAME,MAAI,EAACC,IAAE,IAKb,kBAACH,GAAA,EAAD,CAAME,MAAI,GACR,kBAAC3T,GAAA,EAAD,CAAMC,KAAK,aAAalG,QAAQ,SAAhC,mFAOR,kBAAC8Z,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAClC,GAAD,QCpIR,IAAM5T,GAAOC,EAAQ,KAEf1F,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCsZ,MAAO,CACLxO,UAAW9K,EAAMa,QAAQ,GACzBE,QAAS,OACT+X,cAAe,SACf9X,WAAY,UAEduY,OAAQ,CACNrN,OAAQlM,EAAMa,QAAQ,GACtBZ,gBAAiBD,EAAMG,QAAQqZ,UAAUlZ,MAE3CmZ,KAAM,CACJpT,MAAO,OACPyE,UAAW9K,EAAMa,QAAQ,IAE3B6Y,OAAQ,CACNxN,OAAQlM,EAAMa,QAAQ,EAAG,EAAG,OAIjB,SAASya,KACtB,IAAMla,EAAUtB,KADe,EAGC+F,mBAAS,IAHV,oBAGxBqU,EAHwB,KAGdC,EAHc,OAICtU,mBAAS,IAJV,oBAIxBkK,EAJwB,KAIdqK,EAJc,KAkB/B,OACE,kBAACC,GAAA,EAAD,CAAW/P,UAAU,OAAOsG,SAAS,MACnC,yBAAKnP,UAAWL,EAAQkY,OACtB,yBAAKzX,MAAO,CAAEwE,MAAO,GAAIiU,aAAc,IAAM/T,IAAKhB,GAAMiB,IAAI,KAC5D,kBAACC,GAAA,EAAD,CAAY6D,UAAU,KAAKhJ,QAAQ,MAAnC,gBAGA,0BAAMG,UAAWL,EAAQqY,KAAMc,YAAU,GACvC,kBAACS,GAAA,EAAD,CAAMC,WAAS,EAACpa,QAAS,GACvB,kBAACma,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACnP,GAAA,EAAD,CACE1K,QAAQ,WACR2K,UAAQ,EACRI,WAAS,EACTF,SA3BS,SAAArF,GACrBqT,EAAYrT,EAAM0E,OAAOC,QA2Bb7J,GAAG,WACHoF,MAAM,WACNqE,KAAK,cAGT,kBAAC2P,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACnP,GAAA,EAAD,CACE1K,QAAQ,WACR2K,UAAQ,EACRI,WAAS,EACTF,SAnCS,SAAArF,GACrBsT,EAAYtT,EAAM0E,OAAOC,QAmCbJ,KAAK,WACLrE,MAAM,WACNxE,KAAK,WACLZ,GAAG,cAGP,kBAACoZ,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,2GAGJ,kBAAC1O,GAAA,EAAD,CACEJ,WAAS,EACTnK,QA7Ca,WPtClB,IAAkBiH,KOuCZ,CAAE+Q,WAAUnK,YPtChBzH,GAAQ,CACbc,IAAK,YACLC,OAAQ,OACR7E,KAAM2E,KOoCHG,KAAK,WACJ3F,EAASrE,QAAQ,oCAElBoK,MAAM,eAyCDpI,QAAQ,YACRW,MAAM,UACNR,UAAWL,EAAQsY,QALrB,gBASA,kBAACsB,GAAA,EAAD,CAAMC,WAAS,EAACM,QAAQ,YACtB,kBAACP,GAAA,EAAD,CAAME,MAAI,GACR,kBAAC3T,GAAA,EAAD,CAAMC,KAAK,UAAUlG,QAAQ,SAA7B,kEAOR,kBAAC8Z,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAClC,GAAD,QCzGR,IAAMqC,GAAQ,CACZC,SAAU,CACRpV,MAAO,OACPC,OAAQ,QACR7F,SAAU,OACVM,QAAS,OACT4R,eAAgB,SAChB3R,WAAY,WAQD0a,OAJf,WACE,OAAO,yBAAK7Z,MAAO2Z,GAAMC,UAAlB,UCYMC,OAlBf,WACE,OACE,6BACE,kBAACC,GAAA,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO3C,OAAK,EAAC5B,KAAK,YAAY9M,UAAWsR,KACzC,kBAAC,KAAD,CAAO5C,OAAK,EAAC5B,KAAK,SAAS9M,UAAWuR,KACtC,kBAAC,KAAD,CAAO7C,OAAK,EAAC5B,KAAK,OAAO9M,UAAWwR,KACpC,kBAAC,KAAD,CAAO1E,KAAK,KACTjZ,IAAa,kBAAC,GAAD,MAAY,kBAAC,KAAD,CAAU+a,GAAG,gBCN/B9R,QACW,cAA7BpI,OAAOC,SAAS8c,UAEe,UAA7B/c,OAAOC,SAAS8c,UAEhB/c,OAAOC,SAAS8c,SAASC,MACvB,2DCTNxY,IAASC,OAAO,kBAAC,GAAD,MAASH,SAASC,eAAe,SAEjD,IAAIY,GAAQhG,IACRgG,KAAUnF,OAAOoF,IACnBF,EAAcC,IDoHV,kBAAmB8X,WACrBA,UAAUC,cAAcC,MAAM7S,KAAK,SAAA8S,GACjCA,EAAaC,iB","file":"static/js/main.439b739b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.afcbb538.svg\";","export default {\r\n  apiPrefix: \"v1\",\r\n  timeout: 10000,\r\n  requestRetry: 4,\r\n  requestRetryDelay: 800,\r\n  siteName: \"MareWood\",\r\n  systemInfoKey: \"MareWood_SYSTEM_INFO\",\r\n  userInfoKey: \"MareWood_USER_INFO\",\r\n  tokenKey: \"MareWood_ACCESS_TOKEN\"\r\n};\r\n","import Storage from \"good-storage\";\r\nimport Config from \"../config/index.js\";\r\n\r\nexport function getUserInfo(key = null) {\r\n  let userInfo = Storage.get(Config.userInfoKey) || {};\r\n  if (key) return userInfo.hasOwnProperty(key) ? userInfo[key] : null;\r\n  return userInfo;\r\n}\r\n\r\nexport function setUserInfo(user) {\r\n  Storage.set(Config.userInfoKey, user);\r\n  return user;\r\n}\r\n\r\nexport function getToken() {\r\n  return Storage.get(Config.tokenKey);\r\n}\r\n\r\nexport function setToken(token) {\r\n  return Storage.set(Config.tokenKey, token);\r\n}\r\n\r\nexport function getSystemInfo(key = null) {\r\n  let systemInfo = Storage.get(Config.systemInfoKey) || {};\r\n  if (key) return systemInfo.hasOwnProperty(key) ? systemInfo[key] : null;\r\n  return systemInfo;\r\n}\r\n\r\nexport function setSystemInfo(info) {\r\n  Storage.set(Config.systemInfoKey, info);\r\n  return info;\r\n}\r\n\r\nexport function removeToken() {\r\n  return Storage.remove(Config.tokenKey);\r\n}\r\n","const nodeEnv = process.env.NODE_ENV;\r\nconst appMode = process.env.REACT_APP_MODE;\r\n\r\nlet host = \"localhost:8088\";\r\nlet useApiUrl = \"http://\" + host;\r\n\r\nif (\"production\" === nodeEnv) {\r\n  switch (appMode) {\r\n    case \"buildDev\":\r\n      useApiUrl = \"http://192.168.48.192:9088\";\r\n      break;\r\n    case \"buildDevTest\":\r\n      useApiUrl = \"http://192.168.48.192:9288\";\r\n      break;\r\n    case \"buildTest\":\r\n      useApiUrl = \"http://192.168.48.192:9288\";\r\n      break;\r\n    case \"buildPre\":\r\n      useApiUrl = \"http://192.168.48.192:9288\";\r\n      break;\r\n    default:\r\n      useApiUrl = window.location.origin;\r\n      break;\r\n  }\r\n}\r\n\r\nif (typeof process.env.REACT_APP_API_URL === \"string\") {\r\n  useApiUrl = process.env.REACT_APP_API_URL;\r\n}\r\n\r\nif (useApiUrl.slice(0, 4) !== \"http\") {\r\n  useApiUrl = window.location.origin + useApiUrl;\r\n}\r\n\r\nexport { host, useApiUrl };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { amber, green } from \"@material-ui/core/colors/index\";\r\nimport IconButton from \"@material-ui/core/IconButton/index\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent/index\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport { makeStyles } from \"@material-ui/core/styles/index\";\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n};\r\nconst useStyles = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700]\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n\r\nfunction SnackbarContentWrapper(props) {\r\n  const classes = useStyles();\r\n  const { message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant])}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span\r\n          id=\"client-snackbar\"\r\n          className={classes.message}\r\n          style={{ whiteSpace: \"pre-wrap\" }}\r\n        >\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"close\"\r\n          color=\"inherit\"\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nSnackbarContentWrapper.propTypes = {\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]).isRequired\r\n};\r\n\r\nexport default SnackbarContentWrapper;\r\n","import snackbar from \"./snackbarInstance\";\r\n\r\nlet snackbarInstance;\r\nexport const notice = (type, content, duration = 4000) => {\r\n  if (!snackbarInstance) snackbarInstance = snackbar;\r\n  return snackbarInstance.openSnackbar(type, content, duration);\r\n};\r\n\r\nexport default {\r\n  info(content, duration = 4000) {\r\n    return notice(\"info\", content, duration);\r\n  },\r\n  success(content, duration = 4000) {\r\n    return notice(\"success\", content, duration);\r\n  },\r\n  warning(content, duration = 4000) {\r\n    return notice(\"warning\", content, duration);\r\n  },\r\n  error(content, duration = 4000) {\r\n    return notice(\"error\", content, duration);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContentWrapper from \"./snackbarContentWrapper\";\r\n\r\nclass CustomizeSnackbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      content: \"\",\r\n      duration: 3000,\r\n      type: \"info\"\r\n    };\r\n  }\r\n  openSnackbar(type, content, duration) {\r\n    if (this.state.open) {\r\n      this.setState({ open: false });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          open: true,\r\n          type: type,\r\n          content: content,\r\n          duration: duration\r\n        });\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        open: true,\r\n        type: type,\r\n        content: content,\r\n        duration: duration\r\n      });\r\n    }\r\n  }\r\n  handleClose() {\r\n    this.setState({ open: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\"\r\n        }}\r\n        open={this.state.open}\r\n        autoHideDuration={this.state.duration}\r\n        onClose={this.handleClose.bind(this)}\r\n      >\r\n        <SnackbarContentWrapper\r\n          onClose={this.handleClose.bind(this)}\r\n          variant={this.state.type}\r\n          message={this.state.content}\r\n        />\r\n      </Snackbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomizeSnackbar;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Snackbar from \"./snackbar\";\r\n\r\nconst snackbarDom = document.getElementById(\"snackbar\");\r\n\r\nexport default ReactDOM.render(<Snackbar />, snackbarDom);\r\n","import { host } from \"../config/url.js\";\r\nimport Snackbar, { notice } from \"../components/snackbar/index.js\";\r\n\r\nconst UpdateDataTypeIsNotice = 0,\r\n  UpdateDataTypeIsRepoAction = 1,\r\n  UpdateDataTypeIsCategoryAction = 2,\r\n  UpdateDataTypeIsJobAction = 3,\r\n  UpdateDataTypeIsUserAction = 4;\r\n\r\nexport function connWebsocket(token) {\r\n  window.ws = new WebSocket(`ws://${host}/websocket?token=${token}`);\r\n\r\n  window.ws.addEventListener(\"message\", r => {\r\n    let data = JSON.parse(r.data);\r\n    notice(data.Type, data.Message);\r\n\r\n    if (data.UpdateDataType === UpdateDataTypeIsNotice) {\r\n      return;\r\n    }\r\n    if (data.UpdateDataType === UpdateDataTypeIsJobAction && window.wsFuncJob) {\r\n      window.wsFuncJob();\r\n      return;\r\n    }\r\n    if (\r\n      data.UpdateDataType === UpdateDataTypeIsRepoAction &&\r\n      window.wsFuncRepo\r\n    ) {\r\n      window.wsFuncRepo();\r\n      return;\r\n    }\r\n    if (\r\n      data.UpdateDataType === UpdateDataTypeIsCategoryAction &&\r\n      window.wsFuncCategory\r\n    ) {\r\n      window.wsFuncCategory();\r\n      return;\r\n    }\r\n    if (\r\n      data.UpdateDataType === UpdateDataTypeIsUserAction &&\r\n      window.wsFuncUser\r\n    ) {\r\n      window.wsFuncUser();\r\n      return;\r\n    }\r\n  });\r\n  window.ws.addEventListener(\"error\", e => {\r\n    Snackbar.error(\"WebSocket 链接出错！\");\r\n  });\r\n}\r\n","export default {\r\n  1: \"超级管理员\",\r\n  2: \"管理员\",\r\n  3: \"开发者\",\r\n  4: \"项目记者\"\r\n};\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar, IconButton } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import Person from '@material-ui/icons/Person';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Role from \"../../config/role\";\r\nimport { getUserInfo } from \"../../utils/dataStorage\";\r\n\r\nconst Logo = require(\"../../assets/img/logo.svg\");\r\nlet UserInfo = getUserInfo();\r\n\r\nconst TopBar = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"topBar\">\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={props.toggle}\r\n          >\r\n            {/*<MenuIcon color=\"primary\"/>*/}\r\n            <div style={{ width: 24, height: 24, display: \"flex\" }}>\r\n              <img style={{ width: 24 }} src={Logo} alt=\"\" />\r\n            </div>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" style={{ flexGrow: 1, marginLeft: 20 }}>\r\n            {props.title}\r\n          </Typography>\r\n          <div>\r\n            {/*<IconButton onClick={handleClick} aria-controls=\"user-menu\" aria-haspopup=\"true\" >*/}\r\n            {/*    <Person />*/}\r\n            {/*</IconButton>*/}\r\n            <Chip\r\n              onClick={handleClick}\r\n              color=\"primary\"\r\n              label={UserInfo.Username}\r\n            />\r\n            <Menu\r\n              id=\"user-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem>{Role[UserInfo.Role]}</MenuItem>\r\n              <Link href=\"#/login\">\r\n                <MenuItem>退出</MenuItem>\r\n              </Link>\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import Axios from \"axios\";\r\nimport NProgress from \"nprogress\";\r\nimport { useApiUrl } from \"../config/url.js\";\r\nimport Config from \"../config/index\";\r\nimport { getToken } from \"../utils/dataStorage\";\r\nimport Snackbar from \"../components/snackbar/index\";\r\n\r\nNProgress.configure({ showSpinner: false });\r\nconst service = Axios.create({\r\n  baseURL: useApiUrl + \"/\" + Config.apiPrefix,\r\n  headers: {\r\n    Accept: \"*/*\"\r\n  },\r\n  timeout: Config.timeout\r\n});\r\n\r\nservice.defaults.retry = Config.requestRetry;\r\nservice.defaults.retryDelay = Config.requestRetryDelay;\r\n\r\nservice.interceptors.request.use(\r\n  config => {\r\n    NProgress.start();\r\n    config.headers[\"Authorization\"] = getToken() || \"\";\r\n    return config;\r\n  },\r\n  error => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\nservice.interceptors.response.use(\r\n  res => {\r\n    NProgress.done();\r\n    if (res.status !== 200) {\r\n      Snackbar.error(\"Status Code Is Not 200\");\r\n      return Promise.reject(res);\r\n    } else {\r\n      if (res.data.status !== true) {\r\n        Snackbar.warning(res.data.msg);\r\n        return Promise.reject(res);\r\n      }\r\n      return res.data.data;\r\n    }\r\n  },\r\n  error => {\r\n    Snackbar.error(error.message);\r\n    NProgress.done();\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default service;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { systemInfo } from \"../../api/system\";\r\nimport { setSystemInfo } from \"../../utils/dataStorage\";\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  sept: {\r\n    marginTop: 20,\r\n    padding: theme.spacing(3, 2)\r\n  }\r\n});\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tableData: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    systemInfo()\r\n      .then(r => {\r\n        setSystemInfo(r.kvConfig);\r\n        this.setState({ tableData: r.detailsConfig });\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Paper className={classes.root}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>标题</TableCell>\r\n                <TableCell>值</TableCell>\r\n                <TableCell>备注</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.tableData.map(row => (\r\n                <TableRow key={row.Title}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.Title}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {Array.isArray(row.Val) ? row.Val.join(\" | \") : row.Val}\r\n                  </TableCell>\r\n                  <TableCell>{row.Desc}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Dashboard);\r\n","import request from \"../utils/request.js\";\r\n\r\n/**\r\n * 系统信息\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function systemInfo(params) {\r\n  return request({\r\n    url: \"/system/info\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n","import request from \"../utils/request.js\";\r\n\r\n/**\r\n * 获取全部分类\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function categories(params) {\r\n  return request({\r\n    url: \"/categories\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 删除分类\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function destroy(params) {\r\n  return request({\r\n    url: \"/category/delete\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 编辑\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function create(params) {\r\n  return request({\r\n    url: \"/category/create\",\r\n    method: \"post\",\r\n    data: params\r\n  });\r\n}\r\n/**\r\n * 更新分类白名单字段\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function UpdateField(params) {\r\n  return request({\r\n    url: \"/category/update_field\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport { create } from \"../../api/category.js\";\r\n\r\nclass EditCategory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      desc: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  textFieldChange(field, event) {\r\n    this.setState({ [field]: event.target.value });\r\n  }\r\n  submitCategory() {\r\n    create(this.state)\r\n      .then(r => {\r\n        this.props.createSuccess();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.props.show}\r\n          onClose={this.props.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">新增分类</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              required\r\n              value={this.state.name}\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              onChange={this.textFieldChange.bind(this, \"name\")}\r\n              label=\"分类名称\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              value={this.state.desc}\r\n              id=\"desc\"\r\n              multiline\r\n              rows={2}\r\n              onChange={this.textFieldChange.bind(this, \"desc\")}\r\n              label=\"分类描述\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.props.handleClose}>关闭</Button>\r\n            <Button onClick={this.submitCategory.bind(this)} color=\"primary\">\r\n              确认\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCategory;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2)\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1)\r\n  }\r\n}))(MuiDialogActions);\r\n\r\nclass EditField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fieldContent: \"\"\r\n    };\r\n  }\r\n\r\n  saveFieldContent() {\r\n    this.props.editSuccess(\r\n      this.props.id,\r\n      this.props.field,\r\n      this.state.fieldContent\r\n    );\r\n  }\r\n\r\n  onEnteredDialog() {\r\n    this.setState({ fieldContent: this.props.fieldContent });\r\n  }\r\n\r\n  textFieldChange(event) {\r\n    this.setState({ fieldContent: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          onClose={this.props.onClose}\r\n          onEntering={this.onEnteredDialog.bind(this)}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          open={this.props.open}\r\n        >\r\n          <DialogTitle\r\n            id=\"customized-dialog-title\"\r\n            onClose={this.props.onClose}\r\n          >\r\n            修改{this.props.desc}\r\n          </DialogTitle>\r\n          <DialogContent dividers style={{ width: 600 }}>\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              margin=\"dense\"\r\n              value={this.state.fieldContent}\r\n              id=\"desc\"\r\n              multiline\r\n              rows={this.props.rows}\r\n              onChange={this.textFieldChange.bind(this)}\r\n              label={this.props.desc}\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              autoFocus\r\n              onClick={this.saveFieldContent.bind(this)}\r\n              color=\"primary\"\r\n            >\r\n              保存\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditField.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  row: PropTypes.number,\r\n  field: PropTypes.string.isRequired,\r\n  desc: PropTypes.string.isRequired,\r\n  fieldContent: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  editSuccess: PropTypes.func.isRequired\r\n};\r\n\r\nEditField.defaultProps = {\r\n  row: 1\r\n};\r\nexport default EditField;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableBody,\r\n  TableHead,\r\n  TableCell,\r\n  Paper,\r\n  Fab,\r\n  IconButton,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Tooltip\r\n} from \"@material-ui/core\";\r\nimport EditCategory from \"./edit.js\";\r\nimport { categories, destroy, UpdateField } from \"../../api/category.js\";\r\nimport EditField from \"../../components/editField.js\";\r\nimport Snackbar from \"../../components/snackbar\";\r\nimport Announcement from \"@material-ui/icons/Announcement\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2)\r\n  }\r\n});\r\n\r\nclass CategoryTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tableData: [],\r\n      destroyDialogShow: false,\r\n      editCategoryShow: false,\r\n      editField: {\r\n        id: 0,\r\n        open: false,\r\n        rows: 1,\r\n        desc: \"\",\r\n        field: \"\",\r\n        fieldContent: \"\"\r\n      }\r\n    };\r\n    this.destroyId = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTableData();\r\n    window.wsFuncCategory = () => {\r\n      this.getTableData();\r\n    };\r\n  }\r\n  componentWillUnmount() {\r\n    window.wsFuncCategory = null;\r\n  }\r\n  getTableData() {\r\n    categories()\r\n      .then(r => {\r\n        this.setState({ tableData: r });\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  destroyDialogOpen(id) {\r\n    this.destroyId = id;\r\n    this.setState({ destroyDialogShow: true });\r\n  }\r\n\r\n  destroyDialogClose() {\r\n    this.setState({ destroyDialogShow: false });\r\n  }\r\n\r\n  destroyConfirm() {\r\n    destroy({ id: this.destroyId })\r\n      .then(r => {\r\n        Snackbar.success(\"删除成功！\");\r\n        this.setState({ destroyDialogShow: false });\r\n        this.getTableData();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  editDialogShow() {\r\n    this.setState({ editCategoryShow: true });\r\n  }\r\n  editDialogClose() {\r\n    this.setState({ editCategoryShow: false });\r\n  }\r\n  createCategorySuccess() {\r\n    this.setState({ editCategoryShow: false });\r\n    this.getTableData();\r\n  }\r\n\r\n  clickEditField(row, inputRows, desc, field) {\r\n    this.setState({\r\n      editField: {\r\n        id: row.ID,\r\n        open: true,\r\n        rows: inputRows,\r\n        desc: desc,\r\n        field: field,\r\n        fieldContent: row[field]\r\n      }\r\n    });\r\n  }\r\n  editFieldSuccess(id, field, fieldContent) {\r\n    UpdateField({ id, field, fieldContent })\r\n      .then(() => {\r\n        this.closeResetEditFieldDialog();\r\n        this.getTableData();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  closeResetEditFieldDialog() {\r\n    this.setState({\r\n      editField: {\r\n        id: 0,\r\n        open: false,\r\n        rows: 1,\r\n        desc: \"\",\r\n        field: \"\",\r\n        fieldContent: \"\"\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Paper className={classes.root}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>ID</TableCell>\r\n                <TableCell align=\"left\">分类名字</TableCell>\r\n                <TableCell align=\"left\">任务数量</TableCell>\r\n                <TableCell align=\"left\">备注</TableCell>\r\n                <TableCell align=\"left\">创建时间</TableCell>\r\n                <TableCell align=\"left\">操作</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.tableData.map(row => (\r\n                <TableRow key={row.ID} hover>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.ID}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <EditIcon\r\n                      style={{\r\n                        fontSize: 14,\r\n                        marginRight: 10,\r\n                        cursor: \"pointer\"\r\n                      }}\r\n                      onClick={this.clickEditField.bind(\r\n                        this,\r\n                        row,\r\n                        1,\r\n                        \"标题\",\r\n                        \"Name\"\r\n                      )}\r\n                      color=\"primary\"\r\n                    />\r\n                    {row.Name}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.JobQuantity}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Tooltip\r\n                      title={row.Desc}\r\n                      classes={{ tooltip: classes.tooltip }}\r\n                      interactive\r\n                    >\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={this.clickEditField.bind(\r\n                          this,\r\n                          row,\r\n                          8,\r\n                          \"描述\",\r\n                          \"Desc\"\r\n                        )}\r\n                      >\r\n                        <Announcement />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.CreatedAt}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Tooltip title=\"删除分类\">\r\n                      <IconButton\r\n                        edge=\"start\"\r\n                        color=\"primary\"\r\n                        onClick={this.destroyDialogOpen.bind(this, row.ID)}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n        <Dialog\r\n          open={this.state.destroyDialogShow}\r\n          onClose={this.destroyDialogClose.bind(this)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"确认删除分类?\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              如果你确认要删除这个分类，请确保在这个分类下面已经没有任何任务了。\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={this.destroyDialogClose.bind(this)}\r\n              color=\"primary\"\r\n            >\r\n              关闭\r\n            </Button>\r\n            <Button\r\n              onClick={this.destroyConfirm.bind(this)}\r\n              color=\"secondary\"\r\n              autoFocus\r\n            >\r\n              确认\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Fab\r\n          color=\"primary\"\r\n          className={classes.fab}\r\n          aria-label=\"add\"\r\n          onClick={this.editDialogShow.bind(this)}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n        <EditField\r\n          id={this.state.editField.id}\r\n          open={this.state.editField.open}\r\n          desc={this.state.editField.desc}\r\n          rows={this.state.editField.rows}\r\n          field={this.state.editField.field}\r\n          fieldContent={this.state.editField.fieldContent}\r\n          onClose={this.closeResetEditFieldDialog.bind(this)}\r\n          editSuccess={this.editFieldSuccess.bind(this)}\r\n        />\r\n        <EditCategory\r\n          show={this.state.editCategoryShow}\r\n          handleClose={this.editDialogClose.bind(this)}\r\n          createSuccess={this.createCategorySuccess.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CategoryTable);\r\n","import request from \"../utils/request.js\";\r\n\r\n/**\r\n * 更新仓库代码\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function gitPull(params) {\r\n  return request({\r\n    url: \"/repository/git_pull\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 通过仓库 ID 获取分支\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function gitBranch(params) {\r\n  return request({\r\n    url: \"/repository/git_branch\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 通过仓库 ID 裁剪支\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function pruneBranch(params) {\r\n  return request({\r\n    url: \"/repository/prune_branch\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 删除仓库依赖\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function deleteDepend(params) {\r\n  return request({\r\n    url: \"/repository/delete_depend\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 获取全部仓库\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function repositories(params) {\r\n  return request({\r\n    url: \"/repositories\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 获取仓库分页\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function repositoryFind(params) {\r\n  return request({\r\n    url: \"/repository_find\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 删除仓库\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function destroy(params) {\r\n  return request({\r\n    url: \"/repository/delete\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 编辑\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function create(params) {\r\n  return request({\r\n    url: \"/repository/create\",\r\n    method: \"post\",\r\n    data: params\r\n  });\r\n}\r\n\r\n/**\r\n * 获取仓库可执行脚本\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function getScript(params) {\r\n  return request({\r\n    url: \"/repository/get_script\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 更新仓库白名单字段\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function UpdateField(params) {\r\n  return request({\r\n    url: \"/repository/update_field\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 丢弃仓库文件改动\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function discardChange(params) {\r\n  return request({\r\n    url: \"/repository/discard_change\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { create } from \"../../api/repository\";\r\n\r\nclass Edit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      url: \"\",\r\n      desc: \"\",\r\n      userName: \"\",\r\n      password: \"\",\r\n      dependTools: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  textFieldChange(field, event) {\r\n    this.setState({ [field]: event.target.value });\r\n  }\r\n\r\n  submitForm() {\r\n    create(this.state)\r\n      .then(r => {\r\n        this.props.createSuccess();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.props.show}\r\n          onClose={this.props.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">编辑仓库</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              required\r\n              autoFocus\r\n              value={this.state.name}\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              onChange={this.textFieldChange.bind(this, \"name\")}\r\n              label=\"仓库名称\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              required\r\n              autoFocus\r\n              value={this.state.url}\r\n              margin=\"dense\"\r\n              id=\"url\"\r\n              onChange={this.textFieldChange.bind(this, \"url\")}\r\n              label=\"仓库Url\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              select\r\n              required\r\n              value={this.state.dependTools}\r\n              margin=\"dense\"\r\n              id=\"dependTools\"\r\n              onChange={this.textFieldChange.bind(this, \"dependTools\")}\r\n              label=\"依赖安装工具\"\r\n              type=\"text\"\r\n              fullWidth\r\n            >\r\n              {this.props.dependentSupport.map(r => {\r\n                return (\r\n                  <MenuItem key={r} value={r}>\r\n                    {r}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </TextField>\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              autoFocus\r\n              value={this.state.userName}\r\n              margin=\"dense\"\r\n              id=\"userName\"\r\n              onChange={this.textFieldChange.bind(this, \"userName\")}\r\n              label=\"用户名\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              autoFocus\r\n              value={this.state.password}\r\n              margin=\"dense\"\r\n              id=\"password\"\r\n              onChange={this.textFieldChange.bind(this, \"password\")}\r\n              label=\"密码\"\r\n              type=\"password\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              margin=\"dense\"\r\n              value={this.state.desc}\r\n              id=\"desc\"\r\n              multiline\r\n              rows={6}\r\n              onChange={this.textFieldChange.bind(this, \"desc\")}\r\n              label=\"仓库描述\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.props.handleClose}>关闭</Button>\r\n            <Button onClick={this.submitForm.bind(this)} color=\"primary\">\r\n              确认\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Edit;\r\n","import React from \"react\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\n\r\nclass HelperTooltips extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <Tooltip title={this.props.help}>\r\n        <HelpOutlineIcon fontSize=\"small\" />\r\n      </Tooltip>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HelperTooltips;\r\n","import React from \"react\";\r\nimport { CircularProgress, IconButton, Tooltip } from \"@material-ui/core\";\r\n\r\nconst STATUS = [\"代码克隆中\", \"代码克隆完成\", \"代码克隆失败\"];\r\n\r\nclass RepositoryStatus extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  renderCircularProgress(status) {\r\n    if (0 === status) return <CircularProgress size={20} />;\r\n    if (1 === status)\r\n      return <CircularProgress variant=\"static\" value={100} size={20} />;\r\n    return (\r\n      <CircularProgress\r\n        variant=\"static\"\r\n        value={100}\r\n        size={20}\r\n        color=\"secondary\"\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Tooltip title={STATUS[this.props.status]}>\r\n          <IconButton color=\"primary\">\r\n            {this.renderCircularProgress(this.props.status)}\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RepositoryStatus;\r\n","import React from \"react\";\r\nimport { CircularProgress, IconButton, Tooltip } from \"@material-ui/core\";\r\n\r\nconst STATUS = [\"给我安排任务吧，现在空闲🤗\", \"资源被占用，非常忙😤\"];\r\n\r\nclass RepositoryJobStatus extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  renderCircularProgress(status) {\r\n    if (1 === status) return <CircularProgress size={20} color=\"secondary\" />;\r\n    return <CircularProgress variant=\"static\" value={100} size={20} />;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Tooltip title={STATUS[this.props.status]}>\r\n          <IconButton color=\"primary\">\r\n            {this.renderCircularProgress(this.props.status)}\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RepositoryJobStatus;\r\n","const tooltip = {\r\n  maxWidth: 600,\r\n  padding:10,\r\n  maxHeight:\"60vh\",\r\n  overflowY:\"auto\",\r\n  whiteSpace: \"pre-wrap\"\r\n};\r\n\r\n\r\nexport {tooltip}\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Tooltip,\r\n  IconButton,\r\n  Table,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n  Dialog\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\";\r\nimport FormatClearIcon from \"@material-ui/icons/FormatClear\";\r\nimport RestoreFromTrash from \"@material-ui/icons/RestoreFromTrash\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Computer from \"@material-ui/icons/Computer\";\r\nimport Announcement from \"@material-ui/icons/Announcement\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport HelperTooltips from \"../../components/helperTooltips\";\r\nimport RepositoryStatus from \"./repositoryStatus\";\r\nimport RepositoryJobStatus from \"./repositoryJobStatus\";\r\nimport Snackbar from \"../../components/snackbar\";\r\nimport {\r\n  deleteDepend,\r\n  destroy,\r\n  gitPull,\r\n  UpdateField,\r\n  pruneBranch,\r\n  discardChange\r\n} from \"../../api/repository\";\r\nimport EditField from \"../../components/editField\";\r\nimport { tooltip } from \"../../assets/jss/common\";\r\n\r\nconst styles = () => ({\r\n  table: {\r\n    minWidth: 400\r\n  },\r\n  tooltip\r\n});\r\n\r\nclass RepositoryTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      destroyDialogShow: false,\r\n      editField: {\r\n        id: 0,\r\n        open: false,\r\n        rows: 1,\r\n        desc: \"\",\r\n        field: \"\",\r\n        fieldContent: \"\"\r\n      }\r\n    };\r\n    this.destroyId = 0; //记录当前要删除的id\r\n  }\r\n\r\n  destroyDialogOpen(id) {\r\n    this.destroyId = id;\r\n    this.setState({ destroyDialogShow: true });\r\n  }\r\n\r\n  destroyDialogClose() {\r\n    this.setState({ destroyDialogShow: false });\r\n  }\r\n\r\n  deleteRepositoryDepend(row) {\r\n    if (row.Status !== 1) {\r\n      Snackbar.warning(\"仓库状态不正常，无法删除依赖\");\r\n      return;\r\n    }\r\n    deleteDepend({ id: row.ID })\r\n      .then(r => {\r\n        Snackbar.success(r);\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  discardRepoChange(row) {\r\n    discardChange({ id: row.ID })\r\n      .then(() => {\r\n        Snackbar.success(\"执行 git checkout . 成功！\");\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  destroyConfirm() {\r\n    destroy({ id: this.destroyId })\r\n      .then(r => {\r\n        this.setState({ destroyDialogShow: false });\r\n        this.props.refresh();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  repositoryGitPull(row) {\r\n    gitPull({ id: row.ID })\r\n      .then(() => {\r\n        Snackbar.success(\"已经更新代码\");\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  repositoryPruneBranch(row) {\r\n    pruneBranch({ id: row.ID })\r\n      .then(() => {\r\n        Snackbar.success(\"分支已经裁剪\");\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  clickEditField(row, inputRows, desc, field) {\r\n    this.setState({\r\n      editField: {\r\n        id: row.ID,\r\n        open: true,\r\n        rows: inputRows,\r\n        desc: desc,\r\n        field: field,\r\n        fieldContent: row[field]\r\n      }\r\n    });\r\n  }\r\n  editFieldSuccess(id, field, fieldContent) {\r\n    UpdateField({ id, field, fieldContent })\r\n      .then(() => {\r\n        this.closeResetEditFieldDialog();\r\n        this.props.refresh();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  closeResetEditFieldDialog() {\r\n    this.setState({\r\n      editField: {\r\n        id: 0,\r\n        open: false,\r\n        rows: 1,\r\n        desc: \"\",\r\n        field: \"\",\r\n        fieldContent: \"\"\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>ID</TableCell>\r\n              <TableCell align=\"center\">仓库地址</TableCell>\r\n              <TableCell align=\"center\">仓库名字</TableCell>\r\n              <TableCell align=\"center\">克隆状态</TableCell>\r\n              <TableCell align=\"center\">\r\n                工作状态\r\n                <HelperTooltips help=\"当前工作目录正在执行其他部署任务，资源被占用\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                仓库权限\r\n                <HelperTooltips help=\"私密仓库是需要用户名和密码的，否则克隆失败\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">终端信息</TableCell>\r\n              <TableCell align=\"center\">\r\n                备注\r\n                <HelperTooltips help=\"点击可以修改\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">依赖工具</TableCell>\r\n              <TableCell align=\"center\">\r\n                操作\r\n                <HelperTooltips help=\"删除的依赖会在任务执行时重新安装/丢弃本地修改用于修复安装依赖导致yarn.lock改变无法正常运行任务\" />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.props.tableData.map(row => (\r\n              <TableRow key={row.ID} hover>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.ID}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip title={row.Url} interactive>\r\n                    <IconButton color=\"primary\">\r\n                      <LinkIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell align=\"left\">\r\n                  <EditIcon\r\n                    style={{\r\n                      fontSize: 14,\r\n                      marginRight: 10,\r\n                      cursor: \"pointer\"\r\n                    }}\r\n                    onClick={this.clickEditField.bind(\r\n                      this,\r\n                      row,\r\n                      1,\r\n                      \"标题\",\r\n                      \"Name\"\r\n                    )}\r\n                    color=\"primary\"\r\n                  />\r\n                  {row.Name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <RepositoryStatus status={row.Status} />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <RepositoryJobStatus status={row.JobStatus} />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {row.UserName && row.Password ? (\r\n                    <Tooltip\r\n                      title={<div>用户名：{row.UserName}</div>}\r\n                      interactive\r\n                    >\r\n                      <IconButton color=\"primary\">\r\n                        <LockIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  ) : (\r\n                    <Tooltip title=\"仓库非私密\" interactive>\r\n                      <IconButton color=\"primary\">\r\n                        <LockOpenIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip\r\n                    title={row.TerminalInfo}\r\n                    classes={{ tooltip: classes.tooltip }}\r\n                    interactive\r\n                  >\r\n                    <IconButton color=\"primary\">\r\n                      <Computer />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip\r\n                    title={row.Desc}\r\n                    classes={{ tooltip: classes.tooltip }}\r\n                    interactive\r\n                  >\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.clickEditField.bind(\r\n                        this,\r\n                        row,\r\n                        8,\r\n                        \"描述\",\r\n                        \"Desc\"\r\n                      )}\r\n                    >\r\n                      <Announcement />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <span className=\"tag\">{row.DependTools.toUpperCase()}</span>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip title=\"更新仓库\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.repositoryGitPull.bind(this, row)}\r\n                    >\r\n                      <SaveAlt />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"裁剪分支\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.repositoryPruneBranch.bind(this, row)}\r\n                    >\r\n                      <FormatClearIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"丢弃本地仓库变动\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.discardRepoChange.bind(this, row)}\r\n                    >\r\n                      <RotateLeftIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"删除依赖\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.deleteRepositoryDepend.bind(this, row)}\r\n                    >\r\n                      <RestoreFromTrash />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"删除仓库\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.destroyDialogOpen.bind(this, row.ID)}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <EditField\r\n          id={this.state.editField.id}\r\n          open={this.state.editField.open}\r\n          desc={this.state.editField.desc}\r\n          rows={this.state.editField.rows}\r\n          field={this.state.editField.field}\r\n          fieldContent={this.state.editField.fieldContent}\r\n          onClose={this.closeResetEditFieldDialog.bind(this)}\r\n          editSuccess={this.editFieldSuccess.bind(this)}\r\n        />\r\n        <Dialog\r\n          open={this.state.destroyDialogShow}\r\n          onClose={this.destroyDialogClose.bind(this)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"确认删除仓库?\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              你确认要删除这个仓库？没有任务使用此仓库才能删除。\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={this.destroyDialogClose.bind(this)}\r\n              color=\"primary\"\r\n            >\r\n              关闭\r\n            </Button>\r\n            <Button\r\n              onClick={this.destroyConfirm.bind(this)}\r\n              color=\"secondary\"\r\n              autoFocus\r\n            >\r\n              确认\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(RepositoryTable);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Fab, Paper } from \"@material-ui/core\";\r\nimport Edit from \"./edit\";\r\nimport Table from \"./repositoryTable\";\r\nimport { getSystemInfo } from \"../../utils/dataStorage\";\r\nimport { repositoryFind } from \"../../api/repository\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n    overflowX: \"auto\"\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2)\r\n  },\r\n  pagination: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(3)\r\n  }\r\n});\r\n\r\nclass RepositoryTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tableData: [],\r\n      editShow: false,\r\n      dependentSupport: getSystemInfo(\"DependTools\") || [],\r\n      totalPage: 1,\r\n      pageNum: 1\r\n    };\r\n    // this.timeout = null;\r\n  }\r\n  componentDidMount() {\r\n    this.getTableData();\r\n    window.wsFuncRepo = () => {\r\n      this.getTableData(this.state.pageNum);\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.wsFuncRepo = null;\r\n    // if (this.timeout) clearTimeout(this.timeout);\r\n  }\r\n  editDialogShow() {\r\n    this.setState({ editShow: true });\r\n  }\r\n\r\n  editDialogClose() {\r\n    this.setState({ editShow: false });\r\n  }\r\n\r\n  createSuccess() {\r\n    this.setState({ editShow: false });\r\n    this.getTableData();\r\n  }\r\n  getTableData(pageNum = 1, pageSize = 8) {\r\n    // if (this.timeout) clearTimeout(this.timeout);\r\n    repositoryFind({ pageNum, pageSize })\r\n      .then(r => {\r\n        this.setState({\r\n          tableData: r.List,\r\n          totalPage: r.TotalPage,\r\n          pageNum: r.PageNum\r\n        });\r\n\r\n        // for (let i = 0; i < r.length; i++) {\r\n        //   if (\r\n        //     r[i].Status === 0 ||\r\n        //     (r[i].JobStatus === 1 && r[i].Status === 1)\r\n        //   ) {\r\n        //     //仓库正在克隆当中  或者 （一个正常的仓库很繁忙）的情况就会刷新\r\n        //     this.timeout = setTimeout(() => {\r\n        //       this.getTableData();\r\n        //     }, 5000);\r\n        //     return;\r\n        //   }\r\n        // }\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  changePagination(v, pageNum) {\r\n    if (pageNum === this.state.pageNum) {\r\n      return;\r\n    }\r\n    this.getTableData(pageNum);\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Paper className={classes.root}>\r\n          <Table\r\n            tableData={this.state.tableData}\r\n            refresh={this.getTableData.bind(this)}\r\n          />\r\n          <div className={classes.pagination}>\r\n            <Pagination\r\n              count={this.state.totalPage}\r\n              page={this.state.pageNum}\r\n              onChange={this.changePagination.bind(this)}\r\n              color=\"primary\"\r\n              shape=\"rounded\"\r\n            />\r\n          </div>\r\n        </Paper>\r\n        <Fab\r\n          color=\"primary\"\r\n          className={classes.fab}\r\n          aria-label=\"add\"\r\n          onClick={this.editDialogShow.bind(this)}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n        <Edit\r\n          dependentSupport={this.state.dependentSupport}\r\n          show={this.state.editShow}\r\n          handleClose={this.editDialogClose.bind(this)}\r\n          createSuccess={this.createSuccess.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(RepositoryTable);\r\n","import request from \"../utils/request.js\";\r\n\r\n/**\r\n * 获取全部任务\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function jobs(params) {\r\n  return request({\r\n    url: \"/jobs\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 通过分类ID获取任务\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function jobsFind(params) {\r\n  return request({\r\n    url: \"/jobs_find\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 任务创建\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function create(params) {\r\n  return request({\r\n    url: \"/job/create\",\r\n    method: \"post\",\r\n    data: params\r\n  });\r\n}\r\n\r\n/**\r\n * 修改任务分支\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function updateBranch(params) {\r\n  return request({\r\n    url: \"/job/update_branch\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 删除\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function destroy(params) {\r\n  return request({\r\n    url: \"/job/delete\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 运行任务\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function RunJob(params) {\r\n  return request({\r\n    url: \"/job/run\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 更新任务白名单字段\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function UpdateField(params) {\r\n  return request({\r\n    url: \"/job/update_field\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 更新任务描述\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function jobLock(params) {\r\n  return request({\r\n    url: \"/job/lock\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { CircularProgress, IconButton, Tooltip } from \"@material-ui/core\";\r\n\r\nconst STATUS = [\"任务空闲\", \"打包成功\", \"打包失败\", \"正在打包\"];\r\n\r\nclass RepositoryStatus extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  renderCircularProgress(status) {\r\n    if (0 === status)\r\n      return (\r\n        <CircularProgress\r\n          variant=\"static\"\r\n          style={{ color: \"#9E9E9E\" }}\r\n          value={100}\r\n          size={20}\r\n        />\r\n      );\r\n    if (1 === status)\r\n      return <CircularProgress variant=\"static\" value={100} size={20} />;\r\n    if (2 === status)\r\n      return (\r\n        <CircularProgress\r\n          variant=\"static\"\r\n          value={100}\r\n          size={20}\r\n          color=\"secondary\"\r\n        />\r\n      );\r\n    return <CircularProgress size={20} />;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Tooltip title={STATUS[this.props.status]}>\r\n          <IconButton color=\"primary\">\r\n            {this.renderCircularProgress(this.props.status)}\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RepositoryStatus;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { gitBranch } from \"../../api/repository\";\r\nimport { updateBranch } from \"../../api/job\";\r\nimport { DialogContentText } from \"@material-ui/core\";\r\n\r\nclass SwitchBranchDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      branchList: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n  onEnteredDialog() {\r\n    this.setState({ branchList: [] });\r\n    gitBranch({ id: this.props.repositoryId })\r\n      .then(r => {\r\n        this.setState({ branchList: r });\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  selectBranch(branch) {\r\n    updateBranch({ branch: branch, id: this.props.jobId })\r\n      .then(() => {\r\n        this.props.switchSuccess();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.open}\r\n        onEntering={this.onEnteredDialog.bind(this)}\r\n        onClose={this.props.onClose}\r\n        aria-labelledby=\"dialog-title\"\r\n      >\r\n        <DialogTitle id=\"dialog-title\">切换当前任务的分支</DialogTitle>\r\n        <DialogContentText>\r\n          {this.state.branchList.length === 0 ? \"分支无法使用\" : \"\"}\r\n        </DialogContentText>\r\n        <List>\r\n          {this.state.branchList.map(branch => (\r\n            <ListItem\r\n              button\r\n              onClick={this.selectBranch.bind(this, branch)}\r\n              key={branch}\r\n            >\r\n              <ListItemText primary={branch} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nSwitchBranchDialog.propTypes = {\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  jobId: PropTypes.number,\r\n  repositoryId: PropTypes.number,\r\n  switchSuccess: PropTypes.func\r\n};\r\n\r\nexport default SwitchBranchDialog;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport LinkOffIcon from \"@material-ui/icons/LinkOff\";\r\nimport UsbIcon from \"@material-ui/icons/Usb\";\r\nimport Computer from \"@material-ui/icons/Computer\";\r\nimport Announcement from \"@material-ui/icons/Announcement\";\r\nimport PlayCircleFilled from \"@material-ui/icons/PlayCircleFilled\";\r\nimport DeviceHub from \"@material-ui/icons/DeviceHub\";\r\nimport {\r\n  TextField,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  Table,\r\n  Tooltip,\r\n  IconButton,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n  Dialog\r\n} from \"@material-ui/core\";\r\nimport JobStatus from \"./jobStatus\";\r\nimport HelperTooltips from \"../../components/helperTooltips\";\r\nimport EditField from \"../../components/editField.js\";\r\nimport SwitchBranchDialog from \"./switchBranchDialog\";\r\nimport Snackbar from \"../../components/snackbar/index\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { destroy, RunJob, UpdateField, jobLock } from \"../../api/job\";\r\nimport { tooltip } from \"../../assets/jss/common\";\r\nimport { getSystemInfo } from \"../../utils/dataStorage\";\r\n\r\nconst styles = theme => ({\r\n  table: {\r\n    marginTop: theme.spacing(3),\r\n    minWidth: 650\r\n  },\r\n  tooltip\r\n});\r\n\r\nclass CategoriesTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      destroyDialogShow: false,\r\n      switchBranchDialog: {\r\n        id: 0,\r\n        show: false,\r\n        repositoryId: 0\r\n      },\r\n      lockPassword: {\r\n        id: 0,\r\n        password: \"\",\r\n        show: false\r\n      },\r\n      editField: {\r\n        id: 0,\r\n        open: false,\r\n        desc: \"\",\r\n        rows: 1,\r\n        field: \"\",\r\n        fieldContent: \"\"\r\n      }\r\n    };\r\n    this.destroyId = 0;\r\n    this.addressUrl = getSystemInfo(\"OtherAddressUrl\") || [];\r\n  }\r\n  toggleLock(row) {\r\n    this.setState({\r\n      lockPassword: {\r\n        id: row.ID,\r\n        password: \"\",\r\n        show: true\r\n      }\r\n    });\r\n  }\r\n  runJob(row) {\r\n    if (row.Status === 3) {\r\n      Snackbar.warning(\"任务正在打包，请稍等\");\r\n      return;\r\n    }\r\n    if (row.LockPassword !== \"\") {\r\n      Snackbar.warning(\"任务锁定，请先解锁\");\r\n      return;\r\n    }\r\n\r\n    RunJob({ id: row.ID })\r\n      .then(r => {\r\n        Snackbar.success(\"运行成功，正在打包\");\r\n        this.props.refresh();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  openSwitchBranchDialog(row) {\r\n    if (row.LockPassword !== \"\") {\r\n      Snackbar.warning(\"任务锁定，请先解锁\");\r\n      return;\r\n    }\r\n    if (row.Status === 3) {\r\n      Snackbar.warning(\"任务正在打包，请稍等\");\r\n      return;\r\n    }\r\n    this.setState({\r\n      switchBranchDialog: {\r\n        id: row.ID,\r\n        show: true,\r\n        repositoryId: row.RepositoryId\r\n      }\r\n    });\r\n  }\r\n\r\n  switchSuccess() {\r\n    this.setState({\r\n      switchBranchDialog: {\r\n        id: 0,\r\n        show: false,\r\n        repositoryId: 0\r\n      }\r\n    });\r\n    this.props.refresh();\r\n  }\r\n\r\n  closeSwitchBranchDialog() {\r\n    this.setState({\r\n      switchBranchDialog: {\r\n        id: 0,\r\n        show: false,\r\n        repositoryId: 0\r\n      }\r\n    });\r\n  }\r\n\r\n  destroyDialogOpen(row) {\r\n    if (row.LockPassword !== \"\") {\r\n      Snackbar.warning(\"任务锁定，请先解锁\");\r\n      return;\r\n    }\r\n    this.destroyId = row.ID;\r\n    this.setState({ destroyDialogShow: true });\r\n  }\r\n\r\n  destroyDialogClose() {\r\n    this.setState({ destroyDialogShow: false });\r\n  }\r\n\r\n  destroyConfirm() {\r\n    destroy({ id: this.destroyId })\r\n      .then(r => {\r\n        Snackbar.success(\"删除成功！\");\r\n        this.setState({ destroyDialogShow: false });\r\n        this.props.refresh();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  openJobUrl(row, url) {\r\n    if (row.Status !== 1) {\r\n      Snackbar.error(\"任务没有打包成功！\");\r\n      return;\r\n    }\r\n    window.open(url);\r\n  }\r\n  closeLockJobDialog() {\r\n    this.setState({\r\n      lockPassword: {\r\n        id: 0,\r\n        password: \"\",\r\n        show: false\r\n      }\r\n    });\r\n  }\r\n\r\n  lockJobDialogConfirm() {\r\n    let p = {\r\n      id: this.state.lockPassword.id,\r\n      password: this.state.lockPassword.password\r\n    };\r\n    jobLock(p)\r\n      .then(r => {\r\n        Snackbar.success(\"操作成功！\");\r\n        this.props.refresh();\r\n        this.setState({\r\n          lockPassword: {\r\n            id: 0,\r\n            password: \"\",\r\n            show: false\r\n          }\r\n        });\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  passwordFieldChange(event) {\r\n    let p = this.state.lockPassword;\r\n    p.password = event.target.value;\r\n    this.setState({ lockPassword: p });\r\n  }\r\n\r\n  clickEditField(row, inputRows, desc, field) {\r\n    if (row.LockPassword !== \"\") {\r\n      Snackbar.warning(\"任务锁定，请先解锁\");\r\n      return;\r\n    }\r\n    this.setState({\r\n      editField: {\r\n        id: row.ID,\r\n        open: true,\r\n        rows: inputRows,\r\n        desc: desc,\r\n        field: field,\r\n        fieldContent: row[field]\r\n      }\r\n    });\r\n  }\r\n\r\n  editFieldSuccess(id, field, fieldContent) {\r\n    UpdateField({ id, field, fieldContent })\r\n      .then(() => {\r\n        this.setState({\r\n          editField: {\r\n            id: 0,\r\n            open: false,\r\n            rows: 1,\r\n            desc: \"\",\r\n            field: \"\",\r\n            fieldContent: \"\"\r\n          }\r\n        });\r\n        this.props.refresh();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  closeEditFieldDialog() {\r\n    this.setState({\r\n      editField: {\r\n        id: 0,\r\n        open: false,\r\n        rows: 1,\r\n        desc: \"\",\r\n        field: \"\",\r\n        fieldContent: \"\"\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">ID</TableCell>\r\n              <TableCell align=\"center\">\r\n                加锁\r\n                <HelperTooltips help=\"临时锁定任务，防止别人切换分支打包\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">任务名称</TableCell>\r\n              <TableCell align=\"center\">任务状态</TableCell>\r\n              <TableCell align=\"center\">\r\n                当前分支\r\n                <HelperTooltips help=\"当前任务分支，如有需要请先切换分支\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">运行次数</TableCell>\r\n              <TableCell align=\"center\">\r\n                访问地址\r\n                <HelperTooltips help=\"打包成功时可访问的页面🤓\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                WebHook\r\n                <HelperTooltips help=\"触发任务的钩子，如果此任务仓库资源被占用则无法打包\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">终端信息</TableCell>\r\n              {/*<TableCell align=\"center\">*/}\r\n              {/*  附加脚本*/}\r\n              {/*  <HelperTooltips help=\"打包成功运行的脚本，多个用 ; 隔开\"/>*/}\r\n              {/*</TableCell>*/}\r\n              <TableCell align=\"center\">\r\n                任务描述\r\n                <HelperTooltips help=\"针对任务的一些描述，比如账号、Swagger UI 地址等,点击即可修改。\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">打包目录</TableCell>\r\n              <TableCell align=\"center\">打包命令</TableCell>\r\n              <TableCell align=\"center\">操作</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.props.tableData.map(row => (\r\n              <TableRow key={row.ID} hover>\r\n                <TableCell align=\"center\">{row.ID}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  {row.LockPassword ? (\r\n                    <Tooltip title={\"操作人：\" + row.User} interactive>\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={this.toggleLock.bind(this, row)}\r\n                      >\r\n                        <LockIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  ) : (\r\n                    <Tooltip title=\"任务未加锁\" interactive>\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={this.toggleLock.bind(this, row)}\r\n                      >\r\n                        <LockOpenIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"left\" style={{ fontSize: \"12px\" }}>\r\n                  <EditIcon\r\n                    style={{ fontSize: 14, marginRight: 10, cursor: \"pointer\" }}\r\n                    onClick={this.clickEditField.bind(\r\n                      this,\r\n                      row,\r\n                      1,\r\n                      \"标题\",\r\n                      \"Name\"\r\n                    )}\r\n                    color=\"primary\"\r\n                  />\r\n                  {row.Name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <JobStatus status={row.Status} />\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.Branch}</TableCell>\r\n                <TableCell align=\"center\">{row.RunQuantity}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip\r\n                    style={{ padding: 10 }}\r\n                    title={\r\n                      row.Status !== 1 ? (\r\n                        \"没有打包成功之前是不能访问的\"\r\n                      ) : (\r\n                        <React.Fragment>\r\n                          <a\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            style={{ color: \"#fff\" }}\r\n                            href={window.location.origin + row.Url}\r\n                          >\r\n                            {window.location.origin + row.Url}\r\n                          </a>\r\n                          {this.addressUrl.map(url => {\r\n                            return (\r\n                              <React.Fragment key={url}>\r\n                                <br />\r\n                                <a\r\n                                  target=\"_blank\"\r\n                                  rel=\"noopener noreferrer\"\r\n                                  style={{ color: \"#fff\" }}\r\n                                  href={url + \"/\" + row.ID}\r\n                                >\r\n                                  {url + \"/\" + row.ID}\r\n                                </a>\r\n                              </React.Fragment>\r\n                            );\r\n                          })}\r\n                        </React.Fragment>\r\n                      )\r\n                    }\r\n                    interactive\r\n                  >\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.openJobUrl.bind(\r\n                        this,\r\n                        row,\r\n                        window.location.origin + row.Url\r\n                      )}\r\n                    >\r\n                      {row.Status !== 1 ? <LinkOffIcon /> : <LinkIcon />}\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip\r\n                    title={window.location.origin + row.WebHookUrl}\r\n                    interactive\r\n                  >\r\n                    <IconButton color=\"primary\">\r\n                      <UsbIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip\r\n                    title={row.TerminalInfo}\r\n                    classes={{ tooltip: classes.tooltip }}\r\n                    interactive\r\n                  >\r\n                    <IconButton color=\"primary\">\r\n                      <Computer />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip\r\n                    title={row.Desc}\r\n                    classes={{ tooltip: classes.tooltip }}\r\n                    interactive\r\n                  >\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.clickEditField.bind(\r\n                        this,\r\n                        row,\r\n                        8,\r\n                        \"描述\",\r\n                        \"Desc\"\r\n                      )}\r\n                    >\r\n                      <Announcement />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <span className=\"tag\">{row.BuildDir}</span>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <span className=\"tag\">{row.BuildCommand}</span>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip title=\"切换分支\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.openSwitchBranchDialog.bind(this, row)}\r\n                    >\r\n                      <DeviceHub />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"运行任务\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.runJob.bind(this, row)}\r\n                    >\r\n                      <PlayCircleFilled />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"删除任务\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.destroyDialogOpen.bind(this, row)}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <EditField\r\n          id={this.state.editField.id}\r\n          open={this.state.editField.open}\r\n          desc={this.state.editField.desc}\r\n          rows={this.state.editField.rows}\r\n          field={this.state.editField.field}\r\n          fieldContent={this.state.editField.fieldContent}\r\n          onClose={this.closeEditFieldDialog.bind(this)}\r\n          editSuccess={this.editFieldSuccess.bind(this)}\r\n        />\r\n        <SwitchBranchDialog\r\n          jobId={this.state.switchBranchDialog.id}\r\n          repositoryId={this.state.switchBranchDialog.repositoryId}\r\n          open={this.state.switchBranchDialog.show}\r\n          onClose={this.closeSwitchBranchDialog.bind(this)}\r\n          switchSuccess={this.switchSuccess.bind(this)}\r\n        />\r\n        <Dialog\r\n          open={this.state.destroyDialogShow}\r\n          onClose={this.destroyDialogClose.bind(this)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"确认删除任务?\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              你确认要删除这个任务？\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={this.destroyDialogClose.bind(this)}\r\n              color=\"primary\"\r\n            >\r\n              关闭\r\n            </Button>\r\n            <Button\r\n              onClick={this.destroyConfirm.bind(this)}\r\n              color=\"secondary\"\r\n              autoFocus\r\n            >\r\n              确认\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {/*任务加锁密码*/}\r\n        <Dialog\r\n          open={this.state.lockPassword.show}\r\n          onClose={this.closeLockJobDialog.bind(this)}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">解锁或加锁</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>需要你输入密码来解锁或加锁。</DialogContentText>\r\n            <TextField\r\n              onChange={this.passwordFieldChange.bind(this)}\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"password\"\r\n              label=\"Lock Password\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={this.closeLockJobDialog.bind(this)}\r\n              color=\"primary\"\r\n            >\r\n              关闭\r\n            </Button>\r\n            <Button\r\n              onClick={this.lockJobDialogConfirm.bind(this)}\r\n              color=\"primary\"\r\n            >\r\n              确认\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CategoriesTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { create } from \"../../api/job\";\r\nimport { repositories, getScript } from \"../../api/repository\";\r\n\r\nclass Edit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      desc: \"\",\r\n      repositoryId: \"\",\r\n      buildDir: \"dist\",\r\n      buildCommand: \"\",\r\n      successScript: \"\",\r\n      repositories: [],\r\n      buildCommandList: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    repositories({ isNormal: 1 })\r\n      .then(r => {\r\n        this.setState({ repositories: r });\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  textFieldChange(field, event) {\r\n    this.setState({ [field]: event.target.value });\r\n    if (field === \"repositoryId\") {\r\n      this.onChangeRepository(event);\r\n    }\r\n  }\r\n\r\n  onChangeRepository(event) {\r\n    getScript({ id: event.target.value })\r\n      .then(r => {\r\n        delete r.dev;\r\n        this.setState({ buildCommandList: r });\r\n      })\r\n      .catch(() => {});\r\n    this.setState({ repositoryId: event.target.value });\r\n  }\r\n\r\n  submitForm() {\r\n    create({ ...this.state, categoryId: this.props.categoryId })\r\n      .then(r => {\r\n        this.props.createSuccess();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.props.show}\r\n          onClose={this.props.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            在《{this.props.categoryName}》分类下添加任务\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              required\r\n              autoFocus\r\n              value={this.state.name}\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              onChange={this.textFieldChange.bind(this, \"name\")}\r\n              label=\"任务名称\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              select\r\n              required\r\n              value={this.state.repositoryId}\r\n              margin=\"dense\"\r\n              id=\"repositoryId\"\r\n              onChange={this.textFieldChange.bind(this, \"repositoryId\")}\r\n              label=\"选择仓库\"\r\n              type=\"text\"\r\n              fullWidth\r\n            >\r\n              {this.state.repositories.map(r => {\r\n                return (\r\n                  <MenuItem key={r.ID} value={r.ID}>\r\n                    {r.Name}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </TextField>\r\n            <TextField\r\n              required\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              autoFocus\r\n              value={this.state.buildDir}\r\n              margin=\"dense\"\r\n              id=\"buildDir\"\r\n              onChange={this.textFieldChange.bind(this, \"buildDir\")}\r\n              label=\"打包目录\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              select\r\n              required\r\n              value={this.state.buildCommand}\r\n              margin=\"dense\"\r\n              id=\"buildCommand\"\r\n              onChange={this.textFieldChange.bind(this, \"buildCommand\")}\r\n              label=\"选择打包的命令\"\r\n              type=\"text\"\r\n              fullWidth\r\n            >\r\n              {Object.keys(this.state.buildCommandList).map(key => {\r\n                return (\r\n                  <MenuItem key={key} value={key}>\r\n                    {key} => {this.state.buildCommandList[key]}{\" \"}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </TextField>\r\n            {/*<TextField*/}\r\n            {/*  InputLabelProps={{*/}\r\n            {/*    shrink: true,*/}\r\n            {/*  }}*/}\r\n            {/*  autoFocus value={this.state.password} margin=\"dense\" id=\"password\"*/}\r\n            {/*  onChange={this.textFieldChange.bind(this, 'password')} label=\"任务加密\" type=\"password\" fullWidth*/}\r\n            {/*/>*/}\r\n            {/*<TextField*/}\r\n            {/*  InputLabelProps={{*/}\r\n            {/*    shrink: true,*/}\r\n            {/*  }}*/}\r\n            {/*  margin=\"dense\" value={this.state.successScript} id=\"desc\" multiline rows={6}*/}\r\n            {/*  onChange={this.textFieldChange.bind(this, 'successScript')} label=\"打包成功执行的命令（用户权限模块没有完成，现在不会运行）\"*/}\r\n            {/*  type=\"text\" fullWidth*/}\r\n            {/*/>*/}\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              margin=\"dense\"\r\n              value={this.state.desc}\r\n              id=\"desc\"\r\n              multiline\r\n              rows={6}\r\n              onChange={this.textFieldChange.bind(this, \"desc\")}\r\n              label=\"任务描述\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.props.handleClose}>关闭</Button>\r\n            <Button onClick={this.submitForm.bind(this)} color=\"primary\">\r\n              确认\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEdit.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  categoryId: PropTypes.number.isRequired,\r\n  categoryName: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Edit;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Tab, Tabs, Paper, Fab } from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { jobsFind } from \"../../api/job\";\r\nimport { categories } from \"../../api/category\";\r\nimport CategoriesTable from \"./categoriesTable\";\r\nimport Edit from \"./edit\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2)\r\n  },\r\n  pagination: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(3)\r\n  }\r\n});\r\n\r\nclass Jobs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      category: 0,\r\n      categories: [],\r\n      jobs: [],\r\n      editDialog: {\r\n        show: false,\r\n        categoryId: 0,\r\n        categoryName: \"\"\r\n      },\r\n      totalPage: 1,\r\n      pageNum: 1\r\n    };\r\n    this.timeoutId = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    categories()\r\n      .then(r => {\r\n        if (r.length === 0) {\r\n          alert(\"请先新建分类\");\r\n          return;\r\n        }\r\n        this.setState({ categories: r }, () => {\r\n          this.setTabAndJobsByCategoryId(0);\r\n        });\r\n        window.wsFuncJob = () => {\r\n          this.setTabAndJobsByCategoryId(\r\n            this.state.category,\r\n            this.state.pageNum\r\n          );\r\n        };\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  componentWillUnmount() {\r\n    window.wsFuncJob = null;\r\n  }\r\n  changePagination(v, pageNum) {\r\n    if (pageNum === this.state.pageNum) {\r\n      return;\r\n    }\r\n    this.setTabAndJobsByCategoryId(this.state.category, pageNum);\r\n  }\r\n\r\n  tabsChange(event, index) {\r\n    this.setTabAndJobsByCategoryId(index);\r\n  }\r\n\r\n  setTabAndJobsByCategoryId(index = 0, pageNum = 1, pageSize = 8) {\r\n    let categoryId = this.state.categories[index].ID;\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n    }\r\n    jobsFind({ categoryId, pageNum, pageSize })\r\n      .then(r => {\r\n        this.setState({\r\n          category: index,\r\n          jobs: r.List,\r\n          totalPage: r.TotalPage,\r\n          pageNum: r.PageNum\r\n        });\r\n        // for (let i = 0; i < r.List.length; i++) {\r\n        //   if (r.List[i].Status === 3) {\r\n        //     this.timeoutId = setTimeout(() => {\r\n        //       this.setTabAndJobsByCategoryId(index, pageNum, pageSize);\r\n        //     }, 2000);\r\n        //     return;\r\n        //   }\r\n        // }\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  editDialogShow() {\r\n    let category = this.state.categories[this.state.category];\r\n    this.setState({\r\n      editDialog: {\r\n        show: true,\r\n        categoryId: category.ID,\r\n        categoryName: category.Name\r\n      }\r\n    });\r\n  }\r\n\r\n  createSuccess() {\r\n    this.setTabAndJobsByCategoryId(this.state.category);\r\n    this.setState({\r\n      editDialog: {\r\n        show: false,\r\n        categoryId: 0,\r\n        categoryName: \"\"\r\n      }\r\n    });\r\n  }\r\n\r\n  createClose() {\r\n    this.setState({\r\n      editDialog: {\r\n        show: false,\r\n        categoryId: 0,\r\n        categoryName: \"\"\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Paper className={classes.root}>\r\n          <Tabs\r\n            value={this.state.category}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n            onChange={this.tabsChange.bind(this)}\r\n          >\r\n            {this.state.categories.map(category => (\r\n              <Tab key={category.ID} label={category.Name} />\r\n            ))}\r\n          </Tabs>\r\n          <CategoriesTable\r\n            tableData={this.state.jobs}\r\n            refresh={this.setTabAndJobsByCategoryId.bind(\r\n              this,\r\n              this.state.category\r\n            )}\r\n          />\r\n          <div className={classes.pagination}>\r\n            <Pagination\r\n              count={this.state.totalPage}\r\n              page={this.state.pageNum}\r\n              onChange={this.changePagination.bind(this)}\r\n              color=\"primary\"\r\n              shape=\"rounded\"\r\n            />\r\n          </div>\r\n        </Paper>\r\n        <Fab\r\n          color=\"primary\"\r\n          className={classes.fab}\r\n          aria-label=\"add\"\r\n          onClick={this.editDialogShow.bind(this)}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n        <Edit\r\n          show={this.state.editDialog.show}\r\n          categoryId={this.state.editDialog.categoryId}\r\n          categoryName={this.state.editDialog.categoryName}\r\n          handleClose={this.createClose.bind(this)}\r\n          createSuccess={this.createSuccess.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Jobs);\r\n","import request from \"../utils/request.js\";\r\n\r\n/**\r\n * 用户注册\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function register(params) {\r\n  return request({\r\n    url: \"/register\",\r\n    method: \"post\",\r\n    data: params\r\n  });\r\n}\r\n\r\n/**\r\n * 用户登陆\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function login(params) {\r\n  return request({\r\n    url: \"/login\",\r\n    method: \"post\",\r\n    data: params\r\n  });\r\n}\r\n\r\n/**\r\n * 用户列表\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function users(params) {\r\n  return request({\r\n    url: \"/users\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 删除用户\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function deleteUsers(params) {\r\n  return request({\r\n    url: \"/user/delete\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 删除用户\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function roleEdit(params) {\r\n  return request({\r\n    url: \"/user/role_edit\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Role from \"../../config/role\";\r\nconst RLOECOLOR = [\"#f44336\", \"#f44336\", \"#ff9800\", \"#3f51b5\", \"#4caf50\"];\r\nclass RoleDesc extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span\r\n          className=\"tag\"\r\n          style={{ backgroundColor: RLOECOLOR[this.props.role] }}\r\n        >\r\n          {Role[this.props.role]}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoleDesc;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { users, deleteUsers, roleEdit } from \"../../api/user\";\r\nimport { IconButton, Tooltip } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ThumbDown from \"@material-ui/icons/ThumbDown\";\r\nimport ThumbUp from \"@material-ui/icons/ThumbUp\";\r\nimport Snackbar from \"../../components/snackbar\";\r\nimport RoleDesc from \"./roleDesc\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  sept: {\r\n    marginTop: 20,\r\n    padding: theme.spacing(3, 2)\r\n  }\r\n});\r\n\r\nclass User extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tableData: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getUserList();\r\n    window.wsFuncUser = () => {\r\n      this.getUserList();\r\n    };\r\n  }\r\n  componentWillUnmount() {\r\n    window.wsFuncUser = null;\r\n  }\r\n  getUserList() {\r\n    users()\r\n      .then(r => {\r\n        this.setState({ tableData: r });\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  destroyUser(row) {\r\n    deleteUsers({ id: row.ID })\r\n      .then(r => {\r\n        Snackbar.success(\"删除成功\");\r\n        this.getUserList();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  role(row, isUp = 0) {\r\n    roleEdit({ id: row.ID, isUp: isUp })\r\n      .then(r => {\r\n        Snackbar.success(\"修改成功\");\r\n        this.getUserList();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Paper className={classes.root}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>ID</TableCell>\r\n                <TableCell align=\"left\">用户名字</TableCell>\r\n                <TableCell align=\"left\">角色</TableCell>\r\n                <TableCell align=\"left\">备注</TableCell>\r\n                <TableCell align=\"center\">操作</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.tableData.map(row => (\r\n                <TableRow key={row.ID} hover>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.ID}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.Username}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <RoleDesc role={row.Role} />\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.Desc}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Tooltip title=\"角色提升\">\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={this.role.bind(this, row, 1)}\r\n                      >\r\n                        <ThumbUp />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"角色降级\">\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={this.role.bind(this, row, 0)}\r\n                      >\r\n                        <ThumbDown />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"删除用户\">\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={this.destroyUser.bind(this, row)}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(User);\r\n","import Dashboard from \"../views/dashboard\";\r\nimport Category from \"../views/category\";\r\nimport Repository from \"../views/repository\";\r\nimport Job from \"../views/job\";\r\nimport Users from \"../views/users\";\r\n\r\nimport CategoryIcon from \"@material-ui/icons/Category\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\n\r\nexport default [\r\n  {\r\n    title: \"仪表盘\",\r\n    path: \"/dashboard\",\r\n    isMenu: true,\r\n    icon: HomeIcon,\r\n    component: Dashboard\r\n  },\r\n  {\r\n    title: \"仓库列表\",\r\n    path: \"/repository\",\r\n    isMenu: true,\r\n    icon: DashboardIcon,\r\n    component: Repository\r\n  },\r\n  {\r\n    title: \"任务分类\",\r\n    path: \"/category\",\r\n    isMenu: true,\r\n    icon: CategoryIcon,\r\n    component: Category\r\n  },\r\n  {\r\n    title: \"部署任务\",\r\n    path: \"/job\",\r\n    isMenu: true,\r\n    icon: ViewListIcon,\r\n    component: Job\r\n  },\r\n  {\r\n    title: \"用户管理\",\r\n    path: \"/users\",\r\n    isMenu: true,\r\n    icon: PeopleIcon,\r\n    component: Users\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport TopBar from \"./topBar.js\";\r\nimport RouteList from \"../../router/route\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Config from \"../../config/index\";\r\nimport \"./admin.scss\";\r\n\r\nconst Layout = props => {\r\n  const [menuState, setMenuState] = React.useState(false);\r\n  const [title, setTitle] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    for (let i = 0; i < RouteList.length; i++) {\r\n      let r = RouteList[i];\r\n      if (r.path === props.location.pathname) {\r\n        setTitle(r.title);\r\n        document.title = r.title + \"-\" + Config.siteName;\r\n        return;\r\n      }\r\n    }\r\n  }, [props.location.pathname]);\r\n\r\n  const openMenu = menu => {\r\n    if (menu.path === props.location.pathname) return;\r\n    setTitle(menu.title);\r\n    setMenuState(false);\r\n    props.history.push(menu.path);\r\n  };\r\n\r\n  return (\r\n    <div id=\"admin\" className=\"admin\">\r\n      <TopBar\r\n        title={title}\r\n        toggle={() => {\r\n          setMenuState(true);\r\n        }}\r\n        clickRoute={openMenu}\r\n      />\r\n      <Drawer\r\n        anchor=\"top\"\r\n        open={menuState}\r\n        onClose={() => {\r\n          setMenuState(false);\r\n        }}\r\n        style={{ flexDirection: \"column\" }}\r\n      >\r\n        <div className=\"menuList\">\r\n          {RouteList.map(menu => {\r\n            if (menu.isMenu)\r\n              return (\r\n                <div className=\"menuBox\" key={menu.path}>\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    color=\"primary\"\r\n                    aria-label=\"menu\"\r\n                    onClick={() => {\r\n                      openMenu(menu);\r\n                    }}\r\n                  >\r\n                    <menu.icon />\r\n                  </IconButton>\r\n                  <p>{menu.title}</p>\r\n                </div>\r\n              );\r\n            return false;\r\n          })}\r\n        </div>\r\n      </Drawer>\r\n      <div className=\"container\">\r\n        <Switch>\r\n          {RouteList.map(route => {\r\n            return (\r\n              <Route\r\n                exact\r\n                key={route.path}\r\n                path={route.path}\r\n                component={route.component}\r\n              />\r\n            );\r\n          })}\r\n          <Redirect exact from=\"/\" to=\"/dashboard\" />\r\n          <Redirect to=\"/404\" />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Config from \"../config/index\";\r\n\r\nexport default function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://github.com/xusenlin/MareWood\">\r\n        {Config.siteName}\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Copyright from \"../../components/copyright\";\r\nimport { setToken, setUserInfo } from \"../../utils/dataStorage\";\r\nimport { login } from \"../../api/user\";\r\nimport { connWebsocket } from \"../../utils/websocket.js\";\r\nconst Logo = require(\"../../assets/img/logo.svg\");\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  let rememberMe = localStorage.getItem(\"RememberMe\") === \"1\";\r\n  let initLoginInfo = JSON.parse(localStorage.getItem(\"LoginInfo\")) || {};\r\n\r\n  const [checked, setChecked] = React.useState(rememberMe);\r\n  const [username, setUsername] = useState(initLoginInfo.username);\r\n  const [password, setPassword] = useState(initLoginInfo.password);\r\n  const checkedChange = event => {\r\n    setChecked(event.target.checked);\r\n\r\n    if (event.target.checked) {\r\n      localStorage.setItem(\"RememberMe\", \"1\");\r\n    } else {\r\n      localStorage.removeItem(\"RememberMe\");\r\n    }\r\n  };\r\n\r\n  const usernameChange = event => {\r\n    setUsername(event.target.value);\r\n  };\r\n  const passwordChange = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n  const submitLogin = () => {\r\n    //登陆成功设置\r\n    login({ username, password })\r\n      .then(r => {\r\n        setToken(r.Token);\r\n        setUserInfo(r);\r\n        connWebsocket(r.Token);\r\n        window.location.href = \"./\";\r\n        localStorage.setItem(\r\n          \"LoginInfo\",\r\n          JSON.stringify({ username, password })\r\n        );\r\n      })\r\n      .catch(() => {});\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <img style={{ width: 60, marginBottom: 20 }} src={Logo} alt=\"\" />\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          登陆\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            value={username}\r\n            onChange={usernameChange}\r\n            id=\"username\"\r\n            label=\"username\"\r\n            name=\"username\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            value={password}\r\n            required\r\n            fullWidth\r\n            onChange={passwordChange}\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={checked}\r\n                onChange={checkedChange}\r\n                value=\"remember\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={submitLogin}\r\n            className={classes.submit}\r\n          >\r\n            登陆\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              {/*<Link href=\"#\" variant=\"body2\">*/}\r\n              {/*    没有账户? 注册一个吧。*/}\r\n              {/*</Link>*/}\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#/register\" variant=\"body2\">\r\n                没有账户? 注册一个吧 ╯︿╰\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Copyright from \"../../components/copyright\";\r\nimport { register } from \"../../api/user\";\r\nimport snackbar from \"../../components/snackbar/index\";\r\nconst Logo = require(\"../../assets/img/logo.svg\");\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const usernameChange = event => {\r\n    setUsername(event.target.value);\r\n  };\r\n  const passwordChange = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n  const submitRegister = () => {\r\n    register({ username, password })\r\n      .then(() => {\r\n        snackbar.success(\"注册成功！\");\r\n      })\r\n      .catch(() => {});\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <img style={{ width: 60, marginBottom: 20 }} src={Logo} alt=\"\" />\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          注册\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                onChange={usernameChange}\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                onChange={passwordChange}\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <span>注册默认获得记者(Reporter)角色 </span>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            onClick={submitRegister}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            注册\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#/login\" variant=\"body2\">\r\n                已经有账户？去登陆 ^_^\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Style = {\r\n  notFound: {\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    fontSize: \"80px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  return <div style={Style.notFound}>4 0 4</div>;\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Admin from \"./views/layout/index.js\";\r\nimport Login from \"./views/login/index.js\";\r\nimport Register from \"./views/register/index.js\";\r\nimport NotFound from \"./views/error/404.js\";\r\nimport { getToken } from \"./utils/dataStorage.js\";\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/404\" component={NotFound} />\r\n          <Route path=\"/\">\r\n            {getToken() ? <Admin /> : <Redirect to=\"/login\" />}\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"nprogress/nprogress.css\";\r\nimport \"./assets/style/style.scss\";\r\nimport { getToken } from \"./utils/dataStorage.js\";\r\nimport { connWebsocket } from \"./utils/websocket.js\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nlet token = getToken();\r\nif (token && !window.ws) {\r\n  connWebsocket(token);\r\n}\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}