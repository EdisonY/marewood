{"version":3,"sources":["assets/img/logo.svg","config/index.js","utils/dataStorage.js","config/url.js","components/snackbar/snackbarContentWrapper.js","components/snackbar/index.js","components/snackbar/snackbar.js","components/snackbar/snackbarInstance.js","config/role.js","views/layout/topBar.js","utils/request.js","views/dashboard/index.js","api/system.js","api/category.js","views/category/edit.js","components/editField.js","views/category/index.js","api/repository.js","views/repository/edit.js","components/helperTooltips.js","views/repository/repositoryStatus.js","views/repository/repositoryJobStatus.js","assets/jss/common.js","views/repository/repositoryTable.js","views/repository/index.js","api/job.js","views/job/jobStatus.js","components/detailsPanel.js","views/job/switchBranchDialog.js","views/job/categoriesTable.js","views/job/edit.js","views/job/index.js","api/user.js","views/users/roleDesc.js","views/users/index.js","router/route.js","views/layout/index.js","components/copyright.js","views/login/index.js","views/register/index.js","views/error/404.js","App.js","serviceWorker.js","index.js","utils/websocket.js"],"names":["module","exports","getToken","Storage","get","Config","getSystemInfo","key","systemInfo","hasOwnProperty","appMode","process","REACT_APP_MODE","host","useApiUrl","window","location","origin","REACT_APP_API_URL","slice","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","SnackbarContentWrapper","snackbarInstance","props","classes","onClose","variant","other","Icon","className","clsx","aria-describedby","id","style","whiteSpace","action","aria-label","color","onClick","CustomizeSnackbar","state","open","content","duration","type","this","setState","setTimeout","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","handleClose","bind","React","Component","snackbarDom","document","getElementById","ReactDOM","render","notice","snackbar","openSnackbar","1","2","3","4","Logo","require","UserInfo","userInfo","getUserInfo","TopBar","useState","anchorEl","setAnchorEl","AppBar","position","Toolbar","edge","toggle","width","height","src","alt","Typography","flexGrow","marginLeft","title","Chip","event","currentTarget","label","Username","Menu","keepMounted","Boolean","MenuItem","Role","Link","href","service","Axios","create","baseURL","headers","Accept","timeout","defaults","retry","retryDelay","interceptors","request","use","config","NProgress","start","Promise","reject","response","res","done","status","data","msg","indexOf","Dashboard","tableData","params","url","method","then","r","kvConfig","set","detailsConfig","catch","Paper","root","Table","table","TableHead","TableRow","TableCell","TableBody","map","row","Title","component","scope","Array","isArray","Val","join","Desc","withStyles","marginTop","overflowX","minWidth","sept","padding","categories","EditCategory","name","desc","field","target","value","createSuccess","Dialog","show","aria-labelledby","DialogTitle","DialogContent","TextField","required","margin","onChange","textFieldChange","fullWidth","multiline","rows","DialogActions","Button","submitCategory","closeButton","right","top","grey","children","disableTypography","MuiDialogContent","MuiDialogActions","EditField","fieldContent","editSuccess","onEntering","onEnteredDialog","dividers","InputLabelProps","shrink","autoFocus","saveFieldContent","defaultProps","CategoryTable","destroyDialogShow","editCategoryShow","editField","destroyId","getTableData","wsUpdateDataFunc","inputRows","ID","closeResetEditFieldDialog","align","hover","cursor","clickEditField","Name","JobQuantity","Tooltip","tooltip","interactive","CreatedAt","destroyDialogOpen","destroyDialogClose","DialogContentText","destroyConfirm","Fab","fab","editDialogShow","editFieldSuccess","editDialogClose","createCategorySuccess","bottom","repositoryFind","Edit","userName","password","dependTools","select","dependentSupport","submitForm","HelperTooltips","help","STATUS","RepositoryStatus","CircularProgress","size","renderCircularProgress","RepositoryJobStatus","maxWidth","maxHeight","overflowY","RepositoryTable","Status","refresh","JobStatus","Url","UserName","Password","TerminalInfo","DependTools","toUpperCase","repositoryGitPull","repositoryPruneBranch","discardRepoChange","deleteRepositoryDepend","resetRepo","editShow","totalPage","pageNum","pageSize","List","TotalPage","PageNum","v","pagination","Pagination","count","page","changePagination","shape","justifyContent","textAlign","headFun","jobsFind","DetailsPanel","SwitchBranchDialog","branchList","repositoryId","branch","jobId","switchSuccess","length","ListItem","button","selectBranch","ListItemText","CategoriesTable","switchBranchDialog","lockPassword","detailsPanel","addressUrl","LockPassword","RepositoryId","p","User","toggleLock","Branch","RunQuantity","Fragment","rel","openJobUrl","WebHookUrl","BuildDir","BuildCommand","openSwitchBranchDialog","runJob","commitRecord","closeEditFieldDialog","closeCommitRecord","closeSwitchBranchDialog","closeLockJobDialog","passwordFieldChange","lockJobDialogConfirm","buildDir","buildCommand","successScript","repositories","buildCommandList","isNormal","onChangeRepository","dev","categoryId","categoryName","Object","keys","Jobs","category","jobs","editDialog","timeoutId","setTabAndJobsByCategoryId","alert","index","clearTimeout","Tabs","indicatorColor","textColor","centered","tabsChange","Tab","createClose","roleEdit","RLOECOLOR","RoleDesc","role","getUserList","isUp","destroyUser","path","isMenu","HomeIcon","DashboardIcon","Repository","CategoryIcon","Category","ViewListIcon","Job","PeopleIcon","Users","withRouter","menuState","setMenuState","setTitle","useEffect","i","RouteList","pathname","openMenu","menu","history","push","clickRoute","Drawer","anchor","flexDirection","route","exact","from","to","Copyright","Date","getFullYear","paper","avatar","secondary","form","submit","SignIn","rememberMe","localStorage","getItem","initLoginInfo","JSON","parse","checked","setChecked","username","setUsername","setPassword","Container","marginBottom","noValidate","FormControlLabel","control","Checkbox","setItem","removeItem","token","user","Token","stringify","Grid","container","item","xs","Box","mt","SignUp","justify","Style","notFound","App","CssBaseline","Register","Login","NotFound","hostname","match","ws","WebSocket","onopen","onmessage","Type","Message","onerror","onclose","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf4a3b1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.afcbb538.svg\";","export default {\r\n  apiPrefix: \"v1\",\r\n  timeout: 10000,\r\n  requestRetry: 4,\r\n  requestRetryDelay: 800,\r\n  siteName: \"MareWood\",\r\n  systemInfoKey: \"MareWood_SYSTEM_INFO\",\r\n  userInfoKey: \"MareWood_USER_INFO\",\r\n  tokenKey: \"MareWood_ACCESS_TOKEN\"\r\n};\r\n","import Storage from \"good-storage\";\r\nimport Config from \"../config/index.js\";\r\n\r\nexport function getUserInfo(key = null) {\r\n  let userInfo = Storage.get(Config.userInfoKey) || {};\r\n  if (key) return userInfo.hasOwnProperty(key) ? userInfo[key] : null;\r\n  return userInfo;\r\n}\r\n\r\nexport function setUserInfo(user) {\r\n  Storage.set(Config.userInfoKey, user);\r\n  return user;\r\n}\r\n\r\nexport function getToken() {\r\n  return Storage.get(Config.tokenKey);\r\n}\r\n\r\nexport function setToken(token) {\r\n  return Storage.set(Config.tokenKey, token);\r\n}\r\n\r\nexport function getSystemInfo(key = null) {\r\n  let systemInfo = Storage.get(Config.systemInfoKey) || {};\r\n  if (key) return systemInfo.hasOwnProperty(key) ? systemInfo[key] : null;\r\n  return systemInfo;\r\n}\r\n\r\nexport function setSystemInfo(info) {\r\n  Storage.set(Config.systemInfoKey, info);\r\n  return info;\r\n}\r\n\r\nexport function removeToken() {\r\n  return Storage.remove(Config.tokenKey);\r\n}\r\n","const nodeEnv = process.env.NODE_ENV;\r\nconst appMode = process.env.REACT_APP_MODE;\r\n\r\nlet host = \"localhost:8088\";\r\nlet useApiUrl = \"http://\" + host;\r\n\r\nif (\"production\" === nodeEnv) {\r\n  switch (appMode) {\r\n    case \"buildDev\":\r\n      useApiUrl = \"http://192.168.48.192:9088\";\r\n      break;\r\n    case \"buildDevTest\":\r\n      useApiUrl = \"http://192.168.48.192:9288\";\r\n      break;\r\n    case \"buildTest\":\r\n      useApiUrl = \"http://192.168.48.192:9288\";\r\n      break;\r\n    case \"buildPre\":\r\n      useApiUrl = \"http://192.168.48.192:9288\";\r\n      break;\r\n    default:\r\n      host = window.location.host;\r\n      useApiUrl = window.location.origin;\r\n      break;\r\n  }\r\n}\r\n\r\nif (typeof process.env.REACT_APP_API_URL === \"string\") {\r\n  useApiUrl = process.env.REACT_APP_API_URL;\r\n}\r\n\r\nif (useApiUrl.slice(0, 4) !== \"http\") {\r\n  useApiUrl = window.location.origin + useApiUrl;\r\n}\r\n\r\nexport { host, useApiUrl };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { amber, green } from \"@material-ui/core/colors/index\";\r\nimport IconButton from \"@material-ui/core/IconButton/index\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent/index\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport { makeStyles } from \"@material-ui/core/styles/index\";\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n};\r\nconst useStyles = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700]\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n\r\nfunction SnackbarContentWrapper(props) {\r\n  const classes = useStyles();\r\n  const { message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant])}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span\r\n          id=\"client-snackbar\"\r\n          className={classes.message}\r\n          style={{ whiteSpace: \"pre-wrap\" }}\r\n        >\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"close\"\r\n          color=\"inherit\"\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nSnackbarContentWrapper.propTypes = {\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\"]).isRequired\r\n};\r\n\r\nexport default SnackbarContentWrapper;\r\n","import snackbar from \"./snackbarInstance\";\r\n\r\nlet snackbarInstance;\r\nexport const notice = (type, content, duration = 4000) => {\r\n  if (!snackbarInstance) snackbarInstance = snackbar;\r\n  return snackbarInstance.openSnackbar(type, content, duration);\r\n};\r\n\r\nexport default {\r\n  info(content, duration = 4000) {\r\n    return notice(\"info\", content, duration);\r\n  },\r\n  success(content, duration = 4000) {\r\n    return notice(\"success\", content, duration);\r\n  },\r\n  warning(content, duration = 4000) {\r\n    return notice(\"warning\", content, duration);\r\n  },\r\n  error(content, duration = 4000) {\r\n    return notice(\"error\", content, duration);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContentWrapper from \"./snackbarContentWrapper\";\r\n\r\nclass CustomizeSnackbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      content: \"\",\r\n      duration: 3000,\r\n      type: \"info\"\r\n    };\r\n  }\r\n  openSnackbar(type, content, duration) {\r\n    if (this.state.open) {\r\n      this.setState({ open: false });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          open: true,\r\n          type: type,\r\n          content: content,\r\n          duration: duration\r\n        });\r\n      }, 200);\r\n    } else {\r\n      this.setState({\r\n        open: true,\r\n        type: type,\r\n        content: content,\r\n        duration: duration\r\n      });\r\n    }\r\n  }\r\n  handleClose() {\r\n    this.setState({ open: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\"\r\n        }}\r\n        open={this.state.open}\r\n        autoHideDuration={this.state.duration}\r\n        onClose={this.handleClose.bind(this)}\r\n      >\r\n        <SnackbarContentWrapper\r\n          onClose={this.handleClose.bind(this)}\r\n          variant={this.state.type}\r\n          message={this.state.content}\r\n        />\r\n      </Snackbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomizeSnackbar;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Snackbar from \"./snackbar\";\r\n\r\nconst snackbarDom = document.getElementById(\"snackbar\");\r\n\r\nexport default ReactDOM.render(<Snackbar />, snackbarDom);\r\n","export default {\r\n  1: \"超级管理员\",\r\n  2: \"管理员\",\r\n  3: \"开发者\",\r\n  4: \"项目记者\"\r\n};\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar, IconButton } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import Person from '@material-ui/icons/Person';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Role from \"../../config/role\";\r\nimport { getUserInfo } from \"../../utils/dataStorage\";\r\n\r\nconst Logo = require(\"../../assets/img/logo.svg\");\r\nlet UserInfo = getUserInfo();\r\n\r\nconst TopBar = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"topBar\">\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={props.toggle}\r\n          >\r\n            {/*<MenuIcon color=\"primary\"/>*/}\r\n            <div style={{ width: 24, height: 24, display: \"flex\" }}>\r\n              <img style={{ width: 24 }} src={Logo} alt=\"\" />\r\n            </div>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" style={{ flexGrow: 1, marginLeft: 20 }}>\r\n            {props.title}\r\n          </Typography>\r\n          <div>\r\n            {/*<IconButton onClick={handleClick} aria-controls=\"user-menu\" aria-haspopup=\"true\" >*/}\r\n            {/*    <Person />*/}\r\n            {/*</IconButton>*/}\r\n            <Chip\r\n              onClick={handleClick}\r\n              color=\"primary\"\r\n              label={UserInfo.Username}\r\n            />\r\n            <Menu\r\n              id=\"user-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem>{Role[UserInfo.Role]}</MenuItem>\r\n              <Link href=\"#/login\">\r\n                <MenuItem>退出</MenuItem>\r\n              </Link>\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import Axios from \"axios\";\r\nimport NProgress from \"nprogress\";\r\nimport { useApiUrl } from \"../config/url.js\";\r\nimport Config from \"../config/index\";\r\nimport { getToken } from \"../utils/dataStorage\";\r\nimport Snackbar from \"../components/snackbar/index\";\r\n\r\nconst service = Axios.create({\r\n  baseURL: useApiUrl + \"/\" + Config.apiPrefix,\r\n  headers: {\r\n    Accept: \"*/*\"\r\n  },\r\n  timeout: Config.timeout\r\n});\r\n\r\nservice.defaults.retry = Config.requestRetry;\r\nservice.defaults.retryDelay = Config.requestRetryDelay;\r\n\r\nservice.interceptors.request.use(\r\n  config => {\r\n    NProgress.start();\r\n    config.headers[\"Authorization\"] = getToken() || \"\";\r\n    return config;\r\n  },\r\n  error => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\nservice.interceptors.response.use(\r\n  res => {\r\n    setTimeout(() => {\r\n      NProgress.done();\r\n    }, 300);\r\n    if (res.status !== 200) {\r\n      Snackbar.error(\"Status Code Is Not 200\");\r\n      return Promise.reject(res);\r\n    } else {\r\n      if (res.data.status !== true) {\r\n        if (res.data.msg.indexOf(\"token is expired\") !== -1) {\r\n          Snackbar.warning(\"登陆已经失效，请重新登陆\");\r\n          window.location.href = \"./#/login\";\r\n          return Promise.reject(res);\r\n        } else {\r\n          Snackbar.warning(res.data.msg);\r\n          return Promise.reject(res);\r\n        }\r\n      }\r\n      return res.data.data;\r\n    }\r\n  },\r\n  error => {\r\n    Snackbar.error(error.message);\r\n    NProgress.done();\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default service;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { systemInfo } from \"../../api/system\";\r\nimport { setSystemInfo } from \"../../utils/dataStorage\";\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  sept: {\r\n    marginTop: 20,\r\n    padding: theme.spacing(3, 2)\r\n  }\r\n});\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tableData: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    systemInfo()\r\n      .then(r => {\r\n        setSystemInfo(r.kvConfig);\r\n        this.setState({ tableData: r.detailsConfig });\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Paper className={classes.root}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>标题</TableCell>\r\n                <TableCell>值</TableCell>\r\n                <TableCell>备注</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.tableData.map(row => (\r\n                <TableRow key={row.Title}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.Title}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {Array.isArray(row.Val) ? row.Val.join(\" | \") : row.Val}\r\n                  </TableCell>\r\n                  <TableCell>{row.Desc}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Dashboard);\r\n","import request from \"../utils/request.js\";\r\n\r\n/**\r\n * 系统信息\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function systemInfo(params) {\r\n  return request({\r\n    url: \"/system/info\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n","import request from \"../utils/request.js\";\r\n\r\n/**\r\n * 获取全部分类\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function categories(params) {\r\n  return request({\r\n    url: \"/categories\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 删除分类\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function destroy(params) {\r\n  return request({\r\n    url: \"/category/delete\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 编辑\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function create(params) {\r\n  return request({\r\n    url: \"/category/create\",\r\n    method: \"post\",\r\n    data: params\r\n  });\r\n}\r\n/**\r\n * 更新分类白名单字段\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function UpdateField(params) {\r\n  return request({\r\n    url: \"/category/update_field\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport { create } from \"../../api/category.js\";\r\n\r\nclass EditCategory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      desc: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  textFieldChange(field, event) {\r\n    this.setState({ [field]: event.target.value });\r\n  }\r\n  submitCategory() {\r\n    create(this.state)\r\n      .then(r => {\r\n        this.props.createSuccess();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.props.show}\r\n          onClose={this.props.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">新增分类</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              required\r\n              value={this.state.name}\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              onChange={this.textFieldChange.bind(this, \"name\")}\r\n              label=\"分类名称\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              value={this.state.desc}\r\n              id=\"desc\"\r\n              multiline\r\n              rows={2}\r\n              onChange={this.textFieldChange.bind(this, \"desc\")}\r\n              label=\"分类描述\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.props.handleClose}>关闭</Button>\r\n            <Button onClick={this.submitCategory.bind(this)} color=\"primary\">\r\n              确认\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditCategory;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2)\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1)\r\n  }\r\n}))(MuiDialogActions);\r\n\r\nclass EditField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fieldContent: \"\"\r\n    };\r\n  }\r\n\r\n  saveFieldContent() {\r\n    this.props.editSuccess(\r\n      this.props.id,\r\n      this.props.field,\r\n      this.state.fieldContent\r\n    );\r\n  }\r\n\r\n  onEnteredDialog() {\r\n    this.setState({ fieldContent: this.props.fieldContent });\r\n  }\r\n\r\n  textFieldChange(event) {\r\n    this.setState({ fieldContent: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          onClose={this.props.onClose}\r\n          onEntering={this.onEnteredDialog.bind(this)}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          open={this.props.open}\r\n        >\r\n          <DialogTitle\r\n            id=\"customized-dialog-title\"\r\n            onClose={this.props.onClose}\r\n          >\r\n            修改{this.props.desc}\r\n          </DialogTitle>\r\n          <DialogContent dividers style={{ width: 600 }}>\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              margin=\"dense\"\r\n              value={this.state.fieldContent}\r\n              id=\"desc\"\r\n              multiline\r\n              rows={this.props.rows}\r\n              onChange={this.textFieldChange.bind(this)}\r\n              label={this.props.desc}\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              autoFocus\r\n              onClick={this.saveFieldContent.bind(this)}\r\n              color=\"primary\"\r\n            >\r\n              保存\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditField.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  row: PropTypes.number,\r\n  field: PropTypes.string.isRequired,\r\n  desc: PropTypes.string.isRequired,\r\n  fieldContent: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  editSuccess: PropTypes.func.isRequired\r\n};\r\n\r\nEditField.defaultProps = {\r\n  row: 1\r\n};\r\nexport default EditField;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableBody,\r\n  TableHead,\r\n  TableCell,\r\n  Paper,\r\n  Fab,\r\n  IconButton,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Tooltip\r\n} from \"@material-ui/core\";\r\nimport EditCategory from \"./edit.js\";\r\nimport { categories, destroy, UpdateField } from \"../../api/category.js\";\r\nimport EditField from \"../../components/editField.js\";\r\nimport Snackbar from \"../../components/snackbar\";\r\nimport Announcement from \"@material-ui/icons/Announcement\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2)\r\n  }\r\n});\r\n\r\nclass CategoryTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tableData: [],\r\n      destroyDialogShow: false,\r\n      editCategoryShow: false,\r\n      editField: {\r\n        id: 0,\r\n        open: false,\r\n        rows: 1,\r\n        desc: \"\",\r\n        field: \"\",\r\n        fieldContent: \"\"\r\n      }\r\n    };\r\n    this.destroyId = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTableData();\r\n    window.wsUpdateDataFunc = () => {\r\n      this.getTableData();\r\n    };\r\n  }\r\n  componentWillUnmount() {\r\n    window.wsUpdateDataFunc = null;\r\n  }\r\n  getTableData() {\r\n    categories()\r\n      .then(r => {\r\n        this.setState({ tableData: r });\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  destroyDialogOpen(id) {\r\n    this.destroyId = id;\r\n    this.setState({ destroyDialogShow: true });\r\n  }\r\n\r\n  destroyDialogClose() {\r\n    this.setState({ destroyDialogShow: false });\r\n  }\r\n\r\n  destroyConfirm() {\r\n    destroy({ id: this.destroyId })\r\n      .then(r => {\r\n        Snackbar.success(\"删除成功！\");\r\n        this.setState({ destroyDialogShow: false });\r\n        this.getTableData();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  editDialogShow() {\r\n    this.setState({ editCategoryShow: true });\r\n  }\r\n  editDialogClose() {\r\n    this.setState({ editCategoryShow: false });\r\n  }\r\n  createCategorySuccess() {\r\n    this.setState({ editCategoryShow: false });\r\n    this.getTableData();\r\n  }\r\n\r\n  clickEditField(row, inputRows, desc, field) {\r\n    this.setState({\r\n      editField: {\r\n        id: row.ID,\r\n        open: true,\r\n        rows: inputRows,\r\n        desc: desc,\r\n        field: field,\r\n        fieldContent: row[field]\r\n      }\r\n    });\r\n  }\r\n  editFieldSuccess(id, field, fieldContent) {\r\n    UpdateField({ id, field, fieldContent })\r\n      .then(() => {\r\n        this.closeResetEditFieldDialog();\r\n        this.getTableData();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  closeResetEditFieldDialog() {\r\n    this.setState({\r\n      editField: {\r\n        id: 0,\r\n        open: false,\r\n        rows: 1,\r\n        desc: \"\",\r\n        field: \"\",\r\n        fieldContent: \"\"\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Paper className={classes.root}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>ID</TableCell>\r\n                <TableCell align=\"left\">分类名字</TableCell>\r\n                <TableCell align=\"left\">任务数量</TableCell>\r\n                <TableCell align=\"left\">备注</TableCell>\r\n                <TableCell align=\"left\">创建时间</TableCell>\r\n                <TableCell align=\"left\">操作</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.tableData.map(row => (\r\n                <TableRow key={row.ID} hover>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.ID}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <EditIcon\r\n                      style={{\r\n                        fontSize: 14,\r\n                        marginRight: 10,\r\n                        cursor: \"pointer\"\r\n                      }}\r\n                      onClick={this.clickEditField.bind(\r\n                        this,\r\n                        row,\r\n                        1,\r\n                        \"标题\",\r\n                        \"Name\"\r\n                      )}\r\n                      color=\"primary\"\r\n                    />\r\n                    {row.Name}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.JobQuantity}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Tooltip\r\n                      title={row.Desc}\r\n                      classes={{ tooltip: classes.tooltip }}\r\n                      interactive\r\n                    >\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={this.clickEditField.bind(\r\n                          this,\r\n                          row,\r\n                          8,\r\n                          \"描述\",\r\n                          \"Desc\"\r\n                        )}\r\n                      >\r\n                        <Announcement />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.CreatedAt}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Tooltip title=\"删除分类\">\r\n                      <IconButton\r\n                        edge=\"start\"\r\n                        color=\"primary\"\r\n                        onClick={this.destroyDialogOpen.bind(this, row.ID)}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n        <Dialog\r\n          open={this.state.destroyDialogShow}\r\n          onClose={this.destroyDialogClose.bind(this)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"确认删除分类?\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              如果你确认要删除这个分类，请确保在这个分类下面已经没有任何任务了。\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={this.destroyDialogClose.bind(this)}\r\n              color=\"primary\"\r\n            >\r\n              关闭\r\n            </Button>\r\n            <Button\r\n              onClick={this.destroyConfirm.bind(this)}\r\n              color=\"secondary\"\r\n              autoFocus\r\n            >\r\n              确认\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        <Fab\r\n          color=\"primary\"\r\n          className={classes.fab}\r\n          aria-label=\"add\"\r\n          onClick={this.editDialogShow.bind(this)}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n        <EditField\r\n          id={this.state.editField.id}\r\n          open={this.state.editField.open}\r\n          desc={this.state.editField.desc}\r\n          rows={this.state.editField.rows}\r\n          field={this.state.editField.field}\r\n          fieldContent={this.state.editField.fieldContent}\r\n          onClose={this.closeResetEditFieldDialog.bind(this)}\r\n          editSuccess={this.editFieldSuccess.bind(this)}\r\n        />\r\n        <EditCategory\r\n          show={this.state.editCategoryShow}\r\n          handleClose={this.editDialogClose.bind(this)}\r\n          createSuccess={this.createCategorySuccess.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CategoryTable);\r\n","import request from \"../utils/request.js\";\r\n\r\n/**\r\n * 更新仓库代码\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function gitPull(params) {\r\n  return request({\r\n    url: \"/repository/git_pull\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 通过仓库 ID 获取分支\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function gitBranch(params) {\r\n  return request({\r\n    url: \"/repository/git_branch\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 通过仓库 ID 裁剪支\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function pruneBranch(params) {\r\n  return request({\r\n    url: \"/repository/prune_branch\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 删除仓库依赖\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function deleteDepend(params) {\r\n  return request({\r\n    url: \"/repository/delete_depend\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 获取全部仓库\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function repositories(params) {\r\n  return request({\r\n    url: \"/repositories\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 获取仓库分页\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function repositoryFind(params) {\r\n  return request({\r\n    url: \"/repository_find\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 删除仓库\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function destroy(params) {\r\n  return request({\r\n    url: \"/repository/delete\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 编辑\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function create(params) {\r\n  return request({\r\n    url: \"/repository/create\",\r\n    method: \"post\",\r\n    data: params\r\n  });\r\n}\r\n\r\n/**\r\n * 获取仓库可执行脚本\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function getScript(params) {\r\n  return request({\r\n    url: \"/repository/get_script\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 更新仓库白名单字段\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function UpdateField(params) {\r\n  return request({\r\n    url: \"/repository/update_field\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 丢弃仓库文件改动\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function discardChange(params) {\r\n  return request({\r\n    url: \"/repository/discard_change\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 仓库提交日志\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function commitRecord(params) {\r\n  return request({\r\n    url: \"/repository/commit_record\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 重置git仓库\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function reset(params) {\r\n  return request({\r\n    url: \"/repository/reset\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { create } from \"../../api/repository\";\r\n\r\nclass Edit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      url: \"\",\r\n      desc: \"\",\r\n      userName: \"\",\r\n      password: \"\",\r\n      dependTools: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  textFieldChange(field, event) {\r\n    this.setState({ [field]: event.target.value });\r\n  }\r\n\r\n  submitForm() {\r\n    create(this.state)\r\n      .then(r => {\r\n        this.props.createSuccess();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.props.show}\r\n          onClose={this.props.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">编辑仓库</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              required\r\n              autoFocus\r\n              value={this.state.name}\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              onChange={this.textFieldChange.bind(this, \"name\")}\r\n              label=\"仓库名称\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              required\r\n              autoFocus\r\n              value={this.state.url}\r\n              margin=\"dense\"\r\n              id=\"url\"\r\n              onChange={this.textFieldChange.bind(this, \"url\")}\r\n              label=\"仓库Url\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              select\r\n              required\r\n              value={this.state.dependTools}\r\n              margin=\"dense\"\r\n              id=\"dependTools\"\r\n              onChange={this.textFieldChange.bind(this, \"dependTools\")}\r\n              label=\"依赖安装工具\"\r\n              type=\"text\"\r\n              fullWidth\r\n            >\r\n              {this.props.dependentSupport.map(r => {\r\n                return (\r\n                  <MenuItem key={r} value={r}>\r\n                    {r}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </TextField>\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              autoFocus\r\n              value={this.state.userName}\r\n              margin=\"dense\"\r\n              id=\"userName\"\r\n              onChange={this.textFieldChange.bind(this, \"userName\")}\r\n              label=\"用户名\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              autoFocus\r\n              value={this.state.password}\r\n              margin=\"dense\"\r\n              id=\"password\"\r\n              onChange={this.textFieldChange.bind(this, \"password\")}\r\n              label=\"密码\"\r\n              type=\"password\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              margin=\"dense\"\r\n              value={this.state.desc}\r\n              id=\"desc\"\r\n              multiline\r\n              rows={6}\r\n              onChange={this.textFieldChange.bind(this, \"desc\")}\r\n              label=\"仓库描述\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.props.handleClose}>关闭</Button>\r\n            <Button onClick={this.submitForm.bind(this)} color=\"primary\">\r\n              确认\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Edit;\r\n","import React from \"react\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\nimport { Tooltip } from \"@material-ui/core\";\r\n\r\nclass HelperTooltips extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <Tooltip title={this.props.help}>\r\n        <HelpOutlineIcon fontSize=\"small\" />\r\n      </Tooltip>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HelperTooltips;\r\n","import React from \"react\";\r\nimport { CircularProgress, IconButton, Tooltip } from \"@material-ui/core\";\r\n\r\nconst STATUS = [\"代码克隆中\", \"代码克隆完成\", \"代码克隆失败\"];\r\n\r\nclass RepositoryStatus extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  renderCircularProgress(status) {\r\n    if (0 === status) return <CircularProgress size={20} />;\r\n    if (1 === status)\r\n      return <CircularProgress variant=\"static\" value={100} size={20} />;\r\n    return (\r\n      <CircularProgress\r\n        variant=\"static\"\r\n        value={100}\r\n        size={20}\r\n        color=\"secondary\"\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Tooltip title={STATUS[this.props.status]}>\r\n          <IconButton color=\"primary\">\r\n            {this.renderCircularProgress(this.props.status)}\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RepositoryStatus;\r\n","import React from \"react\";\r\nimport { CircularProgress, IconButton, Tooltip } from \"@material-ui/core\";\r\n\r\nconst STATUS = [\"给我安排任务吧，现在空闲🤗\", \"资源被占用，非常忙😤\"];\r\n\r\nclass RepositoryJobStatus extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  renderCircularProgress(status) {\r\n    if (1 === status) return <CircularProgress size={20} color=\"secondary\" />;\r\n    return <CircularProgress variant=\"static\" value={100} size={20} />;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Tooltip title={STATUS[this.props.status]}>\r\n          <IconButton color=\"primary\">\r\n            {this.renderCircularProgress(this.props.status)}\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RepositoryJobStatus;\r\n","const tooltip = {\r\n  maxWidth: 600,\r\n  padding:10,\r\n  maxHeight:\"60vh\",\r\n  overflowY:\"auto\",\r\n  whiteSpace: \"pre-wrap\"\r\n};\r\n\r\n\r\nexport {tooltip}\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Tooltip,\r\n  IconButton,\r\n  Table,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n  Dialog\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport RotateLeftIcon from \"@material-ui/icons/RotateLeft\";\r\nimport FormatClearIcon from \"@material-ui/icons/FormatClear\";\r\nimport RestoreFromTrash from \"@material-ui/icons/RestoreFromTrash\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Computer from \"@material-ui/icons/Computer\";\r\nimport Announcement from \"@material-ui/icons/Announcement\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport HelperTooltips from \"../../components/helperTooltips\";\r\nimport RepositoryStatus from \"./repositoryStatus\";\r\nimport RepositoryJobStatus from \"./repositoryJobStatus\";\r\nimport Snackbar from \"../../components/snackbar\";\r\nimport {\r\n  deleteDepend,\r\n  destroy,\r\n  gitPull,\r\n  UpdateField,\r\n  pruneBranch,\r\n  discardChange\r\n} from \"../../api/repository\";\r\nimport EditField from \"../../components/editField\";\r\nimport { tooltip } from \"../../assets/jss/common\";\r\nimport NewReleases from \"@material-ui/icons/NewReleases\";\r\nimport { reset } from \"../../api/repository.js\";\r\n\r\nconst styles = () => ({\r\n  table: {\r\n    minWidth: 400\r\n  },\r\n  tooltip\r\n});\r\n\r\nclass RepositoryTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      destroyDialogShow: false,\r\n      editField: {\r\n        id: 0,\r\n        open: false,\r\n        rows: 1,\r\n        desc: \"\",\r\n        field: \"\",\r\n        fieldContent: \"\"\r\n      }\r\n    };\r\n    this.destroyId = 0; //记录当前要删除的id\r\n  }\r\n\r\n  destroyDialogOpen(id) {\r\n    this.destroyId = id;\r\n    this.setState({ destroyDialogShow: true });\r\n  }\r\n\r\n  destroyDialogClose() {\r\n    this.setState({ destroyDialogShow: false });\r\n  }\r\n\r\n  deleteRepositoryDepend(row) {\r\n    if (row.Status !== 1) {\r\n      Snackbar.warning(\"仓库状态不正常，无法删除依赖\");\r\n      return;\r\n    }\r\n    deleteDepend({ id: row.ID })\r\n      .then(r => {\r\n        Snackbar.success(r);\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  discardRepoChange(row) {\r\n    discardChange({ id: row.ID })\r\n      .then(() => {\r\n        Snackbar.success(\"执行 git checkout . 成功！\");\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  destroyConfirm() {\r\n    destroy({ id: this.destroyId })\r\n      .then(r => {\r\n        this.setState({ destroyDialogShow: false });\r\n        this.props.refresh();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  repositoryGitPull(row) {\r\n    gitPull({ id: row.ID })\r\n      .then(() => {\r\n        Snackbar.success(\"已经更新代码\");\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  repositoryPruneBranch(row) {\r\n    pruneBranch({ id: row.ID })\r\n      .then(() => {\r\n        Snackbar.success(\"分支已经裁剪\");\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  clickEditField(row, inputRows, desc, field) {\r\n    this.setState({\r\n      editField: {\r\n        id: row.ID,\r\n        open: true,\r\n        rows: inputRows,\r\n        desc: desc,\r\n        field: field,\r\n        fieldContent: row[field]\r\n      }\r\n    });\r\n  }\r\n  editFieldSuccess(id, field, fieldContent) {\r\n    UpdateField({ id, field, fieldContent })\r\n      .then(() => {\r\n        this.closeResetEditFieldDialog();\r\n        this.props.refresh();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  closeResetEditFieldDialog() {\r\n    this.setState({\r\n      editField: {\r\n        id: 0,\r\n        open: false,\r\n        rows: 1,\r\n        desc: \"\",\r\n        field: \"\",\r\n        fieldContent: \"\"\r\n      }\r\n    });\r\n  }\r\n  resetRepo(row) {\r\n    if (row.JobStatus !== 0) {\r\n      return Snackbar.warning(\"此仓库有任务正在执行，无法重建仓库\");\r\n    }\r\n    reset({ id: row.ID })\r\n      .then(() => {\r\n        Snackbar.success(\"后台重建仓库中...\");\r\n        this.props.refresh();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>ID</TableCell>\r\n              <TableCell align=\"center\">仓库地址</TableCell>\r\n              <TableCell align=\"center\">仓库名字</TableCell>\r\n              <TableCell align=\"center\">克隆状态</TableCell>\r\n              <TableCell align=\"center\">\r\n                工作状态\r\n                <HelperTooltips help=\"当前工作目录正在执行其他部署任务，资源被占用\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                仓库权限\r\n                <HelperTooltips help=\"私密仓库是需要用户名和密码的，否则克隆失败\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">终端信息</TableCell>\r\n              <TableCell align=\"center\">\r\n                备注\r\n                <HelperTooltips help=\"点击可以修改\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">依赖工具</TableCell>\r\n              <TableCell align=\"center\">\r\n                操作\r\n                <HelperTooltips help=\"删除的依赖会在任务执行时重新安装/丢弃本地修改用于修复安装依赖导致yarn.lock改变无法正常运行任务/重置仓库会删除仓库重新克隆代码\" />\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.props.tableData.map(row => (\r\n              <TableRow key={row.ID} hover>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.ID}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip title={row.Url} interactive>\r\n                    <IconButton color=\"primary\">\r\n                      <LinkIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell align=\"left\">\r\n                  <EditIcon\r\n                    style={{\r\n                      fontSize: 14,\r\n                      marginRight: 10,\r\n                      cursor: \"pointer\"\r\n                    }}\r\n                    onClick={this.clickEditField.bind(\r\n                      this,\r\n                      row,\r\n                      1,\r\n                      \"标题\",\r\n                      \"Name\"\r\n                    )}\r\n                    color=\"primary\"\r\n                  />\r\n                  {row.Name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <RepositoryStatus status={row.Status} />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <RepositoryJobStatus status={row.JobStatus} />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {row.UserName && row.Password ? (\r\n                    <Tooltip\r\n                      title={<div>用户名：{row.UserName}</div>}\r\n                      interactive\r\n                    >\r\n                      <IconButton color=\"primary\">\r\n                        <LockIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  ) : (\r\n                    <Tooltip title=\"仓库非私密\" interactive>\r\n                      <IconButton color=\"primary\">\r\n                        <LockOpenIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip\r\n                    title={row.TerminalInfo}\r\n                    classes={{ tooltip: classes.tooltip }}\r\n                    interactive\r\n                  >\r\n                    <IconButton color=\"primary\">\r\n                      <Computer />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip\r\n                    title={row.Desc}\r\n                    classes={{ tooltip: classes.tooltip }}\r\n                    interactive\r\n                  >\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.clickEditField.bind(\r\n                        this,\r\n                        row,\r\n                        8,\r\n                        \"描述\",\r\n                        \"Desc\"\r\n                      )}\r\n                    >\r\n                      <Announcement />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <span className=\"tag\">{row.DependTools.toUpperCase()}</span>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip title=\"更新仓库\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.repositoryGitPull.bind(this, row)}\r\n                    >\r\n                      <SaveAlt />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"裁剪分支\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.repositoryPruneBranch.bind(this, row)}\r\n                    >\r\n                      <FormatClearIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"丢弃本地仓库变动\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.discardRepoChange.bind(this, row)}\r\n                    >\r\n                      <RotateLeftIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"删除依赖\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.deleteRepositoryDepend.bind(this, row)}\r\n                    >\r\n                      <RestoreFromTrash />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"重建仓库\">\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.resetRepo.bind(this, row)}\r\n                    >\r\n                      <NewReleases />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"删除仓库\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.destroyDialogOpen.bind(this, row.ID)}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <EditField\r\n          id={this.state.editField.id}\r\n          open={this.state.editField.open}\r\n          desc={this.state.editField.desc}\r\n          rows={this.state.editField.rows}\r\n          field={this.state.editField.field}\r\n          fieldContent={this.state.editField.fieldContent}\r\n          onClose={this.closeResetEditFieldDialog.bind(this)}\r\n          editSuccess={this.editFieldSuccess.bind(this)}\r\n        />\r\n        <Dialog\r\n          open={this.state.destroyDialogShow}\r\n          onClose={this.destroyDialogClose.bind(this)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"确认删除仓库?\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              你确认要删除这个仓库？没有任务使用此仓库才能删除。\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={this.destroyDialogClose.bind(this)}\r\n              color=\"primary\"\r\n            >\r\n              关闭\r\n            </Button>\r\n            <Button\r\n              onClick={this.destroyConfirm.bind(this)}\r\n              color=\"secondary\"\r\n              autoFocus\r\n            >\r\n              确认\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(RepositoryTable);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { Fab, Paper } from \"@material-ui/core\";\r\nimport Edit from \"./edit\";\r\nimport Table from \"./repositoryTable\";\r\nimport { getSystemInfo } from \"../../utils/dataStorage\";\r\nimport { repositoryFind } from \"../../api/repository\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n    overflowX: \"auto\"\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2)\r\n  },\r\n  pagination: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(3)\r\n  },\r\n  headFun: {\r\n    textAlign: \"right\"\r\n  }\r\n});\r\n\r\nclass RepositoryTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tableData: [],\r\n      editShow: false,\r\n      dependentSupport: getSystemInfo(\"DependTools\") || [],\r\n      totalPage: 1,\r\n      pageNum: 1\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getTableData();\r\n    window.wsUpdateDataFunc = () => {\r\n      this.getTableData(this.state.pageNum);\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.wsUpdateDataFunc = null;\r\n    // if (this.timeout) clearTimeout(this.timeout);\r\n  }\r\n  editDialogShow() {\r\n    this.setState({ editShow: true });\r\n  }\r\n\r\n  editDialogClose() {\r\n    this.setState({ editShow: false });\r\n  }\r\n\r\n  createSuccess() {\r\n    this.setState({ editShow: false });\r\n    this.getTableData();\r\n  }\r\n  getTableData(pageNum = 1, pageSize = 8) {\r\n    // if (this.timeout) clearTimeout(this.timeout);\r\n    repositoryFind({ pageNum, pageSize })\r\n      .then(r => {\r\n        this.setState({\r\n          tableData: r.List,\r\n          totalPage: r.TotalPage,\r\n          pageNum: r.PageNum\r\n        });\r\n\r\n        // for (let i = 0; i < r.length; i++) {\r\n        //   if (\r\n        //     r[i].Status === 0 ||\r\n        //     (r[i].JobStatus === 1 && r[i].Status === 1)\r\n        //   ) {\r\n        //     //仓库正在克隆当中  或者 （一个正常的仓库很繁忙）的情况就会刷新\r\n        //     this.timeout = setTimeout(() => {\r\n        //       this.getTableData();\r\n        //     }, 5000);\r\n        //     return;\r\n        //   }\r\n        // }\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  changePagination(v, pageNum) {\r\n    if (pageNum === this.state.pageNum) {\r\n      return;\r\n    }\r\n    this.getTableData(pageNum);\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Paper className={classes.root}>\r\n          <Table\r\n            tableData={this.state.tableData}\r\n            refresh={this.getTableData.bind(this)}\r\n          />\r\n          <div className={classes.pagination}>\r\n            <Pagination\r\n              count={this.state.totalPage}\r\n              page={this.state.pageNum}\r\n              onChange={this.changePagination.bind(this)}\r\n              color=\"primary\"\r\n              shape=\"rounded\"\r\n            />\r\n          </div>\r\n        </Paper>\r\n        <Fab\r\n          color=\"primary\"\r\n          className={classes.fab}\r\n          aria-label=\"add\"\r\n          onClick={this.editDialogShow.bind(this)}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n        <Edit\r\n          dependentSupport={this.state.dependentSupport}\r\n          show={this.state.editShow}\r\n          handleClose={this.editDialogClose.bind(this)}\r\n          createSuccess={this.createSuccess.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(RepositoryTable);\r\n","import request from \"../utils/request.js\";\r\n\r\n/**\r\n * 获取全部任务\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function jobs(params) {\r\n  return request({\r\n    url: \"/jobs\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 通过分类ID获取任务\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function jobsFind(params) {\r\n  return request({\r\n    url: \"/jobs_find\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 任务创建\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function create(params) {\r\n  return request({\r\n    url: \"/job/create\",\r\n    method: \"post\",\r\n    data: params\r\n  });\r\n}\r\n\r\n/**\r\n * 修改任务分支\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function updateBranch(params) {\r\n  return request({\r\n    url: \"/job/update_branch\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 删除\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function destroy(params) {\r\n  return request({\r\n    url: \"/job/delete\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 运行任务\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function RunJob(params) {\r\n  return request({\r\n    url: \"/job/run\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 更新任务白名单字段\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function UpdateField(params) {\r\n  return request({\r\n    url: \"/job/update_field\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 更新任务描述\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function jobLock(params) {\r\n  return request({\r\n    url: \"/job/lock\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { CircularProgress, IconButton, Tooltip } from \"@material-ui/core\";\r\n\r\nconst STATUS = [\"任务空闲\", \"打包成功\", \"打包失败\", \"正在打包\"];\r\n\r\nclass RepositoryStatus extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  renderCircularProgress(status) {\r\n    if (0 === status)\r\n      return (\r\n        <CircularProgress\r\n          variant=\"static\"\r\n          style={{ color: \"#9E9E9E\" }}\r\n          value={100}\r\n          size={20}\r\n        />\r\n      );\r\n    if (1 === status)\r\n      return <CircularProgress variant=\"static\" value={100} size={20} />;\r\n    if (2 === status)\r\n      return (\r\n        <CircularProgress\r\n          variant=\"static\"\r\n          value={100}\r\n          size={20}\r\n          color=\"secondary\"\r\n        />\r\n      );\r\n    return <CircularProgress size={20} />;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Tooltip title={STATUS[this.props.status]}>\r\n          <IconButton color=\"primary\">\r\n            {this.renderCircularProgress(this.props.status)}\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RepositoryStatus;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2)\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1)\r\n  }\r\n}))(MuiDialogActions);\r\n\r\nclass DetailsPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          onClose={this.props.onClose}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          open={this.props.open}\r\n        >\r\n          <DialogTitle id=\"customized-dialog-title\">\r\n            {this.props.title}\r\n          </DialogTitle>\r\n          <DialogContent dividers style={{ whiteSpace: \"pre-wrap\" }}>\r\n            {this.props.content}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button autoFocus onClick={this.props.onClose} color=\"primary\">\r\n              确认\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDetailsPanel.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n  onClose: PropTypes.func\r\n};\r\nDetailsPanel.defaultProps = {\r\n  title: \"查看详情\"\r\n};\r\n\r\nexport default DetailsPanel;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { gitBranch } from \"../../api/repository\";\r\nimport { updateBranch } from \"../../api/job\";\r\nimport { DialogContentText } from \"@material-ui/core\";\r\n\r\nclass SwitchBranchDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      branchList: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n  onEnteredDialog() {\r\n    this.setState({ branchList: [] });\r\n    gitBranch({ id: this.props.repositoryId })\r\n      .then(r => {\r\n        this.setState({ branchList: r });\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  selectBranch(branch) {\r\n    updateBranch({ branch: branch, id: this.props.jobId })\r\n      .then(() => {\r\n        this.props.switchSuccess();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog\r\n        open={this.props.open}\r\n        onEntering={this.onEnteredDialog.bind(this)}\r\n        onClose={this.props.onClose}\r\n        aria-labelledby=\"dialog-title\"\r\n      >\r\n        <DialogTitle id=\"dialog-title\">切换当前任务的分支</DialogTitle>\r\n        <DialogContentText>\r\n          {this.state.branchList.length === 0 ? \"分支无法使用\" : \"\"}\r\n        </DialogContentText>\r\n        <List>\r\n          {this.state.branchList.map(branch => (\r\n            <ListItem\r\n              button\r\n              onClick={this.selectBranch.bind(this, branch)}\r\n              key={branch}\r\n            >\r\n              <ListItemText primary={branch} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nSwitchBranchDialog.propTypes = {\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  jobId: PropTypes.number,\r\n  repositoryId: PropTypes.number,\r\n  switchSuccess: PropTypes.func\r\n};\r\n\r\nexport default SwitchBranchDialog;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\r\nimport LinkOffIcon from \"@material-ui/icons/LinkOff\";\r\nimport UsbIcon from \"@material-ui/icons/Usb\";\r\nimport Computer from \"@material-ui/icons/Computer\";\r\nimport Announcement from \"@material-ui/icons/Announcement\";\r\nimport PlayCircleFilled from \"@material-ui/icons/PlayCircleFilled\";\r\nimport DeviceHub from \"@material-ui/icons/DeviceHub\";\r\nimport {\r\n  TextField,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  Table,\r\n  Tooltip,\r\n  IconButton,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n  Dialog\r\n} from \"@material-ui/core\";\r\nimport JobStatus from \"./jobStatus\";\r\nimport HelperTooltips from \"../../components/helperTooltips\";\r\nimport EditField from \"../../components/editField.js\";\r\nimport DetailsPanel from \"../../components/detailsPanel.js\";\r\nimport SwitchBranchDialog from \"./switchBranchDialog\";\r\nimport Snackbar from \"../../components/snackbar/index\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { destroy, RunJob, UpdateField, jobLock } from \"../../api/job\";\r\nimport { commitRecord } from \"../../api/repository\";\r\nimport { tooltip } from \"../../assets/jss/common\";\r\nimport { getSystemInfo } from \"../../utils/dataStorage\";\r\n\r\nconst styles = theme => ({\r\n  table: {\r\n    marginTop: theme.spacing(3),\r\n    minWidth: 650\r\n  },\r\n  tooltip\r\n});\r\n\r\nclass CategoriesTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      destroyDialogShow: false,\r\n      switchBranchDialog: {\r\n        id: 0,\r\n        show: false,\r\n        repositoryId: 0\r\n      },\r\n      lockPassword: {\r\n        id: 0,\r\n        password: \"\",\r\n        show: false\r\n      },\r\n      editField: {\r\n        id: 0,\r\n        open: false,\r\n        desc: \"\",\r\n        rows: 1,\r\n        field: \"\",\r\n        fieldContent: \"\"\r\n      },\r\n      detailsPanel: {\r\n        title: \"\",\r\n        open: false,\r\n        content: \"\"\r\n      }\r\n    };\r\n    this.destroyId = 0;\r\n    this.addressUrl = getSystemInfo(\"OtherAddressUrl\") || [];\r\n  }\r\n\r\n  toggleLock(row) {\r\n    this.setState({\r\n      lockPassword: {\r\n        id: row.ID,\r\n        password: \"\",\r\n        show: true\r\n      }\r\n    });\r\n  }\r\n\r\n  runJob(row) {\r\n    if (row.Status === 3) {\r\n      Snackbar.warning(\"任务正在打包，请稍等\");\r\n      return;\r\n    }\r\n    if (row.LockPassword !== \"\") {\r\n      Snackbar.warning(\"任务锁定，请先解锁\");\r\n      return;\r\n    }\r\n\r\n    RunJob({ id: row.ID })\r\n      .then(r => {\r\n        Snackbar.success(\"运行成功，正在打包\");\r\n        this.props.refresh();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  openSwitchBranchDialog(row) {\r\n    if (row.LockPassword !== \"\") {\r\n      Snackbar.warning(\"任务锁定，请先解锁\");\r\n      return;\r\n    }\r\n    if (row.Status === 3) {\r\n      Snackbar.warning(\"任务正在打包，请稍等\");\r\n      return;\r\n    }\r\n    this.setState({\r\n      switchBranchDialog: {\r\n        id: row.ID,\r\n        show: true,\r\n        repositoryId: row.RepositoryId\r\n      }\r\n    });\r\n  }\r\n\r\n  switchSuccess() {\r\n    this.setState({\r\n      switchBranchDialog: {\r\n        id: 0,\r\n        show: false,\r\n        repositoryId: 0\r\n      }\r\n    });\r\n    this.props.refresh();\r\n  }\r\n\r\n  closeSwitchBranchDialog() {\r\n    this.setState({\r\n      switchBranchDialog: {\r\n        id: 0,\r\n        show: false,\r\n        repositoryId: 0\r\n      }\r\n    });\r\n  }\r\n\r\n  destroyDialogOpen(row) {\r\n    if (row.LockPassword !== \"\") {\r\n      Snackbar.warning(\"任务锁定，请先解锁\");\r\n      return;\r\n    }\r\n    this.destroyId = row.ID;\r\n    this.setState({ destroyDialogShow: true });\r\n  }\r\n\r\n  destroyDialogClose() {\r\n    this.setState({ destroyDialogShow: false });\r\n  }\r\n\r\n  destroyConfirm() {\r\n    destroy({ id: this.destroyId })\r\n      .then(r => {\r\n        Snackbar.success(\"删除成功！\");\r\n        this.setState({ destroyDialogShow: false });\r\n        this.props.refresh();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  openJobUrl(row, url) {\r\n    if (row.Status !== 1) {\r\n      Snackbar.error(\"任务没有打包成功！\");\r\n      return;\r\n    }\r\n    window.open(url);\r\n  }\r\n\r\n  closeLockJobDialog() {\r\n    this.setState({\r\n      lockPassword: {\r\n        id: 0,\r\n        password: \"\",\r\n        show: false\r\n      }\r\n    });\r\n  }\r\n\r\n  lockJobDialogConfirm() {\r\n    let p = {\r\n      id: this.state.lockPassword.id,\r\n      password: this.state.lockPassword.password\r\n    };\r\n    jobLock(p)\r\n      .then(r => {\r\n        Snackbar.success(\"操作成功！\");\r\n        this.props.refresh();\r\n        this.setState({\r\n          lockPassword: {\r\n            id: 0,\r\n            password: \"\",\r\n            show: false\r\n          }\r\n        });\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  passwordFieldChange(event) {\r\n    let p = this.state.lockPassword;\r\n    p.password = event.target.value;\r\n    this.setState({ lockPassword: p });\r\n  }\r\n\r\n  closeCommitRecord() {\r\n    this.setState({\r\n      detailsPanel: { ...this.state.detailsPanel, open: false }\r\n    });\r\n  }\r\n  commitRecord(row) {\r\n    commitRecord({ id: row.RepositoryId })\r\n      .then(r => {\r\n        this.setState({\r\n          detailsPanel: {\r\n            open: true,\r\n            title: \"最近4次的代码提交详情\",\r\n            content: r\r\n          }\r\n        });\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  clickEditField(row, inputRows, desc, field) {\r\n    if (row.LockPassword !== \"\") {\r\n      Snackbar.warning(\"任务锁定，请先解锁\");\r\n      return;\r\n    }\r\n    this.setState({\r\n      editField: {\r\n        id: row.ID,\r\n        open: true,\r\n        rows: inputRows,\r\n        desc: desc,\r\n        field: field,\r\n        fieldContent: row[field]\r\n      }\r\n    });\r\n  }\r\n\r\n  editFieldSuccess(id, field, fieldContent) {\r\n    UpdateField({ id, field, fieldContent })\r\n      .then(() => {\r\n        this.setState({\r\n          editField: {\r\n            id: 0,\r\n            open: false,\r\n            rows: 1,\r\n            desc: \"\",\r\n            field: \"\",\r\n            fieldContent: \"\"\r\n          }\r\n        });\r\n        this.props.refresh();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  closeEditFieldDialog() {\r\n    this.setState({\r\n      editField: { ...this.state.editField, open: false }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">ID</TableCell>\r\n              <TableCell align=\"center\">\r\n                加锁\r\n                <HelperTooltips help=\"临时锁定任务，防止别人切换分支打包\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">任务名称</TableCell>\r\n              <TableCell align=\"center\">任务状态</TableCell>\r\n              <TableCell align=\"center\">\r\n                当前分支\r\n                <HelperTooltips help=\"当前任务分支，如有需要请先切换分支\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">运行次数</TableCell>\r\n              <TableCell align=\"center\">\r\n                访问地址\r\n                <HelperTooltips help=\"打包成功时可访问的页面🤓\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                WebHook\r\n                <HelperTooltips help=\"触发任务的钩子，如果此任务仓库资源被占用则无法打包\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">终端信息</TableCell>\r\n              {/*<TableCell align=\"center\">*/}\r\n              {/*  附加脚本*/}\r\n              {/*  <HelperTooltips help=\"打包成功运行的脚本，多个用 ; 隔开\"/>*/}\r\n              {/*</TableCell>*/}\r\n              <TableCell align=\"center\">\r\n                任务描述\r\n                <HelperTooltips help=\"针对任务的一些描述，比如账号、Swagger UI 地址等,点击即可修改。\" />\r\n              </TableCell>\r\n              <TableCell align=\"center\">打包目录</TableCell>\r\n              <TableCell align=\"center\">打包命令</TableCell>\r\n              <TableCell align=\"center\">操作</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.props.tableData.map(row => (\r\n              <TableRow key={row.ID} hover>\r\n                <TableCell align=\"center\">{row.ID}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  {row.LockPassword ? (\r\n                    <Tooltip title={\"操作人：\" + row.User} interactive>\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={this.toggleLock.bind(this, row)}\r\n                      >\r\n                        <LockIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  ) : (\r\n                    <Tooltip title=\"任务未加锁\" interactive>\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={this.toggleLock.bind(this, row)}\r\n                      >\r\n                        <LockOpenIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"left\" style={{ fontSize: \"12px\" }}>\r\n                  <EditIcon\r\n                    style={{ fontSize: 14, marginRight: 10, cursor: \"pointer\" }}\r\n                    onClick={this.clickEditField.bind(\r\n                      this,\r\n                      row,\r\n                      1,\r\n                      \"标题\",\r\n                      \"Name\"\r\n                    )}\r\n                    color=\"primary\"\r\n                  />\r\n                  {row.Name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <JobStatus status={row.Status} />\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.Branch}</TableCell>\r\n                <TableCell align=\"center\">{row.RunQuantity}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip\r\n                    style={{ padding: 10 }}\r\n                    title={\r\n                      row.Status !== 1 ? (\r\n                        \"没有打包成功之前是不能访问的\"\r\n                      ) : (\r\n                        <React.Fragment>\r\n                          <a\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            style={{ color: \"#fff\" }}\r\n                            href={window.location.origin + row.Url}\r\n                          >\r\n                            {window.location.origin + row.Url}\r\n                          </a>\r\n                          {this.addressUrl.map(url => {\r\n                            return (\r\n                              <React.Fragment key={url}>\r\n                                <br />\r\n                                <a\r\n                                  target=\"_blank\"\r\n                                  rel=\"noopener noreferrer\"\r\n                                  style={{ color: \"#fff\" }}\r\n                                  href={url + \"/\" + row.ID}\r\n                                >\r\n                                  {url + \"/\" + row.ID}\r\n                                </a>\r\n                              </React.Fragment>\r\n                            );\r\n                          })}\r\n                        </React.Fragment>\r\n                      )\r\n                    }\r\n                    interactive\r\n                  >\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.openJobUrl.bind(\r\n                        this,\r\n                        row,\r\n                        window.location.origin + row.Url\r\n                      )}\r\n                    >\r\n                      {row.Status !== 1 ? <LinkOffIcon /> : <LinkIcon />}\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip\r\n                    title={window.location.origin + row.WebHookUrl}\r\n                    interactive\r\n                  >\r\n                    <IconButton color=\"primary\">\r\n                      <UsbIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip\r\n                    title={row.TerminalInfo}\r\n                    classes={{ tooltip: classes.tooltip }}\r\n                    interactive\r\n                  >\r\n                    <IconButton color=\"primary\">\r\n                      <Computer />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip\r\n                    title={row.Desc}\r\n                    classes={{ tooltip: classes.tooltip }}\r\n                    interactive\r\n                  >\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.clickEditField.bind(\r\n                        this,\r\n                        row,\r\n                        8,\r\n                        \"描述\",\r\n                        \"Desc\"\r\n                      )}\r\n                    >\r\n                      <Announcement />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <span className=\"tag\">{row.BuildDir}</span>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <span className=\"tag\">{row.BuildCommand}</span>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Tooltip title=\"切换分支\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.openSwitchBranchDialog.bind(this, row)}\r\n                    >\r\n                      <DeviceHub />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"运行任务\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.runJob.bind(this, row)}\r\n                    >\r\n                      <PlayCircleFilled />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"查看提交记录\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.commitRecord.bind(this, row)}\r\n                    >\r\n                      <ReceiptIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"删除任务\" interactive>\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      onClick={this.destroyDialogOpen.bind(this, row)}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <EditField\r\n          id={this.state.editField.id}\r\n          open={this.state.editField.open}\r\n          desc={this.state.editField.desc}\r\n          rows={this.state.editField.rows}\r\n          field={this.state.editField.field}\r\n          fieldContent={this.state.editField.fieldContent}\r\n          onClose={this.closeEditFieldDialog.bind(this)}\r\n          editSuccess={this.editFieldSuccess.bind(this)}\r\n        />\r\n        <DetailsPanel\r\n          open={this.state.detailsPanel.open}\r\n          content={this.state.detailsPanel.content}\r\n          onClose={this.closeCommitRecord.bind(this)}\r\n          title={this.state.detailsPanel.title}\r\n        />\r\n        <SwitchBranchDialog\r\n          jobId={this.state.switchBranchDialog.id}\r\n          repositoryId={this.state.switchBranchDialog.repositoryId}\r\n          open={this.state.switchBranchDialog.show}\r\n          onClose={this.closeSwitchBranchDialog.bind(this)}\r\n          switchSuccess={this.switchSuccess.bind(this)}\r\n        />\r\n        <Dialog\r\n          open={this.state.destroyDialogShow}\r\n          onClose={this.destroyDialogClose.bind(this)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"确认删除任务?\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              你确认要删除这个任务？\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={this.destroyDialogClose.bind(this)}\r\n              color=\"primary\"\r\n            >\r\n              关闭\r\n            </Button>\r\n            <Button\r\n              onClick={this.destroyConfirm.bind(this)}\r\n              color=\"secondary\"\r\n              autoFocus\r\n            >\r\n              确认\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {/*任务加锁密码*/}\r\n        <Dialog\r\n          open={this.state.lockPassword.show}\r\n          onClose={this.closeLockJobDialog.bind(this)}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">解锁或加锁</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>需要你输入密码来解锁或加锁。</DialogContentText>\r\n            <TextField\r\n              onChange={this.passwordFieldChange.bind(this)}\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"password\"\r\n              label=\"Lock Password\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={this.closeLockJobDialog.bind(this)}\r\n              color=\"primary\"\r\n            >\r\n              关闭\r\n            </Button>\r\n            <Button\r\n              onClick={this.lockJobDialogConfirm.bind(this)}\r\n              color=\"primary\"\r\n            >\r\n              确认\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CategoriesTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { create } from \"../../api/job\";\r\nimport { repositories, getScript } from \"../../api/repository\";\r\n\r\nclass Edit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      desc: \"\",\r\n      repositoryId: \"\",\r\n      buildDir: \"dist\",\r\n      buildCommand: \"\",\r\n      successScript: \"\",\r\n      repositories: [],\r\n      buildCommandList: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    repositories({ isNormal: 1 })\r\n      .then(r => {\r\n        this.setState({ repositories: r });\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  textFieldChange(field, event) {\r\n    this.setState({ [field]: event.target.value });\r\n    if (field === \"repositoryId\") {\r\n      this.onChangeRepository(event);\r\n    }\r\n  }\r\n\r\n  onChangeRepository(event) {\r\n    getScript({ id: event.target.value })\r\n      .then(r => {\r\n        delete r.dev;\r\n        this.setState({ buildCommandList: r });\r\n      })\r\n      .catch(() => {});\r\n    this.setState({ repositoryId: event.target.value });\r\n  }\r\n\r\n  submitForm() {\r\n    create({ ...this.state, categoryId: this.props.categoryId })\r\n      .then(r => {\r\n        this.props.createSuccess();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.props.show}\r\n          onClose={this.props.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            在《{this.props.categoryName}》分类下添加任务\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              required\r\n              autoFocus\r\n              value={this.state.name}\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              onChange={this.textFieldChange.bind(this, \"name\")}\r\n              label=\"任务名称\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              select\r\n              required\r\n              value={this.state.repositoryId}\r\n              margin=\"dense\"\r\n              id=\"repositoryId\"\r\n              onChange={this.textFieldChange.bind(this, \"repositoryId\")}\r\n              label=\"选择仓库\"\r\n              type=\"text\"\r\n              fullWidth\r\n            >\r\n              {this.state.repositories.map(r => {\r\n                return (\r\n                  <MenuItem key={r.ID} value={r.ID}>\r\n                    {r.Name}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </TextField>\r\n            <TextField\r\n              required\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              autoFocus\r\n              value={this.state.buildDir}\r\n              margin=\"dense\"\r\n              id=\"buildDir\"\r\n              onChange={this.textFieldChange.bind(this, \"buildDir\")}\r\n              label=\"打包目录\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              select\r\n              required\r\n              value={this.state.buildCommand}\r\n              margin=\"dense\"\r\n              id=\"buildCommand\"\r\n              onChange={this.textFieldChange.bind(this, \"buildCommand\")}\r\n              label=\"选择打包的命令\"\r\n              type=\"text\"\r\n              fullWidth\r\n            >\r\n              {Object.keys(this.state.buildCommandList).map(key => {\r\n                return (\r\n                  <MenuItem key={key} value={key}>\r\n                    {key} => {this.state.buildCommandList[key]}{\" \"}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </TextField>\r\n            {/*<TextField*/}\r\n            {/*  InputLabelProps={{*/}\r\n            {/*    shrink: true,*/}\r\n            {/*  }}*/}\r\n            {/*  autoFocus value={this.state.password} margin=\"dense\" id=\"password\"*/}\r\n            {/*  onChange={this.textFieldChange.bind(this, 'password')} label=\"任务加密\" type=\"password\" fullWidth*/}\r\n            {/*/>*/}\r\n            {/*<TextField*/}\r\n            {/*  InputLabelProps={{*/}\r\n            {/*    shrink: true,*/}\r\n            {/*  }}*/}\r\n            {/*  margin=\"dense\" value={this.state.successScript} id=\"desc\" multiline rows={6}*/}\r\n            {/*  onChange={this.textFieldChange.bind(this, 'successScript')} label=\"打包成功执行的命令（用户权限模块没有完成，现在不会运行）\"*/}\r\n            {/*  type=\"text\" fullWidth*/}\r\n            {/*/>*/}\r\n            <TextField\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              margin=\"dense\"\r\n              value={this.state.desc}\r\n              id=\"desc\"\r\n              multiline\r\n              rows={6}\r\n              onChange={this.textFieldChange.bind(this, \"desc\")}\r\n              label=\"任务描述\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.props.handleClose}>关闭</Button>\r\n            <Button onClick={this.submitForm.bind(this)} color=\"primary\">\r\n              确认\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEdit.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  categoryId: PropTypes.number.isRequired,\r\n  categoryName: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Edit;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Tab, Tabs, Paper, Fab } from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { jobsFind } from \"../../api/job\";\r\nimport { categories } from \"../../api/category\";\r\nimport CategoriesTable from \"./categoriesTable\";\r\nimport Edit from \"./edit\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2)\r\n  },\r\n  pagination: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(3)\r\n  }\r\n});\r\n\r\nclass Jobs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      category: 0,\r\n      categories: [],\r\n      jobs: [],\r\n      editDialog: {\r\n        show: false,\r\n        categoryId: 0,\r\n        categoryName: \"\"\r\n      },\r\n      totalPage: 1,\r\n      pageNum: 1\r\n    };\r\n    this.timeoutId = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    categories()\r\n      .then(r => {\r\n        if (r.length === 0) {\r\n          alert(\"请先新建分类\");\r\n          return;\r\n        }\r\n        this.setState({ categories: r }, () => {\r\n          this.setTabAndJobsByCategoryId(0);\r\n        });\r\n        window.wsUpdateDataFunc = () => {\r\n          this.setTabAndJobsByCategoryId(\r\n            this.state.category,\r\n            this.state.pageNum\r\n          );\r\n        };\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  componentWillUnmount() {\r\n    window.wsUpdateDataFunc = null;\r\n  }\r\n  changePagination(v, pageNum) {\r\n    if (pageNum === this.state.pageNum) {\r\n      return;\r\n    }\r\n    this.setTabAndJobsByCategoryId(this.state.category, pageNum);\r\n  }\r\n\r\n  tabsChange(event, index) {\r\n    this.setTabAndJobsByCategoryId(index);\r\n  }\r\n\r\n  setTabAndJobsByCategoryId(index = 0, pageNum = 1, pageSize = 8) {\r\n    let categoryId = this.state.categories[index].ID;\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n    }\r\n    jobsFind({ categoryId, pageNum, pageSize })\r\n      .then(r => {\r\n        this.setState({\r\n          category: index,\r\n          jobs: r.List,\r\n          totalPage: r.TotalPage,\r\n          pageNum: r.PageNum\r\n        });\r\n        // for (let i = 0; i < r.List.length; i++) {\r\n        //   if (r.List[i].Status === 3) {\r\n        //     this.timeoutId = setTimeout(() => {\r\n        //       this.setTabAndJobsByCategoryId(index, pageNum, pageSize);\r\n        //     }, 2000);\r\n        //     return;\r\n        //   }\r\n        // }\r\n      })\r\n      .catch(() => {});\r\n  }\r\n\r\n  editDialogShow() {\r\n    let category = this.state.categories[this.state.category];\r\n    this.setState({\r\n      editDialog: {\r\n        show: true,\r\n        categoryId: category.ID,\r\n        categoryName: category.Name\r\n      }\r\n    });\r\n  }\r\n\r\n  createSuccess() {\r\n    this.setTabAndJobsByCategoryId(this.state.category);\r\n    this.setState({\r\n      editDialog: {\r\n        show: false,\r\n        categoryId: 0,\r\n        categoryName: \"\"\r\n      }\r\n    });\r\n  }\r\n\r\n  createClose() {\r\n    this.setState({\r\n      editDialog: {\r\n        show: false,\r\n        categoryId: 0,\r\n        categoryName: \"\"\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Paper className={classes.root}>\r\n          <Tabs\r\n            value={this.state.category}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n            onChange={this.tabsChange.bind(this)}\r\n          >\r\n            {this.state.categories.map(category => (\r\n              <Tab key={category.ID} label={category.Name} />\r\n            ))}\r\n          </Tabs>\r\n          <CategoriesTable\r\n            tableData={this.state.jobs}\r\n            refresh={this.setTabAndJobsByCategoryId.bind(\r\n              this,\r\n              this.state.category\r\n            )}\r\n          />\r\n          <div className={classes.pagination}>\r\n            <Pagination\r\n              count={this.state.totalPage}\r\n              page={this.state.pageNum}\r\n              onChange={this.changePagination.bind(this)}\r\n              color=\"primary\"\r\n              shape=\"rounded\"\r\n            />\r\n          </div>\r\n        </Paper>\r\n        <Fab\r\n          color=\"primary\"\r\n          className={classes.fab}\r\n          aria-label=\"add\"\r\n          onClick={this.editDialogShow.bind(this)}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n        <Edit\r\n          show={this.state.editDialog.show}\r\n          categoryId={this.state.editDialog.categoryId}\r\n          categoryName={this.state.editDialog.categoryName}\r\n          handleClose={this.createClose.bind(this)}\r\n          createSuccess={this.createSuccess.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Jobs);\r\n","import request from \"../utils/request.js\";\r\n\r\n/**\r\n * 用户注册\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function register(params) {\r\n  return request({\r\n    url: \"/register\",\r\n    method: \"post\",\r\n    data: params\r\n  });\r\n}\r\n\r\n/**\r\n * 用户登陆\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function login(params) {\r\n  return request({\r\n    url: \"/login\",\r\n    method: \"post\",\r\n    data: params\r\n  });\r\n}\r\n\r\n/**\r\n * 用户列表\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function users(params) {\r\n  return request({\r\n    url: \"/users\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 删除用户\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function deleteUsers(params) {\r\n  return request({\r\n    url: \"/user/delete\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n\r\n/**\r\n * 删除用户\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function roleEdit(params) {\r\n  return request({\r\n    url: \"/user/role_edit\",\r\n    method: \"get\",\r\n    params: params\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Role from \"../../config/role\";\r\nconst RLOECOLOR = [\"#f44336\", \"#f44336\", \"#ff9800\", \"#3f51b5\", \"#4caf50\"];\r\nclass RoleDesc extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span\r\n          className=\"tag\"\r\n          style={{ backgroundColor: RLOECOLOR[this.props.role] }}\r\n        >\r\n          {Role[this.props.role]}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoleDesc;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { users, deleteUsers, roleEdit } from \"../../api/user\";\r\nimport { IconButton, Tooltip } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ThumbDown from \"@material-ui/icons/ThumbDown\";\r\nimport ThumbUp from \"@material-ui/icons/ThumbUp\";\r\nimport Snackbar from \"../../components/snackbar\";\r\nimport RoleDesc from \"./roleDesc\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  sept: {\r\n    marginTop: 20,\r\n    padding: theme.spacing(3, 2)\r\n  }\r\n});\r\n\r\nclass User extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tableData: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getUserList();\r\n    window.wsUpdateDataFunc = () => {\r\n      this.getUserList();\r\n    };\r\n  }\r\n  componentWillUnmount() {\r\n    window.wsUpdateDataFunc = null;\r\n  }\r\n  getUserList() {\r\n    users()\r\n      .then(r => {\r\n        this.setState({ tableData: r });\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  destroyUser(row) {\r\n    deleteUsers({ id: row.ID })\r\n      .then(r => {\r\n        Snackbar.success(\"删除成功\");\r\n        this.getUserList();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  role(row, isUp = 0) {\r\n    roleEdit({ id: row.ID, isUp: isUp })\r\n      .then(r => {\r\n        Snackbar.success(\"修改成功\");\r\n        this.getUserList();\r\n      })\r\n      .catch(() => {});\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Paper className={classes.root}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>ID</TableCell>\r\n                <TableCell align=\"left\">用户名字</TableCell>\r\n                <TableCell align=\"left\">角色</TableCell>\r\n                <TableCell align=\"left\">备注</TableCell>\r\n                <TableCell align=\"center\">操作</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.tableData.map(row => (\r\n                <TableRow key={row.ID} hover>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.ID}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.Username}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <RoleDesc role={row.Role} />\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.Desc}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Tooltip title=\"角色提升\">\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={this.role.bind(this, row, 1)}\r\n                      >\r\n                        <ThumbUp />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"角色降级\">\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={this.role.bind(this, row, 0)}\r\n                      >\r\n                        <ThumbDown />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"删除用户\">\r\n                      <IconButton\r\n                        color=\"primary\"\r\n                        onClick={this.destroyUser.bind(this, row)}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(User);\r\n","import Dashboard from \"../views/dashboard\";\r\nimport Category from \"../views/category\";\r\nimport Repository from \"../views/repository\";\r\nimport Job from \"../views/job\";\r\nimport Users from \"../views/users\";\r\n\r\nimport CategoryIcon from \"@material-ui/icons/Category\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\n\r\nexport default [\r\n  {\r\n    title: \"仪表盘\",\r\n    path: \"/dashboard\",\r\n    isMenu: true,\r\n    icon: HomeIcon,\r\n    component: Dashboard\r\n  },\r\n  {\r\n    title: \"仓库列表\",\r\n    path: \"/repository\",\r\n    isMenu: true,\r\n    icon: DashboardIcon,\r\n    component: Repository\r\n  },\r\n  {\r\n    title: \"任务分类\",\r\n    path: \"/category\",\r\n    isMenu: true,\r\n    icon: CategoryIcon,\r\n    component: Category\r\n  },\r\n  {\r\n    title: \"部署任务\",\r\n    path: \"/job\",\r\n    isMenu: true,\r\n    icon: ViewListIcon,\r\n    component: Job\r\n  },\r\n  {\r\n    title: \"用户管理\",\r\n    path: \"/users\",\r\n    isMenu: true,\r\n    icon: PeopleIcon,\r\n    component: Users\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport TopBar from \"./topBar.js\";\r\nimport RouteList from \"../../router/route\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Config from \"../../config/index\";\r\nimport \"./admin.scss\";\r\n\r\nconst Layout = props => {\r\n  const [menuState, setMenuState] = React.useState(false);\r\n  const [title, setTitle] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    for (let i = 0; i < RouteList.length; i++) {\r\n      let r = RouteList[i];\r\n      if (r.path === props.location.pathname) {\r\n        setTitle(r.title);\r\n        document.title = r.title + \"-\" + Config.siteName;\r\n        return;\r\n      }\r\n    }\r\n  }, [props.location.pathname]);\r\n\r\n  const openMenu = menu => {\r\n    if (menu.path === props.location.pathname) return;\r\n    setTitle(menu.title);\r\n    setMenuState(false);\r\n    props.history.push(menu.path);\r\n  };\r\n\r\n  return (\r\n    <div id=\"admin\" className=\"admin\">\r\n      <TopBar\r\n        title={title}\r\n        toggle={() => {\r\n          setMenuState(true);\r\n        }}\r\n        clickRoute={openMenu}\r\n      />\r\n      <Drawer\r\n        anchor=\"top\"\r\n        open={menuState}\r\n        onClose={() => {\r\n          setMenuState(false);\r\n        }}\r\n        style={{ flexDirection: \"column\" }}\r\n      >\r\n        <div className=\"menuList\">\r\n          {RouteList.map(menu => {\r\n            if (menu.isMenu)\r\n              return (\r\n                <div className=\"menuBox\" key={menu.path}>\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    color=\"primary\"\r\n                    aria-label=\"menu\"\r\n                    onClick={() => {\r\n                      openMenu(menu);\r\n                    }}\r\n                  >\r\n                    <menu.icon />\r\n                  </IconButton>\r\n                  <p>{menu.title}</p>\r\n                </div>\r\n              );\r\n            return false;\r\n          })}\r\n        </div>\r\n      </Drawer>\r\n      <div className=\"container\">\r\n        <Switch>\r\n          {RouteList.map(route => {\r\n            return (\r\n              <Route\r\n                exact\r\n                key={route.path}\r\n                path={route.path}\r\n                component={route.component}\r\n              />\r\n            );\r\n          })}\r\n          <Redirect exact from=\"/\" to=\"/dashboard\" />\r\n          <Redirect to=\"/404\" />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Config from \"../config/index\";\r\n\r\nexport default function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://github.com/xusenlin/MareWood\">\r\n        {Config.siteName}\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Copyright from \"../../components/copyright\";\r\nimport { setToken, setUserInfo } from \"../../utils/dataStorage\";\r\nimport { login } from \"../../api/user\";\r\nconst Logo = require(\"../../assets/img/logo.svg\");\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  let rememberMe = localStorage.getItem(\"RememberMe\") === \"1\";\r\n  let initLoginInfo = JSON.parse(localStorage.getItem(\"LoginInfo\")) || {};\r\n\r\n  const [checked, setChecked] = React.useState(rememberMe);\r\n  const [username, setUsername] = useState(initLoginInfo.username);\r\n  const [password, setPassword] = useState(initLoginInfo.password);\r\n  const checkedChange = event => {\r\n    setChecked(event.target.checked);\r\n\r\n    if (event.target.checked) {\r\n      localStorage.setItem(\"RememberMe\", \"1\");\r\n    } else {\r\n      localStorage.removeItem(\"RememberMe\");\r\n    }\r\n  };\r\n\r\n  const usernameChange = event => {\r\n    setUsername(event.target.value);\r\n  };\r\n  const passwordChange = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n  const submitLogin = () => {\r\n    //登陆成功设置\r\n    login({ username, password })\r\n      .then(r => {\r\n        setToken(r.Token);\r\n        setUserInfo(r);\r\n        window.location.href = \"./\";\r\n        localStorage.setItem(\r\n          \"LoginInfo\",\r\n          JSON.stringify({ username, password })\r\n        );\r\n      })\r\n      .catch(() => {});\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <img style={{ width: 60, marginBottom: 20 }} src={Logo} alt=\"\" />\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          登陆\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            value={username}\r\n            onChange={usernameChange}\r\n            id=\"username\"\r\n            label=\"username\"\r\n            name=\"username\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            value={password}\r\n            required\r\n            fullWidth\r\n            onChange={passwordChange}\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={checked}\r\n                onChange={checkedChange}\r\n                value=\"remember\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={submitLogin}\r\n            className={classes.submit}\r\n          >\r\n            登陆\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              {/*<Link href=\"#\" variant=\"body2\">*/}\r\n              {/*    没有账户? 注册一个吧。*/}\r\n              {/*</Link>*/}\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#/register\" variant=\"body2\">\r\n                没有账户? 注册一个吧 ╯︿╰\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Copyright from \"../../components/copyright\";\r\nimport { register } from \"../../api/user\";\r\nimport snackbar from \"../../components/snackbar/index\";\r\nconst Logo = require(\"../../assets/img/logo.svg\");\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const usernameChange = event => {\r\n    setUsername(event.target.value);\r\n  };\r\n  const passwordChange = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n  const submitRegister = () => {\r\n    register({ username, password })\r\n      .then(() => {\r\n        snackbar.success(\"注册成功！\");\r\n      })\r\n      .catch(() => {});\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <img style={{ width: 60, marginBottom: 20 }} src={Logo} alt=\"\" />\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          注册\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                onChange={usernameChange}\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                onChange={passwordChange}\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <span>注册默认获得记者(Reporter)角色 </span>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            onClick={submitRegister}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            注册\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#/login\" variant=\"body2\">\r\n                已经有账户？去登陆 ^_^\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Style = {\r\n  notFound: {\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    fontSize: \"80px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  return <div style={Style.notFound}>4 0 4</div>;\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Admin from \"./views/layout/index.js\";\r\nimport Login from \"./views/login/index.js\";\r\nimport Register from \"./views/register/index.js\";\r\nimport NotFound from \"./views/error/404.js\";\r\nimport { getToken } from \"./utils/dataStorage.js\";\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/404\" component={NotFound} />\r\n          <Route path=\"/\">\r\n            {getToken() ? <Admin /> : <Redirect to=\"/login\" />}\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"nprogress/nprogress.css\";\r\nimport \"./assets/style/style.scss\";\r\nimport { getToken } from \"./utils/dataStorage.js\";\r\nimport { connWebsocket } from \"./utils/websocket.js\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nlet token = getToken();\r\nif (token && !window.ws && window.location.href.indexOf(\"/login\") === -1) {\r\n  connWebsocket(token);\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { host } from \"../config/url.js\";\r\nimport Snackbar, { notice } from \"../components/snackbar/index.js\";\r\n\r\nexport function connWebsocket(token) {\r\n  window.ws = new WebSocket(`ws://${host}/websocket?token=${token}`);\r\n  window.ws.onopen = () => {\r\n    Snackbar.success(\"WebSocket已连接\");\r\n  };\r\n  window.ws.onmessage = r => {\r\n    let data = JSON.parse(r.data);\r\n    notice(data.Type, data.Message);\r\n    if (window.wsUpdateDataFunc) {\r\n      window.wsUpdateDataFunc();\r\n    }\r\n  };\r\n\r\n  window.ws.onerror = () => {\r\n    Snackbar.error(\"WebSocket出错\");\r\n  };\r\n  window.ws.onclose = () => {\r\n    Snackbar.warning(\"WebSocket已关闭\");\r\n  };\r\n}\r\n"],"sourceRoot":""}